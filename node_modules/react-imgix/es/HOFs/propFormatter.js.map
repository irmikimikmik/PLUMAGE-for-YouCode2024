{"version":3,"file":"propFormatter.js","names":["React","PARAMS_EXP_MAP","formatSrc","src","domain","useHTTPS","arguments","length","undefined","indexOf","strippedDomain","replace","strippedSrc","prefix","formatProps","props","width","height","useHttps","_extends","collapseImgixParams","params","compactedParams","_i","_Object$entries","_objectEntries","_Object$entries$_i","_slicedToArray","k","v","processPropsHOF","Component","formattedProps","formattedImgixParams","imgixParams","createElement"],"sources":["../../src/HOFs/propFormatter.js"],"sourcesContent":["import * as React from \"react\";\nimport { PARAMS_EXP_MAP } from \"./constants\";\n\n/**\n * Creates a 1-step, or complete, URL from `domain` and `src` Strings.\n *\n * - First, the function checks if src has a defined `domain`. If it does, it\n * checks to see if `src` has a scheme, and prepends \"http\" or \"https\" as needed\n * - Otherwise, formatSrc formats `domain` and `src` Strings.\n *   - First it strips the two strings of the  leading and `/` or trailing `/`\n *     slash characters.\n *   - Then, it joins the two strings on a `/` character. IE,\n *    `strippedDomain + \"/\" + strippedSrc`.\n *   - If `domain` String argument `null` or `undefined`, the function returns\n *    the original `src` String.\n *\n * @param {String} src - URL that is either 1-step or 2-step\n * @param {String} domain - Domain string, optional\n * @returns 1-step, or complete, URL String. Ex, _assets.ix.net/foo/bar.jpg_\n */\nexport function formatSrc(src, domain, useHTTPS = true) {\n  // ignore if already has protocol\n  if (src.indexOf(\"://\") !== -1) {\n    return src;\n  } else {\n    // prepend domain if defined\n    if (domain == null) {\n      return src;\n    }\n    const strippedDomain = domain ? domain.replace(/^\\/|\\/$/g, \"\") : \"\";\n    const strippedSrc = src.replace(/^\\/|\\/$/g, \"\");\n    const prefix = useHTTPS ? \"https://\" : \"http://\";\n    return prefix + strippedDomain + \"/\" + strippedSrc;\n  }\n}\n\n/**\n * A function that formats the following values in the props Object:\n *\n * - `width`: if undefined or negative gets set to `undefined`.\n * - `height`: if undefined or negative gets set to `undefined`.\n * - `src`: concatenated to `domain` if `src` defined and has no domain.\n *\n * @param {Object} props\n * @returns A formatted `props` Object.\n */\nexport const formatProps = (props) => {\n  const width = !props.width || props.width <= 1 ? undefined : props.width;\n  const height = !props.height || props.height <= 1 ? undefined : props.height;\n  const src = props.src\n    ? formatSrc(props.src, props.domain, props.useHttps)\n    : undefined;\n\n  return Object.assign({}, props, { width, height, src });\n};\n\n/**\n * Function that shortens params keys according to the imgix spec.\n * @param {Object} params - imgixParams object\n * @returns imgixParams object with shortened keys\n * @see https://www.imgix.com/docs/reference\n */\nexport const collapseImgixParams = (params) => {\n  if (params == null) {\n    return params;\n  }\n  const compactedParams = {};\n  for (const [k, v] of Object.entries(params)) {\n    if (PARAMS_EXP_MAP[k]) {\n      compactedParams[PARAMS_EXP_MAP[k]] = v;\n    } else {\n      compactedParams[k] = v;\n    }\n  }\n  return compactedParams;\n};\n\n/**\n * `processPropsHOF` takes a Component's props and formats them to adhere to the\n * ImgixClient's specifications.\n *\n * @param {React.Element<typeof Component>} Component - A react component with\n * defined `props`.\n * @returns A React Component who's `props` have been formatted and\n * `imgixParams` have been collapsed.\n */\nexport const processPropsHOF = (Component) => (props) => {\n  const formattedProps = formatProps(props);\n  const formattedImgixParams = collapseImgixParams(formattedProps.imgixParams);\n\n  return <Component {...formattedProps} imgixParams={formattedImgixParams} />;\n};\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,aAAa;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,GAAG,EAAEC,MAAM,EAAmB;EAAA,IAAjBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACpD;EACA,IAAIH,GAAG,CAACM,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7B,OAAON,GAAG;EACZ,CAAC,MAAM;IACL;IACA,IAAIC,MAAM,IAAI,IAAI,EAAE;MAClB,OAAOD,GAAG;IACZ;IACA,IAAMO,cAAc,GAAGN,MAAM,GAAGA,MAAM,CAACO,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,EAAE;IACnE,IAAMC,WAAW,GAAGT,GAAG,CAACQ,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAC/C,IAAME,MAAM,GAAGR,QAAQ,GAAG,UAAU,GAAG,SAAS;IAChD,OAAOQ,MAAM,GAAGH,cAAc,GAAG,GAAG,GAAGE,WAAW;EACpD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;EACpC,IAAMC,KAAK,GAAG,CAACD,KAAK,CAACC,KAAK,IAAID,KAAK,CAACC,KAAK,IAAI,CAAC,GAAGR,SAAS,GAAGO,KAAK,CAACC,KAAK;EACxE,IAAMC,MAAM,GAAG,CAACF,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,IAAI,CAAC,GAAGT,SAAS,GAAGO,KAAK,CAACE,MAAM;EAC5E,IAAMd,GAAG,GAAGY,KAAK,CAACZ,GAAG,GACjBD,SAAS,CAACa,KAAK,CAACZ,GAAG,EAAEY,KAAK,CAACX,MAAM,EAAEW,KAAK,CAACG,QAAQ,CAAC,GAClDV,SAAS;EAEb,OAAOW,QAAA,CAAc,CAAC,CAAC,EAAEJ,KAAK,EAAE;IAAEC,KAAK,EAALA,KAAK;IAAEC,MAAM,EAANA,MAAM;IAAEd,GAAG,EAAHA;EAAI,CAAC,CAAC;AACzD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMiB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,MAAM,EAAK;EAC7C,IAAIA,MAAM,IAAI,IAAI,EAAE;IAClB,OAAOA,MAAM;EACf;EACA,IAAMC,eAAe,GAAG,CAAC,CAAC;EAC1B,SAAAC,EAAA,MAAAC,eAAA,GAAqBC,cAAA,CAAeJ,MAAM,CAAC,EAAAE,EAAA,GAAAC,eAAA,CAAAjB,MAAA,EAAAgB,EAAA,IAAE;IAAxC,IAAAG,kBAAA,GAAAC,cAAA,CAAAH,eAAA,CAAAD,EAAA;MAAOK,CAAC,GAAAF,kBAAA;MAAEG,CAAC,GAAAH,kBAAA;IACd,IAAIzB,cAAc,CAAC2B,CAAC,CAAC,EAAE;MACrBN,eAAe,CAACrB,cAAc,CAAC2B,CAAC,CAAC,CAAC,GAAGC,CAAC;IACxC,CAAC,MAAM;MACLP,eAAe,CAACM,CAAC,CAAC,GAAGC,CAAC;IACxB;EACF;EACA,OAAOP,eAAe;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,SAAS;EAAA,OAAK,UAAChB,KAAK,EAAK;IACvD,IAAMiB,cAAc,GAAGlB,WAAW,CAACC,KAAK,CAAC;IACzC,IAAMkB,oBAAoB,GAAGb,mBAAmB,CAACY,cAAc,CAACE,WAAW,CAAC;IAE5E,oBAAOlC,KAAA,CAAAmC,aAAA,CAACJ,SAAS,EAAAZ,QAAA,KAAKa,cAAc;MAAEE,WAAW,EAAED;IAAqB,EAAE,CAAC;EAC7E,CAAC;AAAA"}