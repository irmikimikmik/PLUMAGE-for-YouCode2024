{"version":3,"file":"react-imgix-bg.js","names":["_react","_interopRequireDefault","require","_reactMeasure","_common","_constants","_constructUrl","_extractQueryParams3","_findClosest","_targetWidths","_HOFs","obj","__esModule","default","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","return","isArray","_extends","assign","bind","target","arguments","source","key","hasOwnProperty","apply","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","findNearestWidth","actualWidth","findClosest","targetWidths","toFixed","dp","__shouldComponentUpdate","exports","nextProps","contentRect","bounds","prevWidth","width","prevHeight","height","nextContentRect","nextBounds","nextWidth","nextHeight","customizer","oldProp","newProp","shallowEqual","b","propsEqual","BackgroundImpl","__BackgroundImpl","_React$Component","_super","shouldComponentUpdate","render","_this$props","measureRef","_this$props$imgixPara","imgixParams","onLoad","disableLibraryParam","disablePathEncoding","src","children","_this$props$className","className","forcedWidth","w","forcedHeight","h","hasDOMDimensions","htmlAttributes","dpr","global","devicePixelRatio","ref","onRef","el","_ref","bothWidthAndHeightPassed","ar","neitherWidthNorHeightPassed","Math","ceil","isReady","commonProps","createElement","concat","renderedSrc","_extractQueryParams","extractQueryParams","_extractQueryParams2","rawSrc","params","longImgixParams","fit","ixlib","PACKAGE_VERSION","srcOptions","constructUrl","style","backgroundImage","backgroundSize","React","Component","Background","mergeComponentPropsHOF","processPropsHOF","withContentRect"],"sources":["../src/react-imgix-bg.jsx"],"sourcesContent":["import React from \"react\";\nimport { withContentRect } from \"react-measure\";\nimport { shallowEqual } from \"./common\";\nimport { PACKAGE_VERSION } from \"./constants\";\nimport constructUrl from \"./constructUrl\";\nimport extractQueryParams from \"./extractQueryParams\";\nimport findClosest from \"./findClosest\";\nimport targetWidths from \"./targetWidths\";\nimport { mergeComponentPropsHOF, processPropsHOF } from \"./HOFs\";\n\nconst findNearestWidth = (actualWidth) =>\n  findClosest(actualWidth, targetWidths);\n\nconst toFixed = (dp, value) => +value.toFixed(dp);\n\nexport const __shouldComponentUpdate = (props, nextProps) => {\n  const contentRect = props.contentRect;\n  const bounds = contentRect.bounds;\n  const { width: prevWidth, height: prevHeight } = bounds;\n\n  const nextContentRect = nextProps.contentRect;\n  const nextBounds = nextContentRect.bounds;\n  const { width: nextWidth, height: nextHeight } = nextBounds;\n\n  // If neither of the previous nor next dimensions are present,\n  // re-render.\n  if (!nextWidth || !nextHeight || !prevWidth || !prevHeight) {\n    return true;\n  }\n\n  // The component has been rendered at least twice by this point\n  // and both the previous and next dimensions should be defined.\n  // Only update if the nextWidth is greater than the prevWidth.\n  if (prevWidth && nextWidth && nextWidth > prevWidth) {\n    return true;\n  }\n\n  // Similarly, only update if the next height is greater than\n  // the previous height.\n  if (prevHeight && nextHeight && nextHeight > prevHeight) {\n    return true;\n  }\n\n  const customizer = (oldProp, newProp, key) => {\n    // these keys are ignored from prop checking process\n    if (key === \"contentRect\" || key === \"measure\" || key === \"measureRef\") {\n      return true;\n    }\n\n    if (key === \"children\") {\n      return oldProp == newProp;\n    }\n\n    if (key === \"imgixParams\") {\n      return shallowEqual(oldProp, newProp, (a, b) => {\n        if (Array.isArray(a)) {\n          return shallowEqual(a, b);\n        }\n        return undefined;\n      });\n    }\n\n    if (key === \"htmlAttributes\") {\n      return shallowEqual(oldProp, newProp);\n    }\n\n    return undefined; // handled by shallowEqual\n  };\n\n  // If we made it here, we need to check if the \"top-level\"\n  // props have changed (e.g. disableLibraryParam).\n  const propsEqual = shallowEqual(props, nextProps, customizer);\n\n  return !propsEqual;\n};\n\nclass BackgroundImpl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return __shouldComponentUpdate(this.props, nextProps);\n  }\n\n  render() {\n    const {\n      measureRef,\n      contentRect,\n      imgixParams = {},\n      onLoad,\n      disableLibraryParam,\n      disablePathEncoding,\n      src,\n      children,\n      className = \"\",\n    } = this.props;\n    const { w: forcedWidth, h: forcedHeight } = imgixParams;\n    const hasDOMDimensions =\n      contentRect.bounds.width != null && contentRect.bounds.height != null;\n    const htmlAttributes = this.props.htmlAttributes || {};\n    const dpr = toFixed(2, imgixParams.dpr || global.devicePixelRatio || 1);\n    const ref = htmlAttributes.ref;\n    const onRef = (el) => {\n      measureRef(el);\n      if (typeof ref === \"function\") {\n        ref(el);\n      }\n    };\n\n    const { width, height } = (() => {\n      const bothWidthAndHeightPassed =\n        forcedWidth != null && forcedHeight != null;\n\n      if (bothWidthAndHeightPassed) {\n        return { width: forcedWidth, height: forcedHeight };\n      }\n\n      if (!hasDOMDimensions) {\n        return { width: undefined, height: undefined };\n      }\n      const ar = contentRect.bounds.width / contentRect.bounds.height;\n\n      const neitherWidthNorHeightPassed =\n        forcedWidth == null && forcedHeight == null;\n      if (neitherWidthNorHeightPassed) {\n        const width = findNearestWidth(contentRect.bounds.width);\n        const height = Math.ceil(width / ar);\n        return { width, height };\n      }\n      if (forcedWidth != null) {\n        const height = Math.ceil(forcedWidth / ar);\n        return { width: forcedWidth, height };\n      } else if (forcedHeight != null) {\n        const width = Math.ceil(forcedHeight * ar);\n        return { width, height: forcedHeight };\n      }\n    })();\n    const isReady = width != null && height != null;\n\n    const commonProps = {\n      ...htmlAttributes,\n    };\n\n    if (!isReady) {\n      return (\n        <div\n          {...commonProps}\n          className={`react-imgix-bg-loading ${className}`}\n          ref={onRef}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    const renderedSrc = (() => {\n      const [rawSrc, params] = extractQueryParams(src);\n      const longImgixParams = {\n        ...params,\n        fit: \"crop\",\n        ...imgixParams,\n        ...(disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` }),\n        width,\n        height,\n        dpr,\n      };\n\n      const srcOptions = {\n        disablePathEncoding,\n      }\n\n      return constructUrl(rawSrc, longImgixParams, srcOptions);\n    })();\n\n    const style = {\n      ...htmlAttributes.style,\n      backgroundImage: `url(${renderedSrc})`,\n      backgroundSize:\n        (htmlAttributes.style || {}).backgroundSize !== undefined\n          ? htmlAttributes.style.backgroundSize\n          : \"cover\",\n    };\n\n    return (\n      <div {...commonProps} className={className} ref={onRef} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n\nconst Background = mergeComponentPropsHOF(\n  processPropsHOF(withContentRect(\"bounds\")(BackgroundImpl))\n);\n\nexport { Background, BackgroundImpl as __BackgroundImpl };\n"],"mappings":"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"}