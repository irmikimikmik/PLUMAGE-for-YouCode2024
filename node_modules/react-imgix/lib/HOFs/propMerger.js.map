{"version":3,"file":"propMerger.js","names":["_react","_interopRequireDefault","require","_HOCs","obj","__esModule","default","_objectEntries","entries","keys","Object","k","length","push","_typeof","o","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","minLen","_arrayLikeToArray","n","toString","call","slice","name","Array","from","test","len","arr2","r","l","t","e","u","a","f","next","done","value","return","isArray","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","mergeProps","exports","src","destination","newProps","newPropKeys","_i","_Object$entries","_Object$entries$_i","v","indexOf","mergeComponentPropsHOF","Component","mergeComponentPropsHOFInner","props","contextProps","useImgixContext","createElement","childProps"],"sources":["../../src/HOFs/propMerger.js"],"sourcesContent":["import React from \"react\";\nimport { useImgixContext } from \"../HOCs\";\n\n/**\n * Merges the `src` object into the `destination` object. Destination values are\n * not overwritten by source values. Destination properties that resolve to\n * `undefined` or `null` are not overwritten if a destination value exists\n * unless destination key does not exist . It recursively merges the\n * `imgixParams` and `htmlAttributes` values.\n *\n * @param {Object} src - The Provider component's props object\n * @param {Object} destination - The child component's props object\n * @returns Object with the combined values from `src` & `destination` Objects\n *\n * @example\n *  const src = {\n *    width: 100,\n *    height: 200,\n *    imgixParams: { ar: \"1:2\", dpr: 2},\n *    htmlAttributes: { styles: \"width: 50\" }\n *  }\n *  const destination = {\n *    width: 101,\n *    height: 201,\n *    imgixParams: { dpr: 1 },\n *    htmlAttributes: { styles: \"width: 100\" }\n *  }\n *  const result = mergeProps(src, destination);\n *\n *  {\n *    width: 101,\n *    height: 201,\n *    imgixParams: { ar: \"1:2\", dpr: 1 },\n *    htmlAttributes: { styles: \"width: 100\" }\n *  }\n *\n */\nexport const mergeProps = (src, destination) => {\n  if (src == null && destination !== null) {\n    return destination;\n  }\n  if (src !== null && destination == null) {\n    return src;\n  }\n  if (src == null && destination == null) {\n    return {};\n  }\n\n  const newProps = { ...destination };\n  const newPropKeys = Object.keys(newProps);\n\n  for (const [k, v] of Object.entries(src)) {\n    if (newPropKeys.indexOf(k) == -1 && v !== null) {\n      newProps[k] = v;\n    }\n    // recursively merge imgixParams and htmlAttributes\n    if (k === \"imgixParams\" || k === \"htmlAttributes\") {\n      if (v !== null) {\n        newProps[k] = mergeProps(src[k], newProps[k]);\n      }\n    }\n  }\n  return newProps;\n};\n\n/**\n * `mergeComponentPropsHOF` tries to invoke `React.useContext()`. If context is\n * `undefined`, context is being accessed outside of an `ImgixContext` provider\n * and the Component is returned as is.\n *\n * Otherwise, it merges a Component's props with the `ImgixContext` props and\n * return a Component with the merged `props`.\n * @param {React.Element <typeof Component} Component -  with defined `props`.\n * @returns Component with merged `props`.\n */\nexport const mergeComponentPropsHOF = (Component) =>\n  function mergeComponentPropsHOFInner(props) {\n    const contextProps = useImgixContext();\n    if (contextProps == null) {\n      return <Component {...props} />;\n    }\n\n    const childProps = mergeProps(contextProps, props);\n    return <Component {...childProps} />;\n  };\n"],"mappings":"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"}