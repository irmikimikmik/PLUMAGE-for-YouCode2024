{"version":3,"file":"constructUrl.js","names":["_jsCore","_interopRequireDefault","require","_extractQueryParams3","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","iter","Symbol","iterator","Array","from","_slicedToArray","_iterableToArrayLimit","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","test","len","arr2","r","l","t","e","u","a","f","next","done","push","value","return","isArray","PACKAGE_VERSION","PARAM_EXPANSION","freeze","brightness","contrast","exposure","gamma","highlights","hue","invert","saturation","shaddows","shadows","sharpness","vibrance","blend","border","padding","faces","download","DPI","format","quality","orientation","blurring","halftone","monotone","pixelate","height","width","DEFAULT_OPTIONS","auto","constructUrl","src","longImgixParams","srcOptions","params","compactParamKeys","_extractClientAndPath","extractClientAndPathComponents","client","pathComponents","buildURL","join","keys","keysLength","_src$split","split","_src$split2","scheme","rest","_rest$split","_rest$split2","domain","useHTTPS","ImgixClient","includeLibraryParam","buildURLPublic","imgixParams","undefined","options","disableLibraryParam","_extractQueryParams","extractQueryParams","_extractQueryParams2","rawSrc","ixlib","concat","_default","exports"],"sources":["../src/constructUrl.js"],"sourcesContent":["/*\nCopyright Â© 2015 by Coursera\nLicensed under the Apache License 2.0, seen https://github.com/coursera/react-imgix/blob/master/LICENSE\n\nMinor syntax modifications have been made\n*/\n\nconst PACKAGE_VERSION = require(\"../package.json\").version;\nimport ImgixClient from \"@imgix/js-core\";\nimport extractQueryParams from \"./extractQueryParams\";\n\n// @see https://www.imgix.com/docs/reference\nvar PARAM_EXPANSION = Object.freeze({\n  // Adjustment\n  brightness: \"bri\",\n  contrast: \"con\",\n  exposure: \"exp\",\n  gamma: \"gam\",\n  highlights: \"high\",\n  hue: \"hue\",\n  invert: \"invert\",\n  saturation: \"sat\",\n  shaddows: \"shad\",\n  shadows: \"shad\",\n  sharpness: \"sharp\",\n  \"unsharp-mask\": \"usm\",\n  \"unsharp-radius\": \"usmrad\",\n  vibrance: \"vib\",\n\n  // Automatic\n  \"auto-features\": \"auto\",\n\n  // Background\n  \"background-color\": \"bg\",\n\n  // Blend\n  blend: \"blend\",\n  \"blend-mode\": \"bm\",\n  \"blend-align\": \"ba\",\n  \"blend-alpha\": \"balph\",\n  \"blend-padding\": \"bp\",\n  \"blend-width\": \"bw\",\n  \"blend-height\": \"bh\",\n  \"blend-fit\": \"bf\",\n  \"blend-crop\": \"bc\",\n  \"blend-size\": \"bs\",\n  \"blend-x\": \"bx\",\n  \"blend-y\": \"by\",\n\n  // Border & Padding\n  border: \"border\",\n  padding: \"pad\",\n\n  // Face Detection\n  \"face-index\": \"faceindex\",\n  \"face-padding\": \"facepad\",\n  faces: \"faces\",\n\n  // Format\n  \"chroma-subsampling\": \"chromasub\",\n  \"color-quantization\": \"colorquant\",\n  download: \"dl\",\n  DPI: \"dpi\",\n  format: \"fm\",\n  \"lossless-compression\": \"lossless\",\n  quality: \"q\",\n\n  // Mask\n  \"mask-image\": \"mask\",\n\n  // Mask\n  \"noise-blur\": \"nr\",\n  \"noise-sharpen\": \"nrs\",\n\n  // Palette n/a\n  // PDF n/a\n  // Pixel Density n/a\n\n  // Rotation\n  \"flip-direction\": \"flip\",\n  orientation: \"or\",\n  \"rotation-angle\": \"rot\",\n\n  // Size\n  \"crop-mode\": \"crop\",\n  \"fit-mode\": \"fit\",\n  \"image-height\": \"h\",\n  \"image-width\": \"w\",\n\n  // Stylize\n  blurring: \"blur\",\n  halftone: \"htn\",\n  monotone: \"mono\",\n  pixelate: \"px\",\n  \"sepia-tone\": \"sepia\",\n\n  // Trim TODO\n  // Watermark TODO\n\n  // Extra\n  height: \"h\",\n  width: \"w\",\n});\n\nvar DEFAULT_OPTIONS = Object.freeze({\n  auto: \"format\", // http://www.imgix.com/docs/reference/automatic#param-auto\n});\n\n/**\n * Construct a URL for an image with an Imgix proxy, expanding image options\n * per the [API reference docs](https://www.imgix.com/docs/reference).\n * @param  {String} src         src of raw image\n * @param  {Object} longImgixParams map of image API options, in long or short form per expansion rules\n * @return {String}             URL of image src transformed by Imgix\n */\nfunction constructUrl(src, longImgixParams, srcOptions) {\n  if (!src) {\n    return \"\";\n  }\n  const params = compactParamKeys(longImgixParams);\n  const { client, pathComponents } = extractClientAndPathComponents(src);\n  return client.buildURL(pathComponents.join(\"/\"), params, srcOptions);\n}\n\nfunction compactParamKeys(longImgixParams) {\n  const keys = Object.keys(longImgixParams);\n  const keysLength = keys.length;\n  const params = {};\n  for (let i = 0; i < keysLength; i++) {\n    let key = keys[i];\n    if (PARAM_EXPANSION[key]) {\n      params[PARAM_EXPANSION[key]] = longImgixParams[key];\n    } else {\n      params[key] = longImgixParams[key];\n    }\n  }\n\n  return params;\n}\n\nfunction extractClientAndPathComponents(src) {\n  const [scheme, rest] = src.split(\"://\");\n  const [domain, ...pathComponents] = rest.split(\"/\");\n  let useHTTPS = scheme == \"https\";\n\n  const client = new ImgixClient({\n    domain: domain,\n    useHTTPS: useHTTPS,\n    includeLibraryParam: false,\n  });\n\n  return { client, pathComponents };\n}\n\nfunction buildURLPublic(src, imgixParams = {}, options = {}) {\n  const { disableLibraryParam } = options;\n\n  const [rawSrc, params] = extractQueryParams(src);\n\n  return constructUrl(\n    rawSrc,\n    Object.assign(\n      {},\n      params,\n      imgixParams,\n      disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` }\n    )\n  );\n}\n\nexport default constructUrl;\n\nexport { buildURLPublic, compactParamKeys, extractClientAndPathComponents };\n"],"mappings":"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"}