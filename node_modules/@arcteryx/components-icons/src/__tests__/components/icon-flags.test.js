import React from "react";
import { render } from "@testing-library/react";
import Icon from "../../components/icon";
import "jest-styled-components";
import FlagIconList from "../../config/flag-icon-list";

describe("Icon", () => {
  let container;
  let svg;

  beforeEach(() => {
    ({ container } = render(<Icon type="flag-us" width="50" height="30" />));
    svg = container.querySelector("svg");
  });

  describe("Rendering based on type prop", () => {
    it("renders the icon when given a valid type prop", () => {
      expect(svg).toBeInTheDocument();
    });

    it("does not render the icon when given an invalid type prop", () => {
      const { container } = render(<Icon type="invalid" />);
      const invalidSvg = container.querySelector("svg");
      expect(invalidSvg).not.toBeInTheDocument();
    });
  });

  describe("Attributes based on props", () => {
    it("sets the correct width and height attributes", () => {
      expect(svg).toHaveAttribute("width", "50");
      expect(svg).toHaveAttribute("height", "30");
    });
  });

  describe("Flag Icon", () => {
    const types = Object.keys(FlagIconList);

    test.each(types)("renders correctly for icon type", type => {
      const { container } = render(<Icon type={type} />);

      // Check if the icon is in the document
      expect(container.firstChild).toBeInTheDocument();
    });
  });
});
