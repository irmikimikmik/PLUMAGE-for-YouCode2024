{"version":3,"file":"index.js","sources":["../../src/useIntersectionObserver.js","../../src/useSSR.js","../../src/useIsOnScreen.js"],"sourcesContent":["import { useEffect } from \"react\";\n\n/**\n * useIntersectionObserver\n * @param {ref} target ref of the element\n * @param {object} src\n * @param {function} onIntersect callback\n * @param {number} threshold\n * @param {string} rootMargin how much space from the screen to when the window meets\n * @param {boolean} enabled enables or disables the hook\n * @param {array} deps list of products\n * @param {number} delay to handle timing issues from smooth scrolling when product changes\n */\n\nexport const useIntersectionObserver = ({\n  target,\n  src = null,\n  onIntersect,\n  threshold = 0,\n  rootMargin = \"0px\",\n  enabled = true,\n  deps = null,\n  delay = 0,\n}) => {\n  useEffect(() => {\n    const { current } = target;\n    let observer;\n    if (enabled && current && typeof IntersectionObserver !== \"undefined\") {\n      setTimeout(() => {\n        observer = new IntersectionObserver(onIntersect, {\n          rootMargin,\n          threshold,\n          root: src ? src.current : null,\n        });\n        observer.observe(current);\n      }, delay);\n    }\n\n    return () => {\n      if (observer) {\n        observer.unobserve(current);\n      }\n    };\n  }, deps);\n};\n","import { useState, useEffect, useMemo } from \"react\";\n\nexport const useSSR = () => {\n  const isDOMavailable = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n  const [inBrowser, setInBrowser] = useState(isDOMavailable);\n\n  useEffect(() => {\n    setInBrowser(isDOMavailable);\n    return () => {\n      setInBrowser(false);\n    };\n  }, []);\n\n  return useMemo(\n    () => ({\n      isBrowser: inBrowser,\n      isServer: !inBrowser,\n      canUseWorkers: typeof Worker !== \"undefined\",\n      canUseEventListeners: inBrowser && !!window.addEventListener,\n      canUseViewport: inBrowser && !!window.screen,\n    }),\n    [inBrowser]\n  );\n};\n","import { useRef, useState } from \"react\";\nimport { useIntersectionObserver } from \"./useIntersectionObserver\";\n\n/** Only changes state to isOnScreen once then disables the observer */\nexport function useIsOnScreen({ rootMargin = \"500px\" } = { rootMargin: \"500px\" }) {\n  const ref = useRef(null);\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  useIntersectionObserver({\n    target: ref,\n    rootMargin,\n    enabled: !isOnScreen,\n    deps: [isOnScreen],\n    onIntersect: ([{ isIntersecting }]) => {\n      setIsOnScreen(isIntersecting);\n    },\n  });\n  return {\n    ref,\n    isOnScreen,\n  };\n}\n"],"names":["useIntersectionObserver","target","src","onIntersect","threshold","rootMargin","enabled","deps","delay","useEffect","current","observer","IntersectionObserver","setTimeout","root","observe","unobserve","useSSR","isDOMavailable","window","document","createElement","inBrowser","setInBrowser","useState","useMemo","isBrowser","isServer","canUseWorkers","Worker","canUseEventListeners","addEventListener","canUseViewport","screen","useIsOnScreen","ref","useRef","isOnScreen","setIsOnScreen","isIntersecting"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,uBAAuB,GAAG,IASjC,IAAA;EAAA,IATkC;IACtCC,MAAM;AACNC,IAAAA,GAAG,GAAG,IAAI;IACVC,WAAW;AACXC,IAAAA,SAAS,GAAG,CAAC;AACbC,IAAAA,UAAU,GAAG,KAAK;AAClBC,IAAAA,OAAO,GAAG,IAAI;AACdC,IAAAA,IAAI,GAAG,IAAI;AACXC,IAAAA,KAAK,GAAG,CAAA;GACT,GAAA,IAAA,CAAA;AACCC,EAAAA,eAAS,CAAC,MAAM;IACd,MAAM;AAAEC,MAAAA,OAAAA;AAAQ,KAAC,GAAGT,MAAM,CAAA;AAC1B,IAAA,IAAIU,QAAQ,CAAA;IACZ,IAAIL,OAAO,IAAII,OAAO,IAAI,OAAOE,oBAAoB,KAAK,WAAW,EAAE;AACrEC,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,QAAQ,GAAG,IAAIC,oBAAoB,CAACT,WAAW,EAAE;UAC/CE,UAAU;UACVD,SAAS;AACTU,UAAAA,IAAI,EAAEZ,GAAG,GAAGA,GAAG,CAACQ,OAAO,GAAG,IAAA;AAC5B,SAAC,CAAC,CAAA;AACFC,QAAAA,QAAQ,CAACI,OAAO,CAACL,OAAO,CAAC,CAAA;OAC1B,EAAEF,KAAK,CAAC,CAAA;AACX,KAAA;AAEA,IAAA,OAAO,MAAM;AACX,MAAA,IAAIG,QAAQ,EAAE;AACZA,QAAAA,QAAQ,CAACK,SAAS,CAACN,OAAO,CAAC,CAAA;AAC7B,OAAA;KACD,CAAA;GACF,EAAEH,IAAI,CAAC,CAAA;AACV;;AC1CO,MAAMU,MAAM,GAAG,MAAM;AAC1B,EAAA,MAAMC,cAAc,GAAG,CAAC,EAAE,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,CAAA;EAC5G,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,cAAQ,CAACN,cAAc,CAAC,CAAA;AAE1DT,EAAAA,eAAS,CAAC,MAAM;IACdc,YAAY,CAACL,cAAc,CAAC,CAAA;AAC5B,IAAA,OAAO,MAAM;MACXK,YAAY,CAAC,KAAK,CAAC,CAAA;KACpB,CAAA;GACF,EAAE,EAAE,CAAC,CAAA;EAEN,OAAOE,aAAO,CACZ,OAAO;AACLC,IAAAA,SAAS,EAAEJ,SAAS;IACpBK,QAAQ,EAAE,CAACL,SAAS;AACpBM,IAAAA,aAAa,EAAE,OAAOC,MAAM,KAAK,WAAW;AAC5CC,IAAAA,oBAAoB,EAAER,SAAS,IAAI,CAAC,CAACH,MAAM,CAACY,gBAAgB;AAC5DC,IAAAA,cAAc,EAAEV,SAAS,IAAI,CAAC,CAACH,MAAM,CAACc,MAAAA;AACxC,GAAC,CAAC,EACF,CAACX,SAAS,CAAC,CACZ,CAAA;AACH;;ACpBA;AACO,SAASY,aAAa,GAAqD;EAAA,IAApD;AAAE7B,IAAAA,UAAU,GAAG,OAAA;AAAQ,GAAC,GAAG,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAAEA,IAAAA,UAAU,EAAE,OAAA;GAAS,CAAA;AAC9E,EAAA,MAAM8B,GAAG,GAAGC,YAAM,CAAC,IAAI,CAAC,CAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,cAAQ,CAAC,KAAK,CAAC,CAAA;AACnDxB,EAAAA,uBAAuB,CAAC;AACtBC,IAAAA,MAAM,EAAEkC,GAAG;IACX9B,UAAU;IACVC,OAAO,EAAE,CAAC+B,UAAU;IACpB9B,IAAI,EAAE,CAAC8B,UAAU,CAAC;AAClBlC,IAAAA,WAAW,EAAE,IAA0B,IAAA;AAAA,MAAA,IAAzB,CAAC;AAAEoC,QAAAA,cAAAA;AAAe,OAAC,CAAC,GAAA,IAAA,CAAA;MAChCD,aAAa,CAACC,cAAc,CAAC,CAAA;AAC/B,KAAA;AACF,GAAC,CAAC,CAAA;EACF,OAAO;IACLJ,GAAG;AACHE,IAAAA,UAAAA;GACD,CAAA;AACH;;;;;;"}