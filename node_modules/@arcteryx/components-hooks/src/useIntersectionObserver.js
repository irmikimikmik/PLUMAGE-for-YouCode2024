import { useEffect } from "react";

/**
 * useIntersectionObserver
 * @param {ref} target ref of the element
 * @param {object} src
 * @param {function} onIntersect callback
 * @param {number} threshold
 * @param {string} rootMargin how much space from the screen to when the window meets
 * @param {boolean} enabled enables or disables the hook
 * @param {array} deps list of products
 * @param {number} delay to handle timing issues from smooth scrolling when product changes
 */

export const useIntersectionObserver = ({
  target,
  src = null,
  onIntersect,
  threshold = 0,
  rootMargin = "0px",
  enabled = true,
  deps = null,
  delay = 0,
}) => {
  useEffect(() => {
    const { current } = target;
    let observer;
    if (enabled && current && typeof IntersectionObserver !== "undefined") {
      setTimeout(() => {
        observer = new IntersectionObserver(onIntersect, {
          rootMargin,
          threshold,
          root: src ? src.current : null,
        });
        observer.observe(current);
      }, delay);
    }

    return () => {
      if (observer) {
        observer.unobserve(current);
      }
    };
  }, deps);
};
