import React, { forwardRef } from "react";
import PropTypes from "prop-types";
import styled from "styled-components";

const ToggleButtonWrap = styled.span`
  position: relative;
  display: block;
  width: 2rem;
  height: 1rem;
`;

const ToggleUI = styled.span`
  border: 1px solid transparent;
  position: relative;
  cursor: pointer;
  display: block;

  // account for border
  height: calc(1rem + 2px);
  width: calc(2rem + 2px);
  left: -1px;
  top: -1px;

  &:focus {
    border: 2px solid #e9e9e9;
  }
  &:before,
  &:after {
    content: "";
    display: block;
    background: var(--white);
  }
  &:before {
    transition: transform 0.3s ease;
    height: 1rem;
    width: 2rem;
    min-width: 2rem;
    border-radius: 0.65em;
    background: var(--medium-grey);
  }
  &:after {
    transition: transform 0.3s ease;
    position: absolute;
    border: 1px solid var(--medium-grey);
    background: var(--white);
    background-size: 0;
    background-position: center;
    top: 0;
    transition: transform 0.3s ease;
    transform: translateX(0);
    height: 1rem;
    width: 1rem;
    border-radius: 50%;
  }
`;

const Checkbox = styled.input.attrs({ type: "checkbox" })`
  position: absolute;
  cursor: pointer;
  top: 0;
  width: 100%;
  height: 100%;
  left: 0;
  margin: 0;
  z-index: 1;
  opacity: 0;

  &:hover + ${ToggleUI}:after, &:focus + ${ToggleUI}:after {
    position: absolute;
    background-size: 1rem;
    transform: translateX(0px);
    height: 1rem;
    width: 1rem;
    border-radius: 50%;
    box-shadow: 0 0 0 5px var(--background-grey);
  }

  &[data-valid="false"] + ${ToggleUI}:before {
    border: 1px solid var(--warning-red);
  }

  &:focus + ${ToggleUI} {
    &::before {
      outline: #5d9dd5 solid 1px;
    }
    &::after {
      box-shadow: 0 0 0 5px var(--background-grey);
    }
  }

  &:checked + ${ToggleUI}:before {
    background: var(--black);
  }

  &:checked + ${ToggleUI}:after {
    border: 1px solid var(--black);
    background: var(--white);
    transform: translateX(calc(30px - 100%));
    background-size: 7.5px;
    background-image: url("//images.arcteryx.com/foundation-ui/svgs/Check_Black.svg");
    background-repeat: no-repeat;
    background-position: center;
  }

  &:disabled {
    cursor: not-allowed;

    &:checked + ${ToggleUI}:after {
      background-image: url("//images.arcteryx.com/foundation-ui/svgs/Check_Inactive-Grey.svg");
    }

    &:hover + ${ToggleUI}:after, &:focus + ${ToggleUI}:after {
      box-shadow: none;
    }

    & + ${ToggleUI} {
      filter: grayscale(100%);
      opacity: 0.5;
      &:before {
        background: var(--inactive-state-grey);
      }
      &:after {
        border: 1px solid var(--inactive-state-grey);
      }
    }
  }
`;

const ToggleButton = forwardRef(({ className, id, name, disabled, defaultChecked, onChange, onBlur, checked }, ref) => (
  <ToggleButtonWrap className={className}>
    <Checkbox
      id={id}
      ref={ref}
      className="qa-form-control"
      data-testid={id}
      name={name}
      aria-labelledby={`labelFor--${name}`}
      disabled={disabled}
      defaultChecked={defaultChecked}
      onChange={onChange}
      onBlur={onBlur}
      checked={checked}
    />
    <ToggleUI />
  </ToggleButtonWrap>
));

ToggleButton.propTypes = {
  className: PropTypes.string,
  id: PropTypes.string,
  name: PropTypes.string,
  disabled: PropTypes.bool,
  defaultChecked: PropTypes.bool,
  onChange: PropTypes.func,
  onBlur: PropTypes.func,
  checked: PropTypes.bool,
};
ToggleButton.defaultProps = {
  disabled: false,
  defaultChecked: false,
};
ToggleButton.displayName = "ToggleButton";
export default ToggleButton;
