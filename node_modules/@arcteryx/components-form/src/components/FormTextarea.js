import React, { forwardRef } from "react";
import PropTypes from "prop-types";
import LabelHeaderField from "./FormLabelHeader";
import { FormRow, FormInput, TextAreaField } from "./Styles";

const validationErrorClass = "input-validation-error";
const validClass = "input-validation-valid";

const FormTextareaField = forwardRef(({ error, label, id, toolTip, required, valid, ...inputProps }, ref) => (
  <FormRow className="qa-form-row" isRelatedToPrevious={inputProps.isRelatedToPrevious}>
    {inputProps.name && label && (
      <LabelHeaderField id={id} label={label} required={required} error={error} toolTip={toolTip} />
    )}
    <FormInput
      className={`qa-form-input
         ${error?.message ? validationErrorClass : ""}
         ${!error && valid ? validClass : ""}`}
    >
      <TextAreaField
        className="qa-form-control"
        ref={ref}
        id={id}
        aria-invalid={error ? "true" : "false"}
        title={label?.charAt(0).toUpperCase() + label?.slice(1)}
        data-valid={valid}
        data-testid={id}
        { ...inputProps }
      />
    </FormInput>
  </FormRow>
));

FormTextareaField.propTypes = {
  name: PropTypes.string.isRequired,
  disabled: PropTypes.bool,
  labelText: PropTypes.string,
  error: PropTypes.bool,
  errorText: PropTypes.string,
  required: PropTypes.bool,
  value: PropTypes.string,
  rows: PropTypes.number,
  cols: PropTypes.number,
  placeholder: PropTypes.string,
};
FormTextareaField.displayName = "FormTextareaField";
export default FormTextareaField;
