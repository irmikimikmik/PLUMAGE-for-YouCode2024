import IMask from "imask";

const threeDigit = /^\d{0,3}$/;
const fourDigit = /^\d{0,4}$/;
const fiveDigit = /^\d{0,5}$/;
const sixDigit = /^\d{0,6}$/;

const CA_US_PHONE_NUMBER_LENGTH = 11; // 10 digit number plus country code
const NON_CA_USA_MAX_PHONE_NUMBER_LENGTH = 20;
const tenDigitPhone = "+{1}(000) 000-0000";
const twentyDigitPhone = /^[0-9]\d{0,19}$/;

const alphanumericMask = /^[a-zA-Z0-9]*$/;

const maskDictionary = {
  AU: fourDigit,
  BE: fourDigit,
  BY: alphanumericMask,
  CA: "a0a 0a0",
  CN: sixDigit,
  CZ: "000 00",
  DK: fourDigit,
  FI: fiveDigit,
  FR: fiveDigit,
  DE: fiveDigit,
  IE: "a0? ????",
  IT: fiveDigit,
  NO: fourDigit,
  PL: "00-000",
  ES: fiveDigit,
  SE: "000 00",
  CH: fourDigit,
  NL: "0000 aa",
  GB: [{
    mask: "aa00 0aa"
  }, {
    mask: "a00 0aa"
  }, {
    mask: "a0 0aa"
  }, {
    mask: "a0a 0aa"
  }, {
    mask: "aa0 0aa"
  }, {
    mask: "aa0a 0aa"
  }, {
    mask: "aaaa 1ZZ"
  }],
  US: fiveDigit,

  // PSR form country list masks
  AD: alphanumericMask,
  AT: fourDigit,
  BG: fourDigit,
  BR: alphanumericMask,
  DO: fiveDigit,
  DZ: fiveDigit,
  EE: fiveDigit,
  GR: alphanumericMask,
  HR: alphanumericMask,
  HT: alphanumericMask,
  HU: fourDigit,
  ID: fiveDigit,
  IL: alphanumericMask,
  IN: alphanumericMask,
  IR: alphanumericMask,
  IS: threeDigit,
  JP: alphanumericMask,
  KE: fiveDigit,
  LI: alphanumericMask,
  LU: fourDigit,
  LV: alphanumericMask,
  MX: fiveDigit,
  MT: alphanumericMask,
  MY: fiveDigit,
  NZ: fourDigit,
  PR: alphanumericMask,
  PT: alphanumericMask,
  RO: sixDigit,
  RU: sixDigit,
  SA: fiveDigit,
  SG: sixDigit,
  SI: fourDigit,
  SK: alphanumericMask,
  TH: fiveDigit,
  TN: fourDigit,
  TW: alphanumericMask,
  UA: fiveDigit,
  ZA: fourDigit,
  ZM: fiveDigit,
  AE: alphanumericMask,
  AF: alphanumericMask,
  AG: alphanumericMask,
  AI: alphanumericMask,
  AL: alphanumericMask,
  AM: alphanumericMask,
  AO: alphanumericMask,
  AR: alphanumericMask,
  AS: alphanumericMask,
  AW: alphanumericMask,
  AX: alphanumericMask,
  BA: alphanumericMask,
  BB: alphanumericMask,
  BD: alphanumericMask,
  BF: alphanumericMask,
  BI: alphanumericMask,
  BJ: alphanumericMask,
  BL: alphanumericMask,
  BM: alphanumericMask,
  BO: alphanumericMask,
  BQ: alphanumericMask,
  BS: alphanumericMask,
  BT: alphanumericMask,
  BV: alphanumericMask,
  BW: alphanumericMask,
  BZ: alphanumericMask,
  CC: alphanumericMask,
  CI: alphanumericMask,
  CL: alphanumericMask,
  CM: alphanumericMask,
  CO: alphanumericMask,
  CR: alphanumericMask,
  CV: alphanumericMask,
  CW: alphanumericMask,
  CX: alphanumericMask,
  CY: alphanumericMask,
  DJ: alphanumericMask,
  DM: alphanumericMask,
  EC: alphanumericMask,
  EG: alphanumericMask,
  EH: alphanumericMask,
  ER: alphanumericMask,
  ET: alphanumericMask,
  FJ: alphanumericMask,
  FK: alphanumericMask,
  GA: alphanumericMask,
  GD: alphanumericMask,
  GE: alphanumericMask,
  GF: alphanumericMask,
  GG: alphanumericMask,
  GH: alphanumericMask,
  GI: alphanumericMask,
  GL: alphanumericMask,
  GM: alphanumericMask,
  GN: alphanumericMask,
  GP: alphanumericMask,
  GQ: alphanumericMask,
  GS: alphanumericMask,
  GT: alphanumericMask,
  GU: alphanumericMask,
  GW: alphanumericMask,
  GY: alphanumericMask,
  HK: alphanumericMask,
  HM: alphanumericMask,
  HN: alphanumericMask,
  IM: alphanumericMask,
  IO: alphanumericMask,
  IQ: alphanumericMask,
  JM: alphanumericMask,
  JE: alphanumericMask,
  JO: alphanumericMask,
  KG: alphanumericMask,
  KH: alphanumericMask,
  KI: alphanumericMask,
  KM: alphanumericMask,
  KN: alphanumericMask,
  KP: alphanumericMask,
  KR: alphanumericMask,
  KW: alphanumericMask,
  KY: alphanumericMask,
  KZ: alphanumericMask,
  LA: alphanumericMask,
  LB: alphanumericMask,
  LC: alphanumericMask,
  LR: alphanumericMask,
  LS: alphanumericMask,
  LY: alphanumericMask,
  MA: alphanumericMask,
  MG: alphanumericMask,
  MH: alphanumericMask,
  MK: alphanumericMask,
  ML: alphanumericMask,
  MM: alphanumericMask,
  MN: alphanumericMask,
  MO: alphanumericMask,
  MP: alphanumericMask,
  MQ: alphanumericMask,
  MR: alphanumericMask,
  MS: alphanumericMask,
  MU: alphanumericMask,
  MV: alphanumericMask,
  MW: alphanumericMask,
  MZ: alphanumericMask,
  NA: alphanumericMask,
  NE: alphanumericMask,
  NF: alphanumericMask,
  NG: alphanumericMask,
  NI: alphanumericMask,
  NU: alphanumericMask,
  PA: alphanumericMask,
  PE: alphanumericMask,
  PF: alphanumericMask,
  PG: alphanumericMask,
  PH: alphanumericMask,
  PK: alphanumericMask,
  PM: alphanumericMask,
  PN: alphanumericMask,
  PY: alphanumericMask,
  RE: alphanumericMask,
  RS: alphanumericMask,
  RW: alphanumericMask,
  SC: alphanumericMask,
  SD: alphanumericMask,
  SH: alphanumericMask,
  SJ: alphanumericMask,
  SL: alphanumericMask,
  SN: alphanumericMask,
  SO: alphanumericMask,
  SR: alphanumericMask,
  ST: alphanumericMask,
  SV: alphanumericMask,
  SZ: alphanumericMask,
  TD: alphanumericMask,
  TF: alphanumericMask,
  TG: alphanumericMask,
  TJ: alphanumericMask,
  TK: alphanumericMask,
  TM: alphanumericMask,
  TO: alphanumericMask,
  TR: alphanumericMask,
  TT: alphanumericMask,
  TZ: alphanumericMask,
  UG: alphanumericMask,
  UM: alphanumericMask,
  UY: alphanumericMask,
  VC: alphanumericMask,
  VE: alphanumericMask,
  VG: alphanumericMask,
  VI: alphanumericMask,
  VN: alphanumericMask,
  VU: alphanumericMask,
  WF: alphanumericMask,
  WS: alphanumericMask,
  YT: alphanumericMask,
  YE: alphanumericMask,
  ZW: alphanumericMask,
};


export const isValidPhoneNumber = (phoneNumber = "", country) => {
  const unmaskedNumber = phoneNumber.replace(/\D/g, "");
  return ['CA', 'US'].includes(country)
    ? unmaskedNumber.length === CA_US_PHONE_NUMBER_LENGTH
    : unmaskedNumber.length <= NON_CA_USA_MAX_PHONE_NUMBER_LENGTH;
}


export const normalizedPostalCode = (element, locale) => {
  const maskOptions = {
    mask: maskDictionary?.[locale] || null,
  };
  const zipMask = IMask(element, maskOptions);
  return zipMask.value;
};

export const createPostalCodeMask = country => (country && maskDictionary[country.toUpperCase()]) ? IMask.createMask({
    mask: maskDictionary[country.toUpperCase()],
    prepare: str => str.toUpperCase(),
    definitions: {
      "?": /[a-zA-Z0-9]/
    }
  }) : null


export const createPhoneNumberMask = country => IMask.createMask({
    mask: ['CA', 'US'].includes(country?.toUpperCase()) ? tenDigitPhone : twentyDigitPhone
  })
