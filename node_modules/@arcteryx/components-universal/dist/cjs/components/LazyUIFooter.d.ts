/** Safe distance to start loading the footer script in.
 * Unless the user is scrolling very fast the footer will load before it appears on screen
 */
export const UI_LAZY_FOOTER_DEFAULT_ROOT_MARGIN: "500px";
export namespace footerData {
    namespace outdoor {
        let appViewHeight: string;
        let mobileHeight: string;
        let desktopHeight: string;
        let breakPoint: string;
    }
    namespace sale {
        let appViewHeight_1: string;
        export { appViewHeight_1 as appViewHeight };
        let mobileHeight_1: string;
        export { mobileHeight_1 as mobileHeight };
        let desktopHeight_1: string;
        export { desktopHeight_1 as desktopHeight };
        let breakPoint_1: string;
        export { breakPoint_1 as breakPoint };
    }
    namespace leaf {
        let appViewHeight_2: string;
        export { appViewHeight_2 as appViewHeight };
        let mobileHeight_2: string;
        export { mobileHeight_2 as mobileHeight };
        let desktopHeight_2: string;
        export { desktopHeight_2 as desktopHeight };
        let breakPoint_2: string;
        export { breakPoint_2 as breakPoint };
    }
}
export default LazyUIFooter;
/**
 * @param {string} rootMargin how much space from the screen to when the window meets
 * @param {boolean} appWebview user agent for mobile app
 */
declare function LazyUIFooter({ deployEnv, rootMargin, uiBaseUrl, scriptPrefix, appWebview }: string): React.JSX.Element;
declare namespace LazyUIFooter {
    namespace propTypes {
        let deployEnv: PropTypes.Requireable<string>;
        let rootMargin: PropTypes.Requireable<string>;
        let uiBaseUrl: PropTypes.Requireable<string>;
        let scriptPrefix: PropTypes.Requireable<string>;
        let appWebview: PropTypes.Requireable<boolean>;
    }
}
import React from "react";
import PropTypes from "prop-types";
//# sourceMappingURL=LazyUIFooter.d.ts.map