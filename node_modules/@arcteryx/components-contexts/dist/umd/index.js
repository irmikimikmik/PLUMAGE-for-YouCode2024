(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (function () {
    var current = global.ARCTERYX && global.ARCTERYX.componentscontexts;
    var exports = (global.ARCTERYX = global.ARCTERYX || {}, global.ARCTERYX.componentscontexts = {});
    factory(exports, global.React);
    exports.noConflict = function () { global.ARCTERYX.componentscontexts = current; return exports; };
  })());
})(this, (function (exports, React) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

  /**
   * Primary context for sites. Provides three keys:
   *   market: outdoor|urban|leaf
   *   country: ca|us|de|...
   *   language: en|fr|es|...
   *
   * All values are expected to be lowercase.
   */
  const SiteContext = /*#__PURE__*/React__default["default"].createContext({});
  const SiteContextProvider = _ref => {
    let {
      children,
      market,
      country,
      language
    } = _ref;
    return /*#__PURE__*/React__default["default"].createElement(SiteContext.Provider, {
      value: {
        market,
        country,
        language
      }
    }, children);
  };
  const SiteContextConsumer = SiteContext.Consumer;

  /**
   * Context for seasonality. Provides two keys:
   *   year: 19|20|21|...
   *   season: F|S
   *
   * Note that we could redefine the acceptable values for these keys to accommodate
   * more seasons in the future. For example season could accept: spring, summer, fall, winter.
   */
  const SeasonalContext = /*#__PURE__*/React__default["default"].createContext({});
  const SeasonalContextProvider = _ref => {
    let {
      children,
      year,
      season
    } = _ref;
    return /*#__PURE__*/React__default["default"].createElement(SeasonalContext.Provider, {
      value: {
        year,
        season
      }
    }, children);
  };
  const SeasonalContextConsumer = SeasonalContext.Consumer;

  exports.SeasonalContext = SeasonalContext;
  exports.SeasonalContextConsumer = SeasonalContextConsumer;
  exports.SeasonalContextProvider = SeasonalContextProvider;
  exports.SiteContext = SiteContext;
  exports.SiteContextConsumer = SiteContextConsumer;
  exports.SiteContextProvider = SiteContextProvider;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=index.js.map
