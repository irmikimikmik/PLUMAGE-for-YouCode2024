import React, { useRef, useEffect, useState } from 'react';
import styled, { css, createGlobalStyle, keyframes } from 'styled-components';
import Imgix, { PublicConfigAPI, Picture, Source } from 'react-imgix';
import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import { createBreakpoint } from 'styled-components-breakpoint';
import { useSwipeable } from 'react-swipeable';
import cx from 'classnames';
import 'lazysizes';
import 'lazysizes/plugins/parent-fit/ls.parent-fit';
import 'lazysizes/plugins/attrchange/ls.attrchange';

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends$2() {
  _extends$2 = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties$1(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose$1(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}

const StyledImage = styled(Imgix)`
  object-fit: cover;
  object-position: ${_ref => {
  let {
    objectPosition = "50% 50%"
  } = _ref;
  return objectPosition;
}};
  width: ${_ref2 => {
  let {
    width
  } = _ref2;
  return `${width}px`;
}};
  height: ${_ref3 => {
  let {
    height
  } = _ref3;
  return `${height}px`;
}};
  @media (min-width: 768px) {
    ${props => {
  var _props$tabletStyles;
  return ((_props$tabletStyles = props.tabletStyles) === null || _props$tabletStyles === void 0 ? void 0 : _props$tabletStyles.objectPosition) && `object-position: ${props.tabletStyles.objectPosition};`;
}};
  }
`;
const Image = _ref4 => {
  let {
    alt,
    height,
    src,
    width,
    objectPosition,
    responsiveStyles
  } = _ref4;
  return /*#__PURE__*/React.createElement(StyledImage, {
    objectPosition: objectPosition,
    src: src,
    alt: alt,
    height: height,
    width: width,
    tabletStyles: responsiveStyles.tablet
  });
};

function calculateIsString(value) {
  return typeof value === "string";
}
function generateStyleValue(value) {
  const isString = calculateIsString(value);
  return isString ? value : `${value}px`;
}

/** Base styles are for the 375 breakpoint. They will all have defaults.
 * If the CMS Passes in a style for tablet or desktop, it will be passed into the component
 * through the tabletStyles or desktopStyles prop. If those objects have properties, they will
 * override the previous breakpoint.
 */

const defaultMargin = 0;
const defaultFontWeight = 400;

/** Mobile - 375 */
const baseMarginStyles = css`
  margin-top: ${_ref => {
  let {
    marginTop = defaultMargin
  } = _ref;
  return `${generateStyleValue(marginTop)}`;
}};
  margin-right: ${_ref2 => {
  let {
    marginRight = defaultMargin
  } = _ref2;
  return `${generateStyleValue(marginRight)}`;
}};
  margin-left: ${_ref3 => {
  let {
    marginLeft = defaultMargin
  } = _ref3;
  return `${generateStyleValue(marginLeft)}`;
}};
  margin-bottom: ${_ref4 => {
  let {
    marginBottom = defaultMargin
  } = _ref4;
  return `${generateStyleValue(marginBottom)}`;
}};
`;
/** Tablet - 768 */
const tabletMarginStyles = css`
  ${props => props.tabletStyles.hasOwnProperty("marginTop") && `margin-top: ${generateStyleValue(props.tabletStyles.marginTop)};`};
  ${props => props.tabletStyles.hasOwnProperty("marginRight") && `margin-right: ${generateStyleValue(props.tabletStyles.marginRight)};`};
  ${props => props.tabletStyles.hasOwnProperty("marginLeft") && `margin-left: ${generateStyleValue(props.tabletStyles.marginLeft)};`};
  ${props => props.tabletStyles.hasOwnProperty("marginBottom") && `margin-bottom: ${generateStyleValue(props.tabletStyles.marginBottom)};`};
`;
/** Desktop - 1440 */
const desktopMarginStyles = css`
  ${props => props.desktopStyles.hasOwnProperty("marginTop") && `margin-top: ${generateStyleValue(props.desktopStyles.marginTop)};`};
  ${props => props.desktopStyles.hasOwnProperty("marginRight") && `margin-right: ${generateStyleValue(props.desktopStyles.marginRight)};`};
  ${props => props.desktopStyles.hasOwnProperty("marginLeft") && `margin-left: ${generateStyleValue(props.desktopStyles.marginLeft)};`};
  ${props => props.desktopStyles.hasOwnProperty("marginBottom") && `margin-bottom: ${generateStyleValue(props.desktopStyles.marginBottom)};`};
`;
/** Mobile - 375 */
const baseFontStyles = css`
  color: ${_ref5 => {
  let {
    color = "#ffffff"
  } = _ref5;
  return color;
}};
  font-family: ${_ref6 => {
  let {
    fontFamily = "urw-din,arial,sans-serif"
  } = _ref6;
  return fontFamily;
}};
  font-size: ${_ref7 => {
  let {
    fontSize = 15
  } = _ref7;
  return `${generateStyleValue(fontSize)}`;
}};
  font-weight: ${_ref8 => {
  let {
    fontWeight = defaultFontWeight
  } = _ref8;
  return fontWeight;
}};
  letter-spacing: ${_ref9 => {
  let {
    letterSpacing = "normal"
  } = _ref9;
  return letterSpacing;
}};
  line-height: ${_ref10 => {
  let {
    lineHeight = 15
  } = _ref10;
  return `${generateStyleValue(lineHeight)}`;
}};
  text-align: ${_ref11 => {
  let {
    textAlign = "center"
  } = _ref11;
  return textAlign;
}};
  text-shadow: ${_ref12 => {
  let {
    textShadow = "none"
  } = _ref12;
  return textShadow;
}};
  text-transform: ${_ref13 => {
  let {
    textTransform = "none"
  } = _ref13;
  return textTransform;
}};
`;

/** Tablet - 375 */
const tabletFontStyles = css`
  ${props => props.tabletStyles.hasOwnProperty("color") && `color: ${props.tabletStyles.color};`};
  ${props => props.tabletStyles.hasOwnProperty("fontFamily") && `font-family: ${props.tabletStyles.fontFamily};`};
  ${props => props.tabletStyles.hasOwnProperty("fontSize") && `font-size: ${generateStyleValue(props.tabletStyles.fontSize)};`};
  ${props => props.tabletStyles.hasOwnProperty("fontWeight") && `font-weight: ${props.tabletStyles.fontWeight};`};
  ${props => props.tabletStyles.hasOwnProperty("letterSpacing") && `letter-spacing: ${props.tabletStyles.letterSpacing};`};
  ${props => props.tabletStyles.hasOwnProperty("lineHeight") && `line-height: ${generateStyleValue(props.tabletStyles.lineHeight)};`};
  ${props => props.tabletStyles.hasOwnProperty("textAlign") && `text-align: ${props.tabletStyles.textAlign};`};
  ${props => props.tabletStyles.hasOwnProperty("textShadow") && `text-shadow: ${props.tabletStyles.textShadow};`};
  ${props => props.tabletStyles.hasOwnProperty("textTransform") && `text-transform: ${props.tabletStyles.textTransform};`};
`;

/** Desktop - 1440 */
const desktopFontStyles = css`
  ${props => props.desktopStyles.hasOwnProperty("color") && `color: ${props.desktopStyles.color};`};
  ${props => props.desktopStyles.hasOwnProperty("fontFamily") && `font-family: ${props.desktopStyles.fontFamily};`};
  ${props => props.desktopStyles.hasOwnProperty("fontSize") && `font-size: ${generateStyleValue(props.desktopStyles.fontSize)};`};
  ${props => props.desktopStyles.hasOwnProperty("fontWeight") && `font-weight: ${props.desktopStyles.fontWeight};`};
  ${props => props.desktopStyles.hasOwnProperty("letterSpacing") && `letter-spacing: ${props.desktopStyles.letterSpacing};`};
  ${props => props.desktopStyles.hasOwnProperty("lineHeight") && `line-height: ${generateStyleValue(props.desktopStyles.lineHeight)};`};
  ${props => props.desktopStyles.hasOwnProperty("textAlign") && `text-align: ${props.desktopStyles.textAlign};`};
  ${props => props.desktopStyles.hasOwnProperty("textShadow") && `text-shadow: ${props.desktopStyles.textShadow};`};
  ${props => props.desktopStyles.hasOwnProperty("textTransform") && `text-transform: ${props.desktopStyles.textTransform};`};
`;

/** Mobile - 375 */
const baseFlexBox = css`
  display: ${_ref14 => {
  let {
    display = "flex"
  } = _ref14;
  return display;
}};
  flex-direction: ${_ref15 => {
  let {
    flexDirection = "column"
  } = _ref15;
  return flexDirection;
}};
  justify-content: ${_ref16 => {
  let {
    justifyContent = "center"
  } = _ref16;
  return justifyContent;
}};
  gap: ${props => props.gap ? `${generateStyleValue(props.gap)}` : "1rem"};
  align-items: ${_ref17 => {
  let {
    alignItems = "center"
  } = _ref17;
  return alignItems;
}};
  flex-wrap: wrap;
`;

/** Tablet - 768*/
const tabletFlexBox = css`
  ${props => props.tabletStyles.hasOwnProperty("display") && `display: ${props.tabletStyles.display};`};
  ${props => props.tabletStyles.hasOwnProperty("flexDirection") && `flex-direction: ${props.tabletStyles.flexDirection};`};
  ${props => props.tabletStyles.hasOwnProperty("justifyContent") && `justify-content: ${props.tabletStyles.justifyContent};`};
  ${props => props.tabletStyles.hasOwnProperty("gap") && `gap: ${generateStyleValue(props.tabletStyles.gap)};`};
  ${props => props.tabletStyles.hasOwnProperty("alignItems") && `align-items: ${props.tabletStyles.alignItems};`};
`;

/** Desktop - 1440*/
const desktopFlexBox = css`
  ${props => props.desktopStyles.hasOwnProperty("display") && `display: ${props.desktopStyles.display};`};
  ${props => props.desktopStyles.hasOwnProperty("flexDirection") && `flex-direction: ${props.desktopStyles.flexDirection};`};
  ${props => props.desktopStyles.hasOwnProperty("justifyContent") && `justify-content: ${props.desktopStyles.justifyContent};`};
  ${props => props.desktopStyles.hasOwnProperty("gap") && `gap: ${generateStyleValue(props.desktopStyles.gap)};`};
  ${props => props.desktopStyles.hasOwnProperty("alignItems") && `align-items: ${props.desktopStyles.alignItems};`};
`;

/** Mobile - 375 */
const baseSizeStyles = css`
  height: ${_ref18 => {
  let {
    height = "auto"
  } = _ref18;
  return generateStyleValue(height);
}};
  width: ${_ref19 => {
  let {
    width = "auto"
  } = _ref19;
  return generateStyleValue(width);
}};
  max-width: ${_ref20 => {
  let {
    maxWidth = "none"
  } = _ref20;
  return generateStyleValue(maxWidth);
}};
  max-height: ${_ref21 => {
  let {
    maxHeight = "none"
  } = _ref21;
  return generateStyleValue(maxHeight);
}};
`;

/** Tablet - 768*/
const tabletSizeStyles = css`
  ${_ref22 => {
  let {
    tabletStyles
  } = _ref22;
  return tabletStyles && css`
      ${tabletStyles.hasOwnProperty("height") && `height: ${generateStyleValue(tabletStyles.height)};`}
      ${tabletStyles.hasOwnProperty("width") && `width: ${generateStyleValue(tabletStyles.width)};`}
    ${tabletStyles.hasOwnProperty("maxWidth") && `max-width: ${generateStyleValue(tabletStyles.maxWidth)};`}
    ${tabletStyles.hasOwnProperty("maxHeight") && `max-height: ${generateStyleValue(tabletStyles.maxHeight)};`}
    `;
}}
`;

/** Desktop - 1440*/
const desktopSizeStyles = css`
  ${_ref23 => {
  let {
    desktopStyles
  } = _ref23;
  return desktopStyles && css`
      ${desktopStyles.hasOwnProperty("height") && `height: ${generateStyleValue(desktopStyles.height)};`}
      ${desktopStyles.hasOwnProperty("width") && `width: ${generateStyleValue(desktopStyles.width)};`}
    ${desktopStyles.hasOwnProperty("maxWidth") && `max-width: ${generateStyleValue(desktopStyles.maxWidth)};`}
    ${desktopStyles.hasOwnProperty("maxHeight") && `max-height: ${generateStyleValue(desktopStyles.maxHeight)};`}
    `;
}}
`;

const fontSize$1 = (large, loud, louder) => {
  if (large) {
    return "2rem";
  }
  if (loud) {
    return "2.5rem";
  }
  if (louder) {
    return "3rem";
  }
  return "1.5rem";
};
const H1 = styled.h1`
  margin-bottom: 1rem;
  font-family: ${props => ["urban", "veilance"].includes(props.market.toLowerCase()) ? '"Suisse Intl Regular", arial, sans-serif' : '"urw-din-condensed", arial, sans-serif'};
  font-size: ${props => fontSize$1(props.large, props.loud, props.louder)};
  font-weight: 700;
  line-height: ${props => fontSize$1(props.large, props.loud, props.louder)};
  color: ${props => props.textColor};
  text-transform: uppercase;
`;
H1.defaultProps = {
  large: false,
  loud: false,
  louder: false,
  textColor: "#000",
  market: "outdoor"
};
const H2 = styled.h2`
  margin-bottom: 1rem;
  font-family: ${props => ["urban", "veilance"].includes(props.market.toLowerCase()) ? '"Suisse Intl Regular", arial, sans-serif' : '"urw-din-condensed", arial, sans-serif'};
  font-size: ${props => props.large ? "1.5rem" : "1.25rem"};
  font-weight: 700;
  line-height: 1.5rem;
  color: ${props => props.textColor};
  text-transform: uppercase;
`;
H2.defaultProps = {
  large: false,
  textColor: "#000",
  market: "outdoor"
};
const H3 = styled.h3`
  margin-bottom: ${props => props.large ? "1rem" : "0.5rem"};
  font-family: ${props => ["urban", "veilance"].includes(props.market.toLowerCase()) ? '"Suisse Intl Regular", arial, sans-serif' : '"urw-din-condensed", arial, sans-serif'};
  font-size: ${props => props.large ? "1.25rem" : "1.1rem"};
  font-weight: 700;
  line-height: 1.5rem;
  color: ${props => props.textColor};
  text-transform: uppercase;
`;
H3.defaultProps = {
  large: false,
  textColor: "#000",
  market: "outdoor"
};
const H4 = styled.h4`
  margin-bottom: 0.5rem;
  font-family: ${props => ["urban", "veilance"].includes(props.market.toLowerCase()) ? '"Suisse Intl Regular", arial, sans-serif' : '"urw-din-condensed", arial, sans-serif'};
  font-size: ${props => props.large ? "1.1rem" : "1rem"};
  font-weight: 700;
  line-height: 1.5rem;
  color: ${props => props.textColor};
  text-transform: uppercase;
`;
H4.defaultProps = {
  large: false,
  textColor: "#000",
  market: "outdoor"
};
const fontSize = size => {
  if (size === "s") {
    return "0.75rem";
  }
  if (size === "m") {
    return "1.1rem";
  }
  if (size === "l") {
    return "1.25rem";
  }
  return "1rem";
};
const P = styled.p`
  margin: 0 0 1.5rem 0;
  font-family: ${props => ["urban", "veilance"].includes(props.market.toLowerCase()) ? '"Suisse Intl Regular", arial, sans-serif' : '"urw-din", arial, sans-serif'};
  font-size: ${props => fontSize(props.size)};
  font-weight: ${props => props.bold ? `600` : `400`};
  font-style: ${props => props.italic ? `italic` : `normal`};
  line-height: ${props => props.size === "s" ? `1rem` : `1.5rem`};
  color: ${props => props.textColor};
  text-decoration: ${props => props.textDecoration};

  strong,
  b {
    font-weight: 500;
  }

  em,
  i {
    font-weight: 400;
    font-style: italic;
  }

  &:last-of-type {
    margin-bottom: 0;
  }
`;
P.defaultProps = {
  large: false,
  textColor: "var(--colour-copy)",
  textDecoration: "none",
  market: "outdoor"
};
const Quote = styled.blockquote`
  position: relative;
  font-family: ${props => ["urban", "veilance"].includes(props.market.toLowerCase()) ? '"Suisse Intl Regular", arial, sans-serif' : '"urw-din", arial, sans-serif'};
  color: ${props => props.textColor};
  font-size: 1rem;
  font-weight: 400;
  font-style: italic;
  line-height: 1.2rem;
  padding-left: 2.5rem;
  max-width: 500px;
`;
Quote.defaultProps = {
  large: false,
  textColor: "#000",
  market: "outdoor"
};
styled.p`
  max-width: none;
`;
styled.ul`
max-width: none;
`;
styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
`;
styled.div`
  display: flex;
  justify-content: center;
  align-items: flex-end;
`;
const Cube = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  margin: 0 1rem;
  font-size: 1rem;

  &:after {
    content: attr(title);
    display: block;
    position: absolute;
    bottom: -3rem;
    left: 50%;
    transform: translateX(-50%);
  }
`;
styled(Cube)`
  width: var(--space-xs);
  height: var(--space-xs);
  background-color: #EBCC83;
`;
styled(Cube)`
  width: var(--space-s);
  height: var(--space-s);
  background-color: #A0E6EB;
`;
styled(Cube)`
  width: var(--space-m);
  height: var(--space-m);
  background-color: #C8EBA0;
`;
styled(Cube)`
  width: var(--space-l);
  height: var(--space-l);
  background-color: #A0AFEB;
`;
styled(Cube)`
  width: var(--space-xl);
  height: var(--space-xl);
  background-color: #DBABE9;
`;
styled(Cube)`
  width: var(--space-xxl);
  height: var(--space-xxl);
  background-color: #EB9595;
`;
const Square = styled.div`
  width: 1rem;
  height: 1rem;
  display: inline-block;
  margin-right: 5px;  
`;
styled(Square)`
  background-color: #EBCC83;
`;
styled(Square)`
  background-color: #A0E6EB;
`;
styled(Square)`
  background-color: #C8EBA0;
`;
styled(Square)`
  background-color: #A0AFEB;
`;
styled(Square)`
  background-color: #DBABE9;
`;
styled(Square)`
  background-color: #EB9595;
`;
const ScreenSize = {
  xs: 0,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1440
};
const Breakpoint = createBreakpoint({
  xs: ScreenSize.xs,
  sm: ScreenSize.sm,
  md: ScreenSize.md,
  lg: ScreenSize.lg,
  xl: ScreenSize.xl,
  xxl: ScreenSize.xxl
});
createGlobalStyle`

// This is the site-wide root CSS where we define our glocal variables
:root {
  --font-urw: "urw-din", sans-serif;
  --focus-visible: 0.2rem solid #5b9dd9;

  /**
   * Colours
   */

  --colour-black: #000000;
  --colour-grey-dark: #333333;
  --colour-grey-medium: #666666;
  --colour-grey-inactive: #b2b2b2;
  --colour-grey-pinline: #cccccc;
  --colour-grey-background: #e9e9e9;
  --colour-grey-item-background: #fafafa;
  --colour-black-gradient: #646464;
  --colour-white: #ffffff;
  --colour-copy: var(--colour-black);
  --black: var(--colour-black);
  --dark-grey: var(--colour-grey-dark);
  --medium-grey: var(--colour-grey-medium);
  --inactive-state-grey: var(--colour-grey-inactive);
  --pinline-grey: var(--colour-grey-pinline);
  --background-grey: var(--colour-grey-background);
  --background-gradient: var(--colour-black-gradient);
  --white: var(--colour-white);


  /*
   * Feedback Colours
   */
  --colour-red-3: #990000;
  --colour-red-2: #c86464;
  --colour-red-1: #fbebeb;
  --warning-red: var(--colour-red-3);
  --medium-red: var(--colour-red-2);
  --background-red: var(--colour-red-1);

  --colour-yellow-3: #785e1c;
  --colour-yellow-2: #ab934f;
  --colour-yellow-1: #f8f2d5;
  --caution-yellow: var(--colour-yellow-3);
  --medium-yellow: var(--colour-yellow-2);
  --background-yellow: var(--colour-yellow-1);

  --colour-blue-3: #31668f;
  --colour-blue-2: #5b9dd9;
  --colour-blue-1: #e3edf2;
  --info-blue: var(--colour-blue-3);
  --focus-blue: var(--colour-blue-2);
  --background-blue: var(--colour-blue-1);

  --colour-green-3: #227733;
  --colour-green-2: #5aab6a;
  --colour-green-1: #dff0d8;
  --success-green: var(--colour-green-3);
  --medium-green: var(--colour-green-2);
  --background-green: var(--colour-green-1);

  /**
   * Spacing Units (Deprecated)
   * These tie in directly with the coloured spaces depicted in design mocks
   * Responsiveness is built-in to the variable, so no component-level tweaks needed
   */
  --space-red: 6rem;
  --space-pink: 4rem;
  --space-purple: 2rem;
  --space-green: 2rem;
  --space-blue: 1rem;
  --space-orange: .5rem;

  @media(min-width: 1024px) {
    --space-purple: 3rem;
    --space-pink: 6rem;
    --space-red: 10rem;
  }

  /**
   * Spacing Units
   * These tie in directly with the spacing units defined in Figma
   * https://www.figma.com/file/xiTC7i82LbrfGrMQRqsxLY/Arc'teryx-Components?type=design&node-id=781-52&mode=design&t=LHI4MFqa1SCYqNKI-0
   */
  --desk-mobile05: 0.5rem;
  --desk-mobile1: 1rem;
  --desk-mobile2: 2rem;
  --desk3-mobile2: 2rem;
  --desk6-mobile4: 4rem;
  --desk10-mobile6: 6rem;

  @media(min-width: 992px) {
    --desk3-mobile2: 3rem;
    --desk6-mobile4: 6rem;
    --desk10-mobile6: 10rem;
  }

  // Spacing Units - Aliases
  --space-xs: var(--desk-mobile05);
  --space-s: var(--desk-mobile1);
  --space-m: var(--desk-mobile2);
  --space-l: var(--desk3-mobile2);
  --space-xl: var(--desk6-mobile4);
  --space-xxl: var(--desk10-mobile6);

  /**
   * CatIntro Banners
   */
   --banner-height-xs: 10rem; /* 150px */
   --banner-height-sm: 12rem; /* 180px */
   --banner-height-md: 13.333rem; /* 200px */
   --banner-height-lg: 16.666rem; /* 250px */
   --banner-height-xl: 23.333rem; /* 350px */

   /**
    * Common breakpoints
    */
   --breakpoint-sm: 576px;
   --breakpoint-md: 768px;
   --breakpoint-lg: 992px;
   --breakpoint-xl: 1200px;
   /**
    * ProductTiles
    */
   --product-tile-2-col: 50%;
   --product-tile-3-col: 33.33%;
   --product-tile-4-col: 25%;
}

html {
  height: 100%;
  height: -webkit-fill-available;
  font-size: 93.75%; /* 15px */
  scroll-behavior: smooth;

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

ul[class],
ol[class] {
  padding: 0;
}

body,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}
body {
  min-height: 100vh;
  min-height: -webkit-fill-available;
  text-rendering: optimizeSpeed;
  line-height: 1.5rem;
  color: var(--colour-copy);
  font-family: var(--font-urw);
  font-weight: normal;
  font-size: 1rem;
}

ol, ul {
  list-style-position: outside;
  margin: 1rem 0 0 0;
  padding: 0 0 0 2rem;
}
ul {
  list-style-type: disc;
}
li {
  line-height: 1.5rem;
  padding-bottom: 0.5rem;
}

ul[class],
ol[class] {
  list-style: none;
}

/* helper class to hide scrollbars */
.hide--scrollbar {
  /* Chrome, Safari and Opera */
  ::-webkit-scrollbar {
    display: none;
  }
  scrollbar-width: none;  /* Firefox */
}

a:not([class]) {
  text-decoration: underline;
  text-decoration-skip-ink: auto;
}

a:focus, button:focus {
  outline: none;
}

a:focus-visible, button:focus-visible {
  outline: var(--focus-visible);
}

a:-moz-focus-visible, button:-moz-focus-visible,
:-moz-focusring {
  outline: var(--focus-visible);
}

/**
  *  Heading tags; h1, h2, h3, h4
  *  Ideally all Heading tags will use the <H1>, <H2>, <H3>, and <H4> provided by @arcteryx/components-typography
  *  but this will help catch any tags that might not be styled-components
  */
h1, h2, h3, h4 {
  font-family: urw-din-condensed, arial, sans-serif;
  font-weight: 700;
  line-height: 1.5rem;
  margin-top: 0;
  text-transform: uppercase;
}
h1 {
  margin-bottom: 1rem;
  font-size: 1.5rem;
}
h2 {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
h3 {
  margin-bottom: 0.5rem;
  font-size: 1.1rem;
}
h4 {
  margin-bottom: 0.5rem;
  font-size: 1rem;
}
/**
  * <p>
  * Ideally all P tags will use the <P> provided by @arcteryx/components-typography
  * but this is a catches any p tags that might not be styled-components
  */
p {
  margin: 0 0 1.5rem 0;
  font-family: "urw-din", arial, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--colour-copy);

  strong, b {
    font-weight: 600;
  }

  em, i {
    font-weight: 400;
    font-style: italic;
  }

  &:last-of-type {
    margin-bottom: 0;
  }

}

strong, b {
  font-weight: 600;
}

em, i {
  font-weight: 400;
  font-style: italic;
}

img {
  max-width: 100%;
  display: block;
}

.lazyload,
.lazyloading {
  opacity: 0;
}

.lazyloaded {
  opacity: 1;
  transition: opacity 200ms;
}

/* Legacy class for header nav hover overlay */

.overlay-dark--full {
  position: fixed;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  opacity: 1;
  z-index: 250;
}

/**
 * a11y
 * For folks who's browser requests reduced motion
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/*
 * The Typekit service used to deliver this font or fonts for use on websites
 * is provided by Adobe and is subject to these Terms of Use
 * http://www.adobe.com/products/eulas/tou_typekit. For font license
 * information, see the list below.
 *
 * urw-din:
 *   - http://typekit.com/eulas/00000000000000007735a839
 *   - http://typekit.com/eulas/00000000000000007735a83d
 *   - http://typekit.com/eulas/00000000000000007735a840
 *   - http://typekit.com/eulas/00000000000000007735a843
 *   - http://typekit.com/eulas/00000000000000007735a846
 *   - http://typekit.com/eulas/00000000000000007735a849
 *   - http://typekit.com/eulas/00000000000000007735a84b
 *   - http://typekit.com/eulas/00000000000000007735a84f
 *   - http://typekit.com/eulas/00000000000000007735a851
 *   - http://typekit.com/eulas/00000000000000007735a855
 * urw-din-condensed:
 *   - http://typekit.com/eulas/00000000000000007735a83b
 *   - http://typekit.com/eulas/00000000000000007735a83e
 *   - http://typekit.com/eulas/00000000000000007735a841
 *   - http://typekit.com/eulas/00000000000000007735a844
 *   - http://typekit.com/eulas/00000000000000007735a847
 *   - http://typekit.com/eulas/00000000000000007735a84a
 *   - http://typekit.com/eulas/00000000000000007735a84d
 *   - http://typekit.com/eulas/00000000000000007735a850
 *   - http://typekit.com/eulas/00000000000000007735a853
 *   - http://typekit.com/eulas/00000000000000007735a856
 * urw-din-semi-condensed:
 *   - http://typekit.com/eulas/00000000000000007735a83c
 *   - http://typekit.com/eulas/00000000000000007735a83f
 *   - http://typekit.com/eulas/00000000000000007735a842
 *   - http://typekit.com/eulas/00000000000000007735a845
 *   - http://typekit.com/eulas/00000000000000007735a848
 *   - http://typekit.com/eulas/00000000000000007735a84c
 *   - http://typekit.com/eulas/00000000000000007735a84e
 *   - http://typekit.com/eulas/00000000000000007735a852
 *   - http://typekit.com/eulas/00000000000000007735a854
 *   - http://typekit.com/eulas/00000000000000007735a857
 *
 * © 2009-2023 Adobe Systems Incorporated. All Rights Reserved.
 */
/*{"last_published":"2023-09-27 18:05:37 UTC"}*/

@import url("https://p.typekit.net/p.css?s=1&k=amb0fbb&ht=tk&f=36601.36602.36603.36604.36605.36606.36607.36608.36609.36610.36617.36618.36619.36620.36621.36622.36623.36624.36625.36626.36633.36634.36635.36636.36637.36638.36639.36640.36641.36642&a=131936418&app=typekit&e=css");

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/1f0265/00000000000000007735a839/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("woff2"),url("https://use.typekit.net/af/1f0265/00000000000000007735a839/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("woff"),url("https://use.typekit.net/af/1f0265/00000000000000007735a839/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:400;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/f1d51b/00000000000000007735a83d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("woff2"),url("https://use.typekit.net/af/f1d51b/00000000000000007735a83d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("woff"),url("https://use.typekit.net/af/f1d51b/00000000000000007735a83d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:400;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/5f44f1/00000000000000007735a840/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("woff2"),url("https://use.typekit.net/af/5f44f1/00000000000000007735a840/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("woff"),url("https://use.typekit.net/af/5f44f1/00000000000000007735a840/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:500;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/d96df7/00000000000000007735a843/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("woff2"),url("https://use.typekit.net/af/d96df7/00000000000000007735a843/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("woff"),url("https://use.typekit.net/af/d96df7/00000000000000007735a843/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:500;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/caf48f/00000000000000007735a846/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("woff2"),url("https://use.typekit.net/af/caf48f/00000000000000007735a846/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("woff"),url("https://use.typekit.net/af/caf48f/00000000000000007735a846/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:600;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/b8eeae/00000000000000007735a849/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("woff2"),url("https://use.typekit.net/af/b8eeae/00000000000000007735a849/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("woff"),url("https://use.typekit.net/af/b8eeae/00000000000000007735a849/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:600;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/1c5092/00000000000000007735a84b/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("woff2"),url("https://use.typekit.net/af/1c5092/00000000000000007735a84b/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("woff"),url("https://use.typekit.net/af/1c5092/00000000000000007735a84b/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:700;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/cd97e9/00000000000000007735a84f/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff2"),url("https://use.typekit.net/af/cd97e9/00000000000000007735a84f/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff"),url("https://use.typekit.net/af/cd97e9/00000000000000007735a84f/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:700;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/fe2f02/00000000000000007735a851/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("woff2"),url("https://use.typekit.net/af/fe2f02/00000000000000007735a851/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("woff"),url("https://use.typekit.net/af/fe2f02/00000000000000007735a851/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:900;font-stretch:normal;
}

@font-face {
font-family:"urw-din";
src:url("https://use.typekit.net/af/0fba77/00000000000000007735a855/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("woff2"),url("https://use.typekit.net/af/0fba77/00000000000000007735a855/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("woff"),url("https://use.typekit.net/af/0fba77/00000000000000007735a855/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:900;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/b27e1e/00000000000000007735a83b/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("woff2"),url("https://use.typekit.net/af/b27e1e/00000000000000007735a83b/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("woff"),url("https://use.typekit.net/af/b27e1e/00000000000000007735a83b/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:400;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/ba5c17/00000000000000007735a83e/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("woff2"),url("https://use.typekit.net/af/ba5c17/00000000000000007735a83e/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("woff"),url("https://use.typekit.net/af/ba5c17/00000000000000007735a83e/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:400;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/06eb22/00000000000000007735a841/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("woff2"),url("https://use.typekit.net/af/06eb22/00000000000000007735a841/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("woff"),url("https://use.typekit.net/af/06eb22/00000000000000007735a841/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:500;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/413a03/00000000000000007735a844/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("woff2"),url("https://use.typekit.net/af/413a03/00000000000000007735a844/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("woff"),url("https://use.typekit.net/af/413a03/00000000000000007735a844/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:500;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/c2cf88/00000000000000007735a847/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("woff2"),url("https://use.typekit.net/af/c2cf88/00000000000000007735a847/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("woff"),url("https://use.typekit.net/af/c2cf88/00000000000000007735a847/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:600;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/b1d7bd/00000000000000007735a84a/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("woff2"),url("https://use.typekit.net/af/b1d7bd/00000000000000007735a84a/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("woff"),url("https://use.typekit.net/af/b1d7bd/00000000000000007735a84a/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:600;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/be96d8/00000000000000007735a84d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff2"),url("https://use.typekit.net/af/be96d8/00000000000000007735a84d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff"),url("https://use.typekit.net/af/be96d8/00000000000000007735a84d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:700;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/3f20e7/00000000000000007735a850/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("woff2"),url("https://use.typekit.net/af/3f20e7/00000000000000007735a850/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("woff"),url("https://use.typekit.net/af/3f20e7/00000000000000007735a850/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:700;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/5002a8/00000000000000007735a853/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("woff2"),url("https://use.typekit.net/af/5002a8/00000000000000007735a853/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("woff"),url("https://use.typekit.net/af/5002a8/00000000000000007735a853/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:900;font-stretch:normal;
}

@font-face {
font-family:"urw-din-condensed";
src:url("https://use.typekit.net/af/c85988/00000000000000007735a856/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("woff2"),url("https://use.typekit.net/af/c85988/00000000000000007735a856/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("woff"),url("https://use.typekit.net/af/c85988/00000000000000007735a856/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:900;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/68a396/00000000000000007735a83c/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("woff2"),url("https://use.typekit.net/af/68a396/00000000000000007735a83c/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("woff"),url("https://use.typekit.net/af/68a396/00000000000000007735a83c/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:400;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/960873/00000000000000007735a83f/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("woff2"),url("https://use.typekit.net/af/960873/00000000000000007735a83f/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("woff"),url("https://use.typekit.net/af/960873/00000000000000007735a83f/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:400;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/40dae5/00000000000000007735a842/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("woff2"),url("https://use.typekit.net/af/40dae5/00000000000000007735a842/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("woff"),url("https://use.typekit.net/af/40dae5/00000000000000007735a842/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i5&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:500;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/5788bc/00000000000000007735a845/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("woff2"),url("https://use.typekit.net/af/5788bc/00000000000000007735a845/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("woff"),url("https://use.typekit.net/af/5788bc/00000000000000007735a845/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n5&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:500;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/96cf20/00000000000000007735a848/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("woff2"),url("https://use.typekit.net/af/96cf20/00000000000000007735a848/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("woff"),url("https://use.typekit.net/af/96cf20/00000000000000007735a848/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i6&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:600;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/bd0e8a/00000000000000007735a84c/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("woff2"),url("https://use.typekit.net/af/bd0e8a/00000000000000007735a84c/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("woff"),url("https://use.typekit.net/af/bd0e8a/00000000000000007735a84c/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n6&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:600;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/f61b58/00000000000000007735a84e/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff2"),url("https://use.typekit.net/af/f61b58/00000000000000007735a84e/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff"),url("https://use.typekit.net/af/f61b58/00000000000000007735a84e/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:700;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/349829/00000000000000007735a852/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("woff2"),url("https://use.typekit.net/af/349829/00000000000000007735a852/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("woff"),url("https://use.typekit.net/af/349829/00000000000000007735a852/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:700;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/8def5a/00000000000000007735a854/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("woff2"),url("https://use.typekit.net/af/8def5a/00000000000000007735a854/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("woff"),url("https://use.typekit.net/af/8def5a/00000000000000007735a854/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3") format("opentype");
font-display:auto;font-style:normal;font-weight:900;font-stretch:normal;
}

@font-face {
font-family:"urw-din-semi-condensed";
src:url("https://use.typekit.net/af/d4ff8c/00000000000000007735a857/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("woff2"),url("https://use.typekit.net/af/d4ff8c/00000000000000007735a857/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("woff"),url("https://use.typekit.net/af/d4ff8c/00000000000000007735a857/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i9&v=3") format("opentype");
font-display:auto;font-style:italic;font-weight:900;font-stretch:normal;
}

.tk-urw-din { font-family: "urw-din",sans-serif; }
.tk-urw-din-condensed { font-family: "urw-din-condensed",sans-serif; }
.tk-urw-din-semi-condensed { font-family: "urw-din-semi-condensed",sans-serif; }
`;

function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
const fadeIn = keyframes`
  0% {
    opacity: 0;
    z-index: -1;
  }
  100% {
    opacity: 1;
    z-index: 9999;
  }
`;
const fadeAnimation = css`
  0.3s ${fadeIn} ease-out;
`;
const scaleIn = keyframes`
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
`;
const scaleAnimation = css`
  0.3s 0.2s ${scaleIn} forwards
`;
const slideUp = keyframes`
  0% {
    opacity: 1;
    z-index: -1;
    transform: scale(1) translateY(100%);
  }

  100% {
    opacity: 1;
    z-index: 9999;
    transform: scale(1) translateY(0);
  }
`;
const slideUpAnimation = css`
  0.3s 0.2s ${slideUp} forwards
`;
const ModalOverlay = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  cursor: pointer;
  background-color: rgba(43, 43, 43, 0.8);
  z-index: 9999;
  opacity: 1;
  animation: ${fadeAnimation};

  ${Breakpoint("lg")`
    padding: 2rem;
  `}
`;
const ModalWrapper = styled.div`
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: 100%;
  transform: scale(1) translateY(100%);
  animation: ${slideUpAnimation};

  ${Breakpoint("lg")`
    width: ${props => props.modalWidth ? `${props.modalWidth}px` : "90vw"};
    align-items: center;
    transform: scale(0);
    animation: ${scaleAnimation};
  `}
`;
const ModalUI = styled.div`
  display: flex;
  flex-flow: row wrap;
  align-items: flex-end;
  justify-content: center;
  width: 100%;
  height: 100%;

  ${Breakpoint("lg")`
    height: auto;
    flex-flow: row nowrap;
    align-items: flex-start;
  `}

  .modal--video & {
    flex-flow: column nowrap;
    justify-content: center;

    ${Breakpoint("lg")`
      align-items: flex-start;
      flex-flow: row wrap;
    `}
  }
`;
const ModalContent = styled.div`
  position: relative;
  width: 100%;
  max-width: 75rem;
  height: 100%;
  max-height: ${props => props.contentMaxHeightMobile ? `${props.contentMaxHeightMobile}vh` : "80vh"};
  padding: 1.25rem;
  overflow: auto;
  cursor: default;
  display: flex;
  flex-flow: column wrap;
  order: 2;
  align-items: flex-start;
  background-color: white;
  transition: all 0.3s;

  ${Breakpoint("xs")`
      overflow: ${props => props.preventMobileOverflow ? "hidden" : "auto"};
  `}

  &:before {
    content: "";
    display: ${props => props.closable === true ? "block" : "none"};
    width: 4.5rem;
    height: 0.3rem;
    position: absolute;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    background-color: black;

    ${Breakpoint("lg")`
      display: none;
    `}
  }

  &:focus {
    outline: none;
  }

  &:focus-visible {
    outline: none !important;
  }

  .modal--video & {
    height: auto;
    padding: 0 1rem;
    align-items: center;
    background-color: transparent;
    &:before {
      display: none;
    }

    iframe {
      background-color: black;
    }
  }

  .modal--iframe & {
    padding: ${props => props.closable === true ? "2rem 0" : "0"};
    height: 80vh;
  }

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: ${props => props.contentHeight ? `${props.contentHeight}px` : "100%"};
    margin: auto;
    border: 0;
    overflow: auto;
  }

  ${Breakpoint("lg")`
    order: 1;
    width: ${props => props.modalWidth ? `${props.modalWidth}px;` : "80vw"};
    max-width: ${props => props.modalWidth ? `${props.modalWidth}px;` : "75rem"};
    max-height: ${props => props.contentMaxHeight ? `${props.contentMaxHeight}vh` : "80vh"};
    background-color: white;

    .modal--video & {
      padding: 0;
      max-width: calc(100% - 7rem);
      max-height: 72rem;
      background-color: black;
    }

    .modal--iframe & {
      padding: 0;
    }
  `}
`;
const ModalClose = styled.button`
  position: relative;
  display: none;
  width: 3rem;
  min-width: 3rem;
  height: 3rem;
  min-height: 3rem;
  color: white;
  border: 0;
  padding: 0;
  order: 1;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 3rem;
  font-weight: 400;
  font-style: normal;
  font-family: var(--font-urw-din);
  margin: 0 0 1rem auto;
  background-color: black;
  overflow: hidden;

  ${Breakpoint("lg")`
    display: flex;
    order: 2;
    margin: 0 0 0 2rem;
  `}

  span {
    margin-top: -0.1rem;
    line-height: 3rem;
  }

  .modal--video & {
    display: flex;
    margin-right: 1rem;

    ${Breakpoint("lg")`
      margin-right: 0;
    `}
  }
`;
const ModalBox = styled.div`
  width: 100%;
  position: relative;

  .modal--video & {
    height: 0;
    padding-top: 56.25%;
  }

  .modal--iframe & {
    height: 100%;
  }
`;
function Modal(_ref) {
  let {
    children,
    toggleModal,
    modalCaller,
    modalIsShown,
    className = "",
    video = false,
    iframe = false,
    contentHeight,
    contentMaxHeightMobile,
    contentMaxHeight,
    modalWidth,
    isClosable = true,
    onVideoPlaybackEnded
  } = _ref;
  let videoPlayer;
  const contentRef = useRef();
  const handleClickOutside = e => {
    if (isClosable && modalIsShown === true && e.target.classList.length > 0 && e.target.classList.contains("modal--close")) {
      toggleModal(false);
    }
  };
  const detectEscapeKeyPress = e => {
    if (isClosable && modalIsShown === true && e.keyCode === 27) {
      toggleModal(false);
    }
  };
  const handleFocus = () => {
    const elementToFocus = modalIsShown ? document.querySelector(".modal__content") : modalCaller;
    if (elementToFocus) {
      elementToFocus.focus();
    }
  };
  const onYTPlayerStateChange = event => {
    // event 0 is video ended
    if (event.data === 0) {
      const {
        title: videoTitle
      } = videoPlayer.getVideoData();
      onVideoPlaybackEnded(videoTitle);
    }
  };
  const extractYoutubeId = videoUrl => {
    const parts = videoUrl === null || videoUrl === void 0 ? void 0 : videoUrl.split("/");
    if (parts !== null && parts !== void 0 && parts.length) {
      const videoSlug = parts[parts.length - 1].split("?");
      if (videoSlug.length) {
        return videoSlug[0];
      }
    }
    return false;
  };
  const loadYTVideo = () => {
    const playerWrapper = document.getElementById("yt-player");
    const videoSlug = extractYoutubeId(playerWrapper === null || playerWrapper === void 0 ? void 0 : playerWrapper.getAttribute("data-video-url"));
    if (videoSlug) {
      videoPlayer = new window.YT.Player("yt-player", {
        videoId: videoSlug,
        playerVars: {
          autoplay: 1,
          controls: 0,
          mute: 1
        },
        events: {
          onStateChange: onYTPlayerStateChange
        }
      });
    }
  };

  // Modals that pass the 'video' prop and content like this...
  // <div id="yt-player" data-video-url="//youtube.com/embed/XXXX"></div>
  // will use the YouTube Embed API so we can track video completions
  const handleVideoEmbed = () => {
    if (video && modalIsShown) {
      if (!window.YT) {
        const tag = document.createElement("script");
        tag.src = "https://www.youtube.com/iframe_api";
        window.onYouTubeIframeAPIReady = loadYTVideo;
        const firstScriptTag = document.getElementsByTagName("script")[0];
        if (firstScriptTag) {
          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        }
      } else {
        loadYTVideo();
      }
    }
  };
  useEffect(() => {
    const containerOverflow = modalIsShown ? "hidden" : "visible";
    document.querySelector("body").style.overflow = containerOverflow;
    handleFocus();
    handleVideoEmbed();
    document.addEventListener("click", handleClickOutside, false);
    document.addEventListener("keydown", detectEscapeKeyPress, false);
    return () => {
      document.querySelector("body").style.overflow = "visible";
      document.removeEventListener("click", handleClickOutside, false);
      document.removeEventListener("keydown", detectEscapeKeyPress, false);
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [modalIsShown]);
  const finishSwipingUp = () => {
    contentRef.current.style.transform = `translateY(0)`;
  };
  const finishSwipingDown = () => {
    const swipeIsScroll = contentRef.current.scrollTop > 0;
    if (isClosable && !swipeIsScroll) {
      contentRef.current.style.transform = `translateY(100%)`;
      setTimeout(() => {
        toggleModal(false);
      }, 300);
    }
  };
  const startSwipingUp = deltaY => {
    contentRef.current.style.transform = `translateY(-${deltaY}px)`;
  };
  const startSwipingDown = deltaY => {
    const swipeIsScroll = contentRef.current.scrollTop > 0;
    if (!swipeIsScroll) {
      contentRef.current.style.transform = `translateY(${deltaY}px)`;
    }
  };
  const swipeHandlers = useSwipeable({
    onSwiping: _ref2 => {
      let {
        deltaY,
        dir
      } = _ref2;
      if (dir === "Down") {
        startSwipingDown(deltaY);
      }
      if (dir === "Up") {
        startSwipingUp(deltaY);
      }
    },
    onSwiped: _ref3 => {
      let {
        dir
      } = _ref3;
      if (dir === "Down") {
        finishSwipingDown();
      }
      if (dir === "Up") {
        finishSwipingUp();
      }
    },
    preventDefaultTouchmoveEvent: false,
    delta: 10
  });
  return modalIsShown ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(ModalOverlay, {
    className: `modal__overlay modal--close ${video ? "modal--video" : ""} ${iframe ? "modal--iframe" : ""} ${className}`
  }, /*#__PURE__*/React.createElement(ModalWrapper, {
    role: "dialog",
    className: "modal__wrapper modal--close"
  }, /*#__PURE__*/React.createElement(ModalUI, _extends$1({
    className: `modal__ui modal--close`
  }, swipeHandlers), /*#__PURE__*/React.createElement(ModalContent, {
    className: `modal__content`,
    tabIndex: 0,
    contentHeight: contentHeight,
    modalWidth: modalWidth,
    contentMaxHeightMobile: contentMaxHeightMobile,
    contentMaxHeight: contentMaxHeight,
    ref: contentRef,
    closable: isClosable
  }, /*#__PURE__*/React.createElement(ModalBox, null, children)), isClosable && /*#__PURE__*/React.createElement(ModalClose, {
    className: `modal__close qa--modal-close modal--close`
  }, /*#__PURE__*/React.createElement("span", {
    className: "modal--close"
  }, "\xD7"))))), document.body) : null;
}
Modal.propTypes = {
  modalIsShown: PropTypes.bool.isRequired,
  toggleModal: PropTypes.func.isRequired,
  video: PropTypes.bool,
  iframe: PropTypes.bool,
  contentHeight: PropTypes.number,
  contentMaxHeightMobile: PropTypes.number,
  contentMaxHeight: PropTypes.number,
  modalWidth: PropTypes.number,
  isClosable: PropTypes.bool,
  onVideoPlaybackEnded: PropTypes.func,
  preventMobileOverflow: PropTypes.bool
};
styled.div`
  display: flex;
  flex-flow: column no-wrap;
  justify-content: ${props => props.justify || "flex-start"};

  p {
    display: inline-block;
    margin: 0 5px 0 0;
  }
`;
styled.span`
  content: url("https://images-dynamic-arcteryx.imgix.net/foundation-ui/svgs/Information_Icon.svg");
  height: 15px;
  width: 15px;
  display: inline-block;
  cursor: pointer;
  margin-top: 4px;
`;
({
  modalUrl: PropTypes.string.isRequired
});

const YoutubeVideoModal = _ref => {
  let {
    youTubeID,
    isModalVisible,
    setIsModalVisible,
    modalCaller
  } = _ref;
  return /*#__PURE__*/React.createElement(Modal, {
    onVideoPlaybackEnded: () => null,
    modalIsShown: isModalVisible,
    toggleModal: setIsModalVisible,
    modalCaller: modalCaller,
    video: true
  }, /*#__PURE__*/React.createElement("div", {
    id: "yt-player",
    "data-video-url": `//youtube.com/embed/${youTubeID}?autoplay=1`
  }));
};

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
const LoadingIcon = styled.span`
  position: absolute;
  left: 50%;
  top: 50%;
  @keyframes sendingToLambda {
    to {
      transform: rotate(360deg);
    }
  }
  &:after {
    content: "";
    box-sizing: border-box;
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid var(--pinline-grey);
    border-top-color: var(--dark-grey);
    animation: sendingToLambda 0.6s linear infinite;
    margin-left: -10px;
    margin-top: -10px;
  }
`;
const SUBTLE = "Subtle";
const INVERTED = "Inverted";
const SECONDARY = "Secondary-cta";
const SECURE = "Secure-Checkout";
const ADDTOCART = "Add-To-Cart";
const EMAIL = "Email";
const FINDINSTORE = "Find-In-Store";
const STANDARD = "Standard";
const widthValue = _ref => {
  let {
    width,
    context
  } = _ref;
  if (width) {
    return `${width}`;
  }
  switch (context) {
    case ADDTOCART:
    case EMAIL:
    case SECURE:
      return "100%;";
    default:
      return "auto";
  }
};
const _excluded$2 = ["market", "context", "type", "size", "IconButtonLeft", "IconButtonRight", "disabled", "isWaiting", "onClick", "className", "id", "style", "children", "href", "width"];
const ButtonWrapper = styled.div`
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: ${props => widthValue(props)};
  max-width: ${props => props.context === ADDTOCART && "400px" || props.context === SECURE && "100%"};
  height: 3rem;
  padding: 0 1rem;
  margin: 0;
  color: ${props => [INVERTED, SUBTLE, FINDINSTORE, SECONDARY].includes(props.context) ? "var(--colour-black)" : "var(--colour-white)"};
  text-decoration: none;
  border-radius: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: ${props => [SUBTLE, FINDINSTORE].includes(props.context) ? "1px solid var(--colour-black)" : "1px solid transparent"};
  font-size: 1rem;
  line-height: 1.1rem;
  font-family: var(--font-urw-din);
  font-weight: 400;
  text-transform: ${props => props.context === STANDARD || !props.href ? "uppercase" : "none"};
  word-break: keep-all;
  cursor: pointer;
  background-color: ${props => [INVERTED, SUBTLE, FINDINSTORE, SECONDARY].includes(props.context) ? "var(--colour-white)" : "var(--colour-black)"};

  &:hover,
  &:active {
    border: ${props => props.context === SECONDARY ? "1px solid var(--colour-black)" : "1px solid transparent"};
    background-image: linear-gradient(var(--colour-black), var(--background-gradient));
    transition: background-color 400ms ease-in;
    text-decoration: none;
    color: ${props => props.context === SECONDARY ? "var(--colour-black)" : "var(--colour-white)"};
  }

  &.waiting,
  &.is-waiting {
    color: ${props => [SUBTLE, FINDINSTORE, SECONDARY].includes(props.context) ? "var(--colour-white)" : "var(--colour-black)"};
    pointer-events: none;

    &::before,
    &::after {
      display: none;
    }
  }


  ${props => props.disabled && css`
      &:disabled,
      &.disabled {
        color: ${() => props.context === SECONDARY ? "var(--colour-grey-inactive)" : "var(--colour-white)"};
        cursor: not-allowed;
        background-color: ${() => props.context === SECONDARY ? "var(--colour-grey-background)" : "var(--colour-grey-inactive)"};
        border: none;
        &:hover {
          /* border: 1px solid transparent; */
          background-image: none;
        }
      }
    `};

  ${props => props.context === SECURE && css`
      &::after {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Secure_Icon_White.svg);
        width: 10px;
        height: 10px;
        margin-left: 10px;
        display: inline-block;
      }
    `};

  /* Inverted, Secondary-cta buttons */
  &.button--Secondary-cta {
    border: ${props => Boolean(props.href) ? "none" : "1px solid transparent"};
    text-decoration-line: ${props => Boolean(props.href) ? "underline" : "none"};
    &:hover,
    &:active,
    &:focus {
      background: var(--colour-white);
      color: var(--colour-black);
      border: ${props => Boolean(props.href) ? "none" : "1px solid var(--colour-black)"};
      font-weight: ${props => Boolean(props.href) ? "600" : "400"};
      cursor: pointer;
      text-decoration-line: ${props => Boolean(props.href) ? "underline" : "none"};
      
    }
    &.disabled {
      border: none;
      color: var(--colour-grey-inactive);
      cursor: not-allowed;
      background-color: ${props => Boolean(props.href) ? "transparent" : "var(--colour-grey-background)"};
      font-weight: 400;
      text-decoration-line: ${props => Boolean(props.href) ? "underline" : "none"};
    }
  }
  ${props => props.context === FINDINSTORE && css`
      display: flex;
      align-items: center;
      justify-content: center;
      width: 400px;
      max-width: 100%;
      line-height: 16px;
      text-transform: none;
      &::before {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Pin.svg);
        width: 16px;
        height: 16px;
        margin-right: 5px;
        display: inline-block;
      }
      &:hover {
        color: var(--colour-black);
        border: 1px solid var(--colour-black);
        background-image: none;
        background-color: var(--colour-white);
      }
    `};

  ${props => props.context === EMAIL && css`
      display: inline-flex;
      justify-content: center;
      align-items: center;
      &::before {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Email_White.svg);
        width: 22px;
        margin-right: 5px;
        display: inline-block;
      }
    `};

  ${props => props.context === ADDTOCART && css`
      display: inline-flex;
      justify-content: center;
      align-items: center;
      &::before {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Cart_Icon_White.svg);
        width: 22px;
        margin-right: 5px;
        display: inline-block;
      }
    `};
`;
const StyledIconWrapper = styled.span`
  margin-left: 5px;
  margin-right: 5px;
`;
const IconButton = _ref => {
  let {
    icon
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledIconWrapper, null, icon);
};
const Button = _ref2 => {
  let {
      market,
      context,
      type,
      size,
      IconButtonLeft,
      IconButtonRight,
      disabled,
      isWaiting,
      onClick,
      className,
      id,
      style,
      children,
      href = "",
      width
    } = _ref2,
    otherProps = _objectWithoutProperties(_ref2, _excluded$2);
  const baseClass = "button";
  const rootClass = cx(baseClass, className, {
    [`${baseClass}--${market}`]: market,
    [`${baseClass}--${context}`]: context,
    [`${baseClass}--${size}`]: size,
    disabled,
    waiting: isWaiting,
    "is-waiting": isWaiting
  });
  const isAnchorElement = Boolean(href);
  const as = isAnchorElement ? "a" : "button";
  const hasIconButtonLeft = Boolean(IconButtonLeft);
  const hasIconButtonRight = Boolean(IconButtonRight);
  return /*#__PURE__*/React.createElement(ButtonWrapper, _extends({
    as: as,
    id: id,
    href: isAnchorElement ? href : undefined,
    className: rootClass,
    type: isAnchorElement ? undefined : type,
    style: style,
    onClick: onClick,
    size: size,
    market: market,
    context: context,
    disabled: disabled,
    width: width
  }, otherProps), isWaiting && /*#__PURE__*/React.createElement(LoadingIcon, {
    "data-testid": "loading-icon"
  }), !isWaiting && hasIconButtonLeft && /*#__PURE__*/React.createElement(IconButton, {
    icon: IconButtonLeft
  }), /*#__PURE__*/React.createElement("span", null, children), !isWaiting && hasIconButtonRight && /*#__PURE__*/React.createElement(IconButton, {
    icon: IconButtonRight
  }));
};
Button.displayName = "Button";
Button.defaultProps = {
  context: "Standard",
  market: "Outdoor",
  type: "button",
  disabled: false,
  isWaiting: false,
  onClick: null,
  style: {}
};
Button.propTypes = {
  context: PropTypes.oneOf(["Standard", "Inverted", "Subtle", "Secondary-cta", "Secure-checkout", "Add-To-Cart", "Find-In-Store", "Email"]),
  type: PropTypes.string,
  market: PropTypes.oneOf(["Outdoor", "Leaf", "Veilance"]),
  id: PropTypes.string,
  size: PropTypes.oneOf(["xs", "sm", "md", "lg"]),
  disabled: PropTypes.bool,
  isWaiting: PropTypes.bool,
  onClick: PropTypes.func,
  className: PropTypes.string,
  style: PropTypes.object,
  children: PropTypes.node,
  IconButtonLeft: PropTypes.node,
  IconButtonRight: PropTypes.node
};

const StyledButton = styled(Button)`
  width: ${props => (props === null || props === void 0 ? void 0 : props.width) || "160px"};
  font-size: ${props => (props === null || props === void 0 ? void 0 : props.fontSize) || "1rem"};
  background-color: ${props => (props === null || props === void 0 ? void 0 : props.backgroundColor) || "white"};
  color: ${props => (props === null || props === void 0 ? void 0 : props.color) || "black"};

  &:hover {
    color: ${props => (props === null || props === void 0 ? void 0 : props.backgroundColor) === "white" ? "black" : "white"};
  }

  &:active {
    color: ${props => (props === null || props === void 0 ? void 0 : props.backgroundColor) === "white" ? "black" : "white"};
  }

  ${props => (props === null || props === void 0 ? void 0 : props.adornment) && css`
      &::before {
        content: "${props.adornment}";
        position: absolute;
        top: 50%;
        left: 17px;
        transform: translateY(-50%);
      }
    `};

  @media (min-width: 768px) {
    ${props => props.tabletStyles.hasOwnProperty("width") && `width: ${generateStyleValue(props.tabletStyles.width)};`};
    ${props => props.tabletStyles.hasOwnProperty("fontSize") && `font-size: ${generateStyleValue(props.tabletStyles.fontSize)};`};
  }

  @media (min-width: 1440px) {
    ${props => props.desktopStyles.hasOwnProperty("fontSize") && `font-size: ${generateStyleValue(props.desktopStyles.fontSize)};`};
    ${props => props.desktopStyles.hasOwnProperty("width") && `width: ${generateStyleValue(props.desktopStyles.width)};`};
  }
`;
const CMSButton = _ref => {
  let {
    adornment = "",
    width,
    backgroundColor,
    color,
    href,
    onClick,
    onContextMenu,
    tabletStyles = {},
    desktopStyles = {},
    label
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledButton, {
    adornment: adornment,
    width: width,
    backgroundColor: backgroundColor,
    color: color,
    href: href,
    onClick: onClick,
    onContextMenu: onContextMenu,
    tabletStyles: tabletStyles,
    desktopStyles: desktopStyles
  }, label);
};

const ButtonVideo = _ref => {
  let {
    adornment,
    width,
    backgroundColor,
    color,
    youTubeID,
    onClick = () => null,
    onContextMenu,
    tabletStyles,
    desktopStyles,
    label,
    href
  } = _ref;
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [modalCaller, setModalCaller] = useState();
  const onClickModal = e => {
    // Prevent navigation when using the anchor tag
    e.preventDefault();
    onClick(e);
    setModalCaller(e.currentTarget);
    setIsModalVisible(prev => !prev);
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(YoutubeVideoModal, {
    youTubeID: youTubeID,
    isModalVisible: isModalVisible,
    modalCaller: modalCaller,
    setIsModalVisible: setIsModalVisible
  }), /*#__PURE__*/React.createElement(CMSButton, {
    adornment: adornment,
    backgroundColor: backgroundColor,
    color: color,
    desktopStyles: desktopStyles,
    href: href !== null && href !== void 0 ? href : "",
    label: label,
    onClick: onClickModal,
    onContextMenu: onContextMenu,
    tabletStyles: tabletStyles,
    width: width
  }));
};

const _excluded$1 = ["type", "label", "onClick", "onContextMenu", "responsiveStyles", "adornment"];
const ButtonList = _ref => {
  let {
    buttons
  } = _ref;
  return /*#__PURE__*/React.createElement(React.Fragment, null, buttons.map(_ref2 => {
    let {
        type,
        label,
        onClick = () => null,
        onContextMenu = () => null,
        responsiveStyles,
        adornment = ""
      } = _ref2,
      rest = _objectWithoutProperties$1(_ref2, _excluded$1);
    if (type === "buttonYoutube") {
      const {
        youTubeID
      } = rest;
      return /*#__PURE__*/React.createElement(ButtonVideo, {
        adornment: adornment,
        backgroundColor: rest === null || rest === void 0 ? void 0 : rest.backgroundColor,
        color: rest === null || rest === void 0 ? void 0 : rest.color,
        desktopStyles: responsiveStyles === null || responsiveStyles === void 0 ? void 0 : responsiveStyles.desktop,
        href: rest === null || rest === void 0 ? void 0 : rest.url,
        key: youTubeID + label,
        label: label,
        onClick: onClick,
        onContextMenu: onContextMenu,
        tabletStyles: responsiveStyles === null || responsiveStyles === void 0 ? void 0 : responsiveStyles.tablet,
        width: rest === null || rest === void 0 ? void 0 : rest.width,
        youTubeID: youTubeID
      });
    }
    const {
      url
    } = rest;
    return /*#__PURE__*/React.createElement(CMSButton, {
      adornment: adornment,
      backgroundColor: rest === null || rest === void 0 ? void 0 : rest.backgroundColor,
      color: rest === null || rest === void 0 ? void 0 : rest.color,
      desktopStyles: responsiveStyles === null || responsiveStyles === void 0 ? void 0 : responsiveStyles.desktop,
      href: url,
      key: url + label,
      label: label,
      onClick: onClick,
      onContextMenu: onContextMenu,
      tabletStyles: responsiveStyles === null || responsiveStyles === void 0 ? void 0 : responsiveStyles.tablet,
      width: rest === null || rest === void 0 ? void 0 : rest.width
    });
  }));
};

const Container = styled.div`
  ${baseFlexBox}
  ${baseMarginStyles}
  ${baseSizeStyles}

  @media (min-width: 768px) {
    ${tabletMarginStyles}
    ${tabletFlexBox}
    ${tabletSizeStyles}
  }
  @media (min-width: 1440px) {
    ${desktopFlexBox}
    ${desktopMarginStyles}
    ${desktopSizeStyles}
  }
  gap: 0.5rem;
  z-index: 10;
`;
const ButtonGroup = _ref => {
  var _buttonContainerStyle;
  let {
    buttons = [],
    tabletStyles = {},
    buttonContainerStyles = {},
    desktopStyles = {}
  } = _ref;
  const flexDirection = (_buttonContainerStyle = buttonContainerStyles === null || buttonContainerStyles === void 0 ? void 0 : buttonContainerStyles.flexDirection) !== null && _buttonContainerStyle !== void 0 ? _buttonContainerStyle : "row";
  return /*#__PURE__*/React.createElement(Container, _extends$2({}, buttonContainerStyles, {
    flexDirection: flexDirection,
    tabletStyles: tabletStyles,
    desktopStyles: desktopStyles
  }), /*#__PURE__*/React.createElement(ButtonList, {
    buttons: buttons
  }));
};

const StyledText = styled.p`
  ${baseFontStyles}
  ${baseMarginStyles}

  @media (min-width: 768px) {
    ${tabletFontStyles}
    ${tabletMarginStyles}
  }

  @media (min-width: 1440px) {
    ${desktopFontStyles}
    ${desktopMarginStyles}
  }
`;
const TextArea = _ref => {
  let {
    color,
    content,
    desktopStyles = {},
    fontFamily,
    fontSize,
    fontWeight,
    letterSpacing,
    lineHeight,
    marginBottom,
    marginLeft,
    marginRight,
    marginTop,
    tabletStyles = {},
    textAlign,
    textShadow,
    textTransform
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledText, {
    desktopStyles: desktopStyles,
    tabletStyles: tabletStyles,
    color: color,
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: fontWeight,
    letterSpacing: letterSpacing,
    lineHeight: lineHeight,
    textAlign: textAlign,
    textShadow: textShadow,
    textTransform: textTransform,
    marginTop: marginTop,
    marginRight: marginRight,
    marginLeft: marginLeft,
    marginBottom: marginBottom,
    "data-testid": "textarea",
    dangerouslySetInnerHTML: {
      __html: content
    }
  });
};

const StyledH1 = styled(H1)`
  ${baseFontStyles}
  ${baseMarginStyles}

  @media (min-width: 768px) {
    ${tabletFontStyles}
    ${tabletMarginStyles}
  }

  @media (min-width: 1440px) {
    ${desktopFontStyles}
    ${desktopMarginStyles}
  }
`;
const Headline = _ref => {
  let {
    color,
    content,
    desktopStyles = {},
    fontFamily,
    fontSize,
    fontWeight,
    letterSpacing,
    lineHeight,
    marginBottom,
    marginLeft,
    marginRight,
    marginTop,
    tabletStyles = {},
    textAlign,
    textShadow,
    textTransform
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledH1, {
    color: color,
    tabletStyles: tabletStyles,
    desktopStyles: desktopStyles,
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: fontWeight,
    letterSpacing: letterSpacing,
    lineHeight: lineHeight,
    textAlign: textAlign,
    textShadow: textShadow,
    textTransform: textTransform,
    marginTop: marginTop,
    marginRight: marginRight,
    marginLeft: marginLeft,
    marginBottom: marginBottom,
    "data-testid": "headline",
    dangerouslySetInnerHTML: {
      __html: content
    }
  });
};

const _excluded = ["type", "responsiveStyles"];
// Breakpoint - 375px
const maxWidthMobileMap = {
  hero: 350,
  secondary: 345
};
// Breakpoint - 576px
const maxWidthTabletSmallMap = {
  hero: 650,
  secondary: 456
};
// Breakpoint - 768px
const maxWidthTabletMap = {
  hero: 650,
  secondary: 342
};
// Breakpoint - 992px
const maxWidthDesktopSmallMap = {
  hero: 650,
  secondary: 456
};
// Breakpoint - 1200px
const maxWidthDesktopMap = {
  hero: 650,
  secondary: 500
};
// Breakpoint - 1920px
const maxWidthDesktopLargeMap = {
  hero: 650,
  secondary: 650
};
const StyledDiv$2 = styled.div`
  z-index: 2;
  ${baseFlexBox}
  ${baseMarginStyles}
  ${baseSizeStyles}
  width: ${_ref => {
  let {
    width = "auto"
  } = _ref;
  return generateStyleValue(width);
}};
  max-width: ${_ref2 => {
  let {
    layout = "hero"
  } = _ref2;
  return `${maxWidthMobileMap[layout]}px`;
}};

  @media (min-width: 576px) {
    max-width: ${_ref3 => {
  let {
    layout = "hero"
  } = _ref3;
  return `${maxWidthTabletSmallMap[layout]}px`;
}};
  }

  @media (min-width: 768px) {
    max-width: ${_ref4 => {
  let {
    layout = "hero"
  } = _ref4;
  return `${maxWidthTabletMap[layout]}px`;
}};

    ${tabletMarginStyles}
    ${tabletFlexBox}
    ${tabletSizeStyles}
  }

  @media (min-width: 992px) {
    max-width: ${_ref5 => {
  let {
    layout = "hero"
  } = _ref5;
  return `${maxWidthDesktopSmallMap[layout]}px`;
}};
  }

  @media (min-width: 1200px) {
    max-width: ${_ref6 => {
  let {
    layout = "hero"
  } = _ref6;
  return `${maxWidthDesktopMap[layout]}px`;
}};
  }

  @media (min-width: 1440px) {
    ${desktopFlexBox}
    ${desktopMarginStyles}
    ${desktopSizeStyles}
  }
  @media (min-width: 1920px) {
    max-width: ${_ref7 => {
  let {
    layout = "hero"
  } = _ref7;
  return `${maxWidthDesktopLargeMap[layout]}px`;
}};
  }
`;
const elementMap = {
  headline: Headline,
  textarea: TextArea,
  image: Image,
  buttonGroup: ButtonGroup
};
const ElementsContainer = _ref8 => {
  let {
    alignItems,
    desktopStyles = {},
    elements,
    flexGap,
    gap,
    height,
    justifyContent,
    layout,
    marginBottom,
    marginLeft,
    marginRight,
    marginTop,
    maxHeight,
    maxWidth,
    tabletStyles = {},
    width
  } = _ref8;
  return /*#__PURE__*/React.createElement(StyledDiv$2, {
    alignItems: alignItems,
    "data-testid": "elementlist",
    desktopStyles: desktopStyles,
    flexGap: flexGap,
    gap: gap,
    layout: layout,
    height: height,
    justifyContent: justifyContent,
    marginBottom: marginBottom,
    marginLeft: marginLeft,
    marginRight: marginRight,
    marginTop: marginTop,
    maxHeight: maxHeight,
    maxWidth: maxWidth,
    tabletStyles: tabletStyles,
    width: width
  }, elements.map((_ref9, index) => {
    let {
        type,
        responsiveStyles = {
          tablet: {},
          desktop: {}
        }
      } = _ref9,
      props = _objectWithoutProperties$1(_ref9, _excluded);
    const Element = elementMap[type];
    const {
      tablet: elementTabletStyles,
      desktop: elementDesktopStyles
    } = responsiveStyles;
    return /*#__PURE__*/React.createElement(Element, _extends$2({
      tabletStyles: elementTabletStyles,
      desktopStyles: elementDesktopStyles
    }, props, {
      key: index
    }));
  }));
};

const breakpoints = {
  desktopLarge: 1920,
  desktop: 1200,
  desktopSmall: 992,
  tablet: 768,
  mobileLarge: 576,
  mobileSmall: 375
};

const generateSource = _ref => {
  let {
    width,
    height,
    media,
    sizes,
    focalPointX = null,
    focalPointY = null
  } = _ref;
  return {
    width,
    height,
    imgixParams: {
      focalPointX,
      focalPointY,
      width,
      height
    },
    htmlAttributes: {
      media
    },
    sizes
  };
};

// Wrapping Imgix in a styled component, which throws an error in the console.
PublicConfigAPI.disableWarning("fallbackImage");
const StyledImgix = styled(Imgix)`
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  object-fit: cover;
`;
const BackgroundImage = _ref => {
  let {
    src,
    sources,
    shouldLazyLoad = false,
    sizes = "100vw"
  } = _ref;
  const attributeConfig = shouldLazyLoad ? {
    src: "data-src",
    sizes: "data-sizes",
    srcSet: "data-srcset"
  } : null;
  const commonImgixProps = {
    fit: "crop",
    crop: "focalpoint",
    auto: "compress,format,enhance",
    q: 100
  };
  // Low Quality Image Placeholder Technique (LQIP)
  const lqipSource = `${src}?h=10&auto=format,compress`;

  // Only apply the lazyload classname to the image element. When applied to the Source element it
  // will severely impact performance.
  const imageClassName = shouldLazyLoad ? "lazyload" : "";
  return /*#__PURE__*/React.createElement(Picture, null, sources.map(_ref2 => {
    let {
      height,
      width,
      imgixParams: {
        focalPointX,
        focalPointY
      },
      htmlAttributes,
      sizes: sourceSizes
    } = _ref2;
    return /*#__PURE__*/React.createElement(Source, {
      key: htmlAttributes.media,
      imgixParams: _objectSpread2({
        "fp-x": focalPointX,
        "fp-y": focalPointY,
        width,
        height
      }, commonImgixProps),
      src: src,
      htmlAttributes: _objectSpread2(_objectSpread2({}, htmlAttributes), {}, {
        src: lqipSource
      }),
      width: width,
      height: height,
      attributeConfig: attributeConfig,
      sizes: sourceSizes
    });
  }), /*#__PURE__*/React.createElement(StyledImgix, {
    imgixParams: commonImgixProps,
    htmlAttributes: {
      src: lqipSource
    },
    src: src,
    className: imageClassName,
    sizes: sizes,
    attributeConfig: attributeConfig
  }));
};

// The Width and Height are pulled from the Design System. The values are the height and width at each breakpoint.

const HeroBackgroundImage = _ref => {
  let {
    src,
    mobileSmall,
    mobileLarge,
    tablet,
    desktopSmall,
    desktop,
    desktopLarge,
    title
  } = _ref;
  const sources = [generateSource({
    width: 1920,
    height: 1085,
    media: `(min-width: ${breakpoints.desktopLarge}px)`,
    sizes: "100vw",
    focalPointX: desktopLarge === null || desktopLarge === void 0 ? void 0 : desktopLarge.focalPointX,
    focalPointY: desktopLarge === null || desktopLarge === void 0 ? void 0 : desktopLarge.focalPointY
  }), generateSource({
    width: 1920,
    height: 678,
    media: `(min-width: ${breakpoints.desktop}px)`,
    sizes: "100vw",
    focalPointX: desktop === null || desktop === void 0 ? void 0 : desktop.focalPointX,
    focalPointY: desktop === null || desktop === void 0 ? void 0 : desktop.focalPointY
  }), generateSource({
    width: 992,
    height: 600,
    media: `(min-width: ${breakpoints.desktopSmall}px)`,
    sizes: "100vw",
    focalPointX: desktopSmall === null || desktopSmall === void 0 ? void 0 : desktopSmall.focalPointX,
    focalPointY: desktopSmall === null || desktopSmall === void 0 ? void 0 : desktopSmall.focalPointY
  }), generateSource({
    width: 768,
    height: 600,
    media: `(min-width: ${breakpoints.tablet}px)`,
    sizes: "100vw",
    focalPointX: tablet === null || tablet === void 0 ? void 0 : tablet.focalPointX,
    focalPointY: tablet === null || tablet === void 0 ? void 0 : tablet.focalPointY
  }), generateSource({
    width: 576,
    height: 600,
    media: `(min-width: ${breakpoints.mobileLarge}px)`,
    sizes: "100vw",
    focalPointX: mobileLarge === null || mobileLarge === void 0 ? void 0 : mobileLarge.focalPointX,
    focalPointY: mobileLarge === null || mobileLarge === void 0 ? void 0 : mobileLarge.focalPointY
  }), generateSource({
    width: 375,
    height: 561,
    media: `(min-width: ${breakpoints.mobileSmall}px)`,
    sizes: "100vw",
    focalPointX: mobileSmall === null || mobileSmall === void 0 ? void 0 : mobileSmall.focalPointX,
    focalPointY: mobileSmall === null || mobileSmall === void 0 ? void 0 : mobileSmall.focalPointY
  })];
  return /*#__PURE__*/React.createElement(BackgroundImage, {
    src: src,
    sources: sources,
    shouldLazyLoad: false,
    sizes: "100vw",
    title: title
  });
};

// The Width and Height are pulled from the Design System. The values are the height and width at each breakpoint.

const SecondaryBackgroundImage = _ref => {
  let {
    src,
    mobileSmall,
    mobileLarge,
    tablet,
    desktopSmall,
    desktop,
    desktopLarge
  } = _ref;
  const sources = [generateSource({
    width: 952.5,
    height: 696,
    media: `(min-width: ${breakpoints.desktopLarge}px)`,
    sizes: "50vw",
    focalPointX: desktopLarge === null || desktopLarge === void 0 ? void 0 : desktopLarge.focalPointX,
    focalPointY: desktopLarge === null || desktopLarge === void 0 ? void 0 : desktopLarge.focalPointY
  }), generateSource({
    width: 591.66,
    height: 430.09,
    media: `(min-width: ${breakpoints.desktop}px)`,
    sizes: "50vw",
    focalPointX: desktop === null || desktop === void 0 ? void 0 : desktop.focalPointX,
    focalPointY: desktop === null || desktop === void 0 ? void 0 : desktop.focalPointY
  }), generateSource({
    width: 487.66,
    height: 359,
    media: `(min-width: ${breakpoints.desktopSmall}px)`,
    sizes: "50vw",
    focalPointX: desktopSmall === null || desktopSmall === void 0 ? void 0 : desktopSmall.focalPointX,
    focalPointY: desktopSmall === null || desktopSmall === void 0 ? void 0 : desktopSmall.focalPointY
  }), generateSource({
    width: 425,
    height: 425,
    media: `(min-width: ${breakpoints.tablet}px)`,
    sizes: "50vw",
    focalPointX: tablet === null || tablet === void 0 ? void 0 : tablet.focalPointX,
    focalPointY: tablet === null || tablet === void 0 ? void 0 : tablet.focalPointY
  }), generateSource({
    width: 576,
    height: 576,
    media: `(min-width: ${breakpoints.mobileLarge}px)`,
    sizes: "100vw",
    focalPointX: mobileLarge === null || mobileLarge === void 0 ? void 0 : mobileLarge.focalPointX,
    focalPointY: mobileLarge === null || mobileLarge === void 0 ? void 0 : mobileLarge.focalPointY
  }), generateSource({
    width: 320,
    height: 320,
    media: `(min-width: ${breakpoints.mobileSmall}px)`,
    sizes: "100vw",
    focalPointX: mobileSmall === null || mobileSmall === void 0 ? void 0 : mobileSmall.focalPointX,
    focalPointY: mobileSmall === null || mobileSmall === void 0 ? void 0 : mobileSmall.focalPointY
  })];
  return /*#__PURE__*/React.createElement(BackgroundImage, {
    src: src,
    sources: sources,
    shouldLazyLoad: true,
    sizes: "(min-width:768px) 100vw, 50vw"
  });
};

const StyledBlock = styled.div`
  ${baseFlexBox}
  background-color: ${_ref => {
  let {
    backgroundColor = "black"
  } = _ref;
  return backgroundColor;
}};
  position: relative;
  height: 100%;
  width: 100%;
  @media (min-width: 768px) {
    ${tabletFlexBox}
  }

  @media (min-width: 1440px) {
    ${desktopFlexBox}
  }
`;
const ContentContainer = _ref2 => {
  let {
    backgroundImage,
    containerDesktopStyles,
    containerStyles,
    containerTabletStyles,
    elementListDesktopStyles,
    elementListTabletStyles,
    elements,
    elementsContainerStyles,
    layout
  } = _ref2;
  const isHero = layout === "hero";
  const isSecondary = layout === "secondary";
  const hasBackgroundImage = Boolean(backgroundImage);
  return /*#__PURE__*/React.createElement(StyledBlock, _extends$2({}, containerStyles, {
    "data-testid": "ctaContentContainer",
    desktopStyles: containerDesktopStyles,
    tabletStyles: containerTabletStyles
  }), hasBackgroundImage && isHero && /*#__PURE__*/React.createElement(HeroBackgroundImage, _extends$2({}, backgroundImage.imgixParams, {
    src: backgroundImage.src,
    title: backgroundImage.title
  })), hasBackgroundImage && isSecondary && /*#__PURE__*/React.createElement(SecondaryBackgroundImage, _extends$2({}, backgroundImage.imgixParams, {
    src: backgroundImage.src,
    title: backgroundImage.title
  })), /*#__PURE__*/React.createElement(ElementsContainer, _extends$2({}, elementsContainerStyles, {
    elements: elements,
    tabletStyles: elementListTabletStyles,
    desktopStyles: elementListDesktopStyles,
    layout: layout
  })));
};

const generateBackgroundType = (backgroundImage, backgroundVideoUrl) => {
  const hasBackgroundImage = Boolean(backgroundImage);
  const hasBackgroundVideo = Boolean(backgroundVideoUrl);
  if (hasBackgroundVideo || hasBackgroundImage && hasBackgroundVideo) {
    return "backgroundVideo";
  }
  if (hasBackgroundImage) {
    return "backgroundImage";
  }
  return "backgroundColor";
};

const StyledDiv$1 = styled.div`
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
`;
const StyledVideo = styled.video`
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
`;

/*
 * https://en.wikipedia.org/wiki/MPEG-4_Part_14
 * https://en.wikipedia.org/wiki/WebM
 * https://en.wikipedia.org/wiki/Ogg
 */

const videoFormats = {
  mp4: "video/mp4",
  m4a: "video/mp4",
  m4p: "video/mp4",
  m4b: "video/mp4",
  m4r: "video/mp4",
  m4v: "video/mp4",
  webm: "video/webm",
  ogg: "video/ogg",
  ogv: "video/ogg",
  oga: "video/ogg",
  ogx: "video/ogg",
  ogm: "video/ogg",
  spx: "video/ogg",
  opus: "video/ogg"
};
const VideoBackground = _ref => {
  let {
    url,
    children
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledDiv$1, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledVideo, {
    autoPlay: true,
    loop: true,
    muted: true,
    playsInline: true
  }, /*#__PURE__*/React.createElement("source", {
    src: url,
    type: videoFormats[url.split(".").pop()]
  })), children));
};

const VideoBackgroundWrapper = _ref => {
  let {
    backgroundImage,
    backgroundVideoUrl,
    containerDesktopStyles,
    containerStyles,
    containerTabletStyles,
    elementListDesktopStyles,
    elementListTabletStyles,
    elements,
    elementsContainerStyles,
    layout
  } = _ref;
  return /*#__PURE__*/React.createElement(VideoBackground, {
    url: backgroundVideoUrl
  }, /*#__PURE__*/React.createElement(ContentContainer, {
    backgroundImage: backgroundImage,
    containerDesktopStyles: containerDesktopStyles,
    containerStyles: containerStyles,
    containerTabletStyles: containerTabletStyles,
    elementListDesktopStyles: elementListDesktopStyles,
    elementListTabletStyles: elementListTabletStyles,
    elements: elements,
    elementsContainerStyles: elementsContainerStyles,
    layout: layout
  }));
};

const BackgroundImageWrapper = _ref => {
  let {
    backgroundImage,
    containerDesktopStyles,
    containerStyles,
    containerTabletStyles,
    elementListDesktopStyles,
    elementListTabletStyles,
    elements,
    elementsContainerStyles,
    layout
  } = _ref;
  return /*#__PURE__*/React.createElement(ContentContainer, {
    backgroundImage: backgroundImage,
    containerDesktopStyles: containerDesktopStyles,
    containerStyles: containerStyles,
    containerTabletStyles: containerTabletStyles,
    elementListDesktopStyles: elementListDesktopStyles,
    elementListTabletStyles: elementListTabletStyles,
    elements: elements,
    elementsContainerStyles: elementsContainerStyles,
    layout: layout
  });
};

const backgroundMap = {
  backgroundImage: BackgroundImageWrapper,
  backgroundVideo: VideoBackgroundWrapper,
  backgroundColor: ContentContainer
};
const CtaContentBlock = _ref => {
  var _backgroundMap$backgr;
  let {
    backgroundImage,
    backgroundVideoUrl,
    containerStyles = {},
    elements = [],
    elementsContainerStyles = {},
    type
  } = _ref;
  // Default values for Styled Block - this ensures that the value is an object and never undefined.
  const {
    responsiveStyles: {
      desktop: containerDesktopStyles = {},
      tablet: containerTabletStyles = {}
    } = {}
  } = containerStyles;
  const {
    responsiveStyles: {
      desktop: elementListDesktopStyles = {},
      tablet: elementListTabletStyles = {}
    } = {}
  } = elementsContainerStyles;
  const backgroundType = generateBackgroundType(backgroundImage, backgroundVideoUrl);
  const Block = (_backgroundMap$backgr = backgroundMap[backgroundType]) !== null && _backgroundMap$backgr !== void 0 ? _backgroundMap$backgr : /*#__PURE__*/React.createElement(React.Fragment, null);
  return /*#__PURE__*/React.createElement(Block, {
    backgroundVideoUrl: backgroundVideoUrl,
    backgroundImage: backgroundImage,
    containerDesktopStyles: containerDesktopStyles,
    containerStyles: containerStyles,
    containerTabletStyles: containerTabletStyles,
    elementListDesktopStyles: elementListDesktopStyles,
    elementListTabletStyles: elementListTabletStyles,
    elements: elements,
    elementsContainerStyles: elementsContainerStyles,
    layout: type
  });
};

const HeroSection = styled.section`
  width: 100%;
  height: 90vh;
  min-height: 450px;

  @media (min-width: 550px) {
    /* styles for screens above 550px */
    min-height: 600px;
    height: 87vh;
  }
`;

const Hero6Section = styled.section`
  width: 100%;
  height: calc(100vh);
  display: grid;
  grid-template: 1fr 1fr 1fr / 1fr;
  grid-gap: 3px;
  ${Breakpoint("md")`
    grid-template: 1fr 1fr 1fr / 1fr 1fr;
  `}
  ${Breakpoint("lg")`
    grid-template: 1fr 1fr / 1fr 1fr 1fr;
  `}
`;

const SecondarySection = styled.section`
  display: flex;
  flex-direction: column;
  gap: 1rem;

  @media (min-width: 769px) {
    flex-direction: row;
  }

  > * {
    width: 100%;
    aspect-ratio: 1/1;
    @media (min-width: 1440px) {
      width: 50%;
      aspect-ratio: 4/3;
    }
  }
`;

const TertiarySection = styled.section`
  display: grid;
  grid-template-columns: 1fr;
  // Container Row Gap is 15px Above and below
  // Requirement is 60px in total (45+15)
  padding: 45px 1rem;
  justify-content: center; /* center horizontally within the grid container */
  align-items: center; /* center vertically within the grid container */
  > div {
    justify-self: center; /* center horizontally within the grid column */
    align-self: center; /* center vertically within the grid column */
    max-width: 410px;
  }

  > div:nth-child(1) {
    display: none;
  }

  > div:nth-child(3) {
    display: none;
  }

  /* Target the first and last columns and hide them */
  @media (min-width: 768px) {
    /* styles for screens above 1440px */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 1rem;
    > div:nth-child(1) {
      display: flex;
    }

    > div:nth-child(3) {
      display: flex;
    }
  }
  /* Target the first and last columns and hide them */
  @media (min-width: 1440px) {
    /* styles for screens above 1440px */
    grid-template-columns: 400px 400px 400px;
  }
  > * {
    aspect-ratio: 1/1;
  }
`;

const sectionMap = {
  hero6: Hero6Section,
  hero: HeroSection,
  secondary: SecondarySection,
  tertiary: TertiarySection
};
const StyledDiv = styled.div`
  display: grid;
  width: 100%;
  grid-row-gap: 1rem;
  background-color: ${_ref => {
  let {
    backgroundColor = "white"
  } = _ref;
  return backgroundColor;
}};
  z-index: 0;
  position: relative;
`;
const PageLayout = _ref2 => {
  let {
    sections = [],
    backgroundColor = "white"
  } = _ref2;
  return /*#__PURE__*/React.createElement(StyledDiv, {
    backgroundColor: backgroundColor
  }, sections.map((_ref3, index) => {
    let {
      layout,
      blocks = []
    } = _ref3;
    const SectionComponent = sectionMap[layout];
    return SectionComponent ? /*#__PURE__*/React.createElement(React.Fragment, {
      key: layout + index
    }, /*#__PURE__*/React.createElement(SectionComponent, {
      "data-testid": layout
    }, blocks.map((block, blockIndex) => /*#__PURE__*/React.createElement(CtaContentBlock, _extends$2({
      type: layout,
      key: blockIndex
    }, block))))) : null;
  }));
};

export { PageLayout };
//# sourceMappingURL=index.js.map
