import React from "react";
import styled, { css } from "styled-components";
import { generateStyleValue } from "../styles/helpers";
import { Button } from "@arcteryx/components-button";

const StyledButton = styled(Button)`
  width: ${(props) => props?.width || "160px"};
  font-size: ${(props) => props?.fontSize || "1rem"};
  background-color: ${(props) => props?.backgroundColor || "white"};
  color: ${(props) => props?.color || "black"};

  &:hover {
    color: ${(props) => (props?.backgroundColor === "white" ? "black" : "white")};
  }

  &:active {
    color: ${(props) => (props?.backgroundColor === "white" ? "black" : "white")};
  }

  ${(props) =>
    props?.adornment &&
    css`
      &::before {
        content: "${props.adornment}";
        position: absolute;
        top: 50%;
        left: 17px;
        transform: translateY(-50%);
      }
    `};

  @media (min-width: 768px) {
    ${(props) =>
      props.tabletStyles.hasOwnProperty("width") && `width: ${generateStyleValue(props.tabletStyles.width)};`};
    ${(props) =>
      props.tabletStyles.hasOwnProperty("fontSize") &&
      `font-size: ${generateStyleValue(props.tabletStyles.fontSize)};`};
  }

  @media (min-width: 1440px) {
    ${(props) =>
      props.desktopStyles.hasOwnProperty("fontSize") &&
      `font-size: ${generateStyleValue(props.desktopStyles.fontSize)};`};
    ${(props) =>
      props.desktopStyles.hasOwnProperty("width") && `width: ${generateStyleValue(props.desktopStyles.width)};`};
  }
`;

export const CMSButton = ({
  adornment = "",
  width,
  backgroundColor,
  color,
  href,
  onClick,
  onContextMenu,
  tabletStyles = {},
  desktopStyles = {},
  label,
}) => {
  return (
    <StyledButton
      adornment={adornment}
      width={width}
      backgroundColor={backgroundColor}
      color={color}
      href={href}
      onClick={onClick}
      onContextMenu={onContextMenu}
      tabletStyles={tabletStyles}
      desktopStyles={desktopStyles}
    >
      {label}
    </StyledButton>
  );
};
