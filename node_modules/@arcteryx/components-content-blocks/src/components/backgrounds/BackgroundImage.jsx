import React from "react";
import Imgix from "react-imgix";
import styled from "styled-components";
import { Picture, Source, PublicConfigAPI } from "react-imgix";
import "lazysizes";
import "lazysizes/plugins/parent-fit/ls.parent-fit";
import "lazysizes/plugins/attrchange/ls.attrchange";

// Wrapping Imgix in a styled component, which throws an error in the console.
PublicConfigAPI.disableWarning("fallbackImage");

const StyledImgix = styled(Imgix)`
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  object-fit: cover;
`;

export const BackgroundImage = ({ src, sources, shouldLazyLoad = false, sizes = "100vw" }) => {
  const attributeConfig = shouldLazyLoad
    ? {
        src: "data-src",
        sizes: "data-sizes",
        srcSet: "data-srcset",
      }
    : null;

  const commonImgixProps = {
    fit: "crop",
    crop: "focalpoint",
    auto: "compress,format,enhance",
    q: 100,
  };
  // Low Quality Image Placeholder Technique (LQIP)
  const lqipSource = `${src}?h=10&auto=format,compress`;

  // Only apply the lazyload classname to the image element. When applied to the Source element it
  // will severely impact performance.
  const imageClassName = shouldLazyLoad ? "lazyload" : "";

  return (
    <Picture>
      {sources.map(
        ({ height, width, imgixParams: { focalPointX, focalPointY }, htmlAttributes, sizes: sourceSizes }) => {
          return (
            <Source
              key={htmlAttributes.media}
              imgixParams={{
                "fp-x": focalPointX,
                "fp-y": focalPointY,
                width,
                height,
                ...commonImgixProps,
              }}
              src={src}
              htmlAttributes={{ ...htmlAttributes, src: lqipSource }}
              width={width}
              height={height}
              attributeConfig={attributeConfig}
              sizes={sourceSizes}
            />
          );
        }
      )}
      <StyledImgix
        imgixParams={commonImgixProps}
        htmlAttributes={{ src: lqipSource }}
        src={src}
        className={imageClassName}
        sizes={sizes}
        attributeConfig={attributeConfig}
      />
    </Picture>
  );
};
