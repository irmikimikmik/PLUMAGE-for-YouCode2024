import React from "react";
import styled from "styled-components";
import Image from "../../images/Image";
import { ButtonGroup } from "../../buttons/ButtonGroup";
import { TextArea } from "../../text/TextArea";
import { Headline } from "../../text/Headline";
import {
  baseFlexBox,
  baseMarginStyles,
  desktopFlexBox,
  desktopMarginStyles,
  tabletFlexBox,
  tabletMarginStyles,
  baseSizeStyles,
  tabletSizeStyles,
  desktopSizeStyles,
} from "../../styles/styles";

import { generateStyleValue } from "../../styles/helpers";
// Breakpoint - 375px
const maxWidthMobileMap = {
  hero: 350,
  secondary: 345,
};
// Breakpoint - 576px
const maxWidthTabletSmallMap = {
  hero: 650,
  secondary: 456,
};
// Breakpoint - 768px
const maxWidthTabletMap = {
  hero: 650,
  secondary: 342,
};
// Breakpoint - 992px
const maxWidthDesktopSmallMap = {
  hero: 650,
  secondary: 456,
};
// Breakpoint - 1200px
const maxWidthDesktopMap = {
  hero: 650,
  secondary: 500,
};
// Breakpoint - 1920px
const maxWidthDesktopLargeMap = {
  hero: 650,
  secondary: 650,
};

const StyledDiv = styled.div`
  z-index: 2;
  ${baseFlexBox}
  ${baseMarginStyles}
  ${baseSizeStyles}
  width: ${({ width = "auto" }) => generateStyleValue(width)};
  max-width: ${({ layout = "hero" }) => `${maxWidthMobileMap[layout]}px`};

  @media (min-width: 576px) {
    max-width: ${({ layout = "hero" }) => `${maxWidthTabletSmallMap[layout]}px`};
  }

  @media (min-width: 768px) {
    max-width: ${({ layout = "hero" }) => `${maxWidthTabletMap[layout]}px`};

    ${tabletMarginStyles}
    ${tabletFlexBox}
    ${tabletSizeStyles}
  }

  @media (min-width: 992px) {
    max-width: ${({ layout = "hero" }) => `${maxWidthDesktopSmallMap[layout]}px`};
  }

  @media (min-width: 1200px) {
    max-width: ${({ layout = "hero" }) => `${maxWidthDesktopMap[layout]}px`};
  }

  @media (min-width: 1440px) {
    ${desktopFlexBox}
    ${desktopMarginStyles}
    ${desktopSizeStyles}
  }
  @media (min-width: 1920px) {
    max-width: ${({ layout = "hero" }) => `${maxWidthDesktopLargeMap[layout]}px`};
  }
`;

const elementMap = {
  headline: Headline,
  textarea: TextArea,
  image: Image,
  buttonGroup: ButtonGroup,
};

export const ElementsContainer = ({
  alignItems,
  desktopStyles = {},
  elements,
  flexGap,
  gap,
  height,
  justifyContent,
  layout,
  marginBottom,
  marginLeft,
  marginRight,
  marginTop,
  maxHeight,
  maxWidth,
  tabletStyles = {},
  width,
}) => {
  return (
    <StyledDiv
      alignItems={alignItems}
      data-testid="elementlist"
      desktopStyles={desktopStyles}
      flexGap={flexGap}
      gap={gap}
      layout={layout}
      height={height}
      justifyContent={justifyContent}
      marginBottom={marginBottom}
      marginLeft={marginLeft}
      marginRight={marginRight}
      marginTop={marginTop}
      maxHeight={maxHeight}
      maxWidth={maxWidth}
      tabletStyles={tabletStyles}
      width={width}
    >
      {elements.map(({ type, responsiveStyles = { tablet: {}, desktop: {} }, ...props }, index) => {
        const Element = elementMap[type];
        const { tablet: elementTabletStyles, desktop: elementDesktopStyles } = responsiveStyles;
        return (
          <Element tabletStyles={elementTabletStyles} desktopStyles={elementDesktopStyles} {...props} key={index} />
        );
      })}
    </StyledDiv>
  );
};
