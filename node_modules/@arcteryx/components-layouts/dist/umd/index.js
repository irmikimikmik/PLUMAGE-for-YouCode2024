(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('styled-components'), require('prop-types'), require('@arcteryx/components-typography')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react', 'styled-components', 'prop-types', '@arcteryx/components-typography'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (function () {
    var current = global.ARCTERYX && global.ARCTERYX.componentslayouts;
    var exports = (global.ARCTERYX = global.ARCTERYX || {}, global.ARCTERYX.componentslayouts = {});
    factory(exports, global.React, global.styled, global.PropTypes, global.componentsTypography);
    exports.noConflict = function () { global.ARCTERYX.componentslayouts = current; return exports; };
  })());
})(this, (function (exports, React, styled, PropTypes, componentsTypography) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
  var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
  var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
    return target;
  }
  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }
    return target;
  }

  const AlertStyles = styled__default["default"].div`
  font-family: var(--font-urw-din);
  font-size: 15px;
  line-height: 1.5em;
  min-height: 60px;
  display: flex;
  flex-direction: row;
  position: relative;
  justify-content: flex-start;
  align-items: flex-start;
  padding: 0 1rem;
  > span {
    margin-left: 27.5px;
    padding: 18px 0;
    dispaly: table-cell;
    vertical-align: center;
  }
  p {
    margin: 0 0 1.5rem 0 !important;
    max-width: none !important;

    &:last-of-type {
      margin-bottom: 0 !important;
    }
  }
  &:before {
    display: inline-block;
    width: 20px;
    height: 20px;
    position: absolute;
    top: 30px;
    transform: translateY(-50%);
  }
  ${_ref => {
  let {
    type
  } = _ref;
  if (type === "info") {
    return `
        background: var(--background-blue);
        border: 1px solid var(--focus-blue);
        color: var(--info-blue);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Information_Icon_Blue.svg);
        }
        p, a {
          color: var(--info-blue) !important;
        }
      `;
  }
  if (type === "caution") {
    return `
        background: var(--background-yellow);
        border: 1px solid var(--medium-yellow);
        color: var(--caution-yellow);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Caution_Icon.svg);
        }
        p, a {
          color: var(--caution-yellow) !important;
        }
      `;
  }
  if (type === "warning") {
    return `
        background: var(--background-red);
        border: 1px solid var(--medium-red);
        color: var(--warning-red);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Warning_Icon.svg);
        }
        p, a {
          color: var(--warning-red) !important;
        }
      `;
  }
  /* istanbul ignore else */
  if (type === "success") {
    return `
        background: var(--background-green);
        border: 1px solid var(--medium-green);
        color: var(--success-green);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Success_Icon.svg);
        }
        p, a {
          color: var(--success-green) !important;
        }
      `;
  }
  /* istanbul ignore else */
  if (type === "advisory") {
    return `
        background: var(--colour-grey-background);
        border: 1px solid  var(--warning-red);
        color: var(--warning-red);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Information_Icon_Red.svg);
        }
        p, a {
          color: var(--warning-red) !important;
        }
      `;
  }
}}
`;
  const Alert = _ref2 => {
    let {
      type,
      dangerouslySetInnerHTML,
      children,
      className
    } = _ref2;
    if (type) {
      return /*#__PURE__*/React__default["default"].createElement(AlertStyles, {
        className: className,
        type: type
      }, dangerouslySetInnerHTML ? /*#__PURE__*/React__default["default"].createElement("span", {
        dangerouslySetInnerHTML: {
          __html: children
        }
      }) : /*#__PURE__*/React__default["default"].createElement("span", null, children));
    }
    return null;
  };
  Alert.defaultProps = {
    type: "info"
  };
  Alert.prototype = {
    type: PropTypes__default["default"].string.isRequired
  };
  const TOAST_TYPE = {
    SUCCESS: "success",
    WARNING: "warning",
    CAUTION: "caution"
  };
  const ToastAnimate = styled.keyframes`
  0% {
    opacity: 0.5;
    transform: translateY(13.3rem);
  }
  25% {
    opacity: 0.8;
    transform: translateY(-20rem);
  }
  50% {
    opacity: 1;
    transform: translateY(-20rem);
  }
  75% {
    opacity: 1;
    transform: translateY(-20rem);
  }
`;
  styled__default["default"].div`
  display: flex;
  justify-content: center;
  position: fixed;
  width: 100%;
  height: 100%;
  left:0;
`;
  styled__default["default"].div`
  font-family: var(--font-urw-din);
  font-size: 1rem;
  line-height: 1.5em;
  min-height: 4rem;
  display: flex;
  flex-direction: row;
  position: fixed;
  justify-content: flex-start;
  align-items: flex-start;
  padding: 0 1rem;
  bottom: -13.3rem;
  span {
    margin-left: 1.83rem;
    padding: 1.125rem 0;
    dispaly: table-cell;
    vertical-align: center;
    max-width: 80ch;
  }
  p {
    margin: 0 0 1.5rem 0 !important;
    max-width: 80ch !important;

    &:last-of-type {
      margin-bottom: 0 !important;
    }
  }
  &:before {
    display: inline-block;
    width: 1.3rem;
    height: 1.3rem;
    position: absolute;
    top: 2rem;
    transform: translateY(-50%);
  }
  animation: ${ToastAnimate} 5s;
  ${_ref => {
  let {
    type
  } = _ref;
  if (type === TOAST_TYPE.CAUTION) {
    return `
        background: var(--background-yellow);
        border: 1px solid var(--medium-yellow);
        color: var(--caution-yellow);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Caution_Icon.svg);
        }
        p, a {
          color: var(--caution-yellow) !important;
        }
      `;
  }
  if (type === TOAST_TYPE.WARNING) {
    return `
        background: var(--background-red);
        border: 1px solid var(--medium-red);
        color: var(--warning-red);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Warning_Icon.svg);
        }
        p, a {
          color: var(--warning-red) !important;
        }
      `;
  }
  if (type === TOAST_TYPE.SUCCESS) {
    return `
        background: var(--background-green);
        border: 1px solid var(--medium-green);
        color: var(--success-green);
        &:before {
          content: url(//images.arcteryx.com/foundation-ui/svgs/Success_Icon.svg);
        }
        p, a {
          color: var(--success-green) !important;
        }
      `;
  }
}}
`;
  ({
    type: PropTypes__default["default"].string.isRequired
  });

  const COLUMN_WIDTH_DEFAULT = "40%";
  const getPadding = props => {
    if (props.isHelpPageSizing) {
      return "0 0 0 70px";
    } else if (props.noTopPadding) {
      return "0 0 1rem 2rem";
    } else {
      return "1em 0 1rem 2rem";
    }
  };
  const AlertWrapper = styled__default["default"].div`
  ${componentsTypography.Breakpoint("xs")`
  margin: 0 0 3rem 0;
`}
  ${componentsTypography.Breakpoint("md")`
margin: 0 3rem 3rem 0;
`}
`;
  const ContentWrapper = styled__default["default"].div`
  width: 100%;
  margin: 0 auto 2rem;
  padding: ${props => props.hideTopBorder ? "0" : "1em 0"};
  border-top: ${props => props.hideTopBorder ? "none" : "1px solid var(--colour-grey-pinline)"};
`;
  const InnerWrapper = styled__default["default"].div`
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: ${props => props.isHelpPageSizing ? "88%" : "100%"};
  max-width: 1430px;

  ${componentsTypography.Breakpoint("md")`
flex-wrap: nowrap;
`}

  a {
    color: var(--colour-black);
    text-decoration: underline;
  }
`;
  const RightContent$1 = styled__default["default"].div`
  width: 100%;
  padding: ${props => props.noTopPadding ? "0" : "1em 0 0 0"};
  margin: 1em 0;

  ${componentsTypography.Breakpoint("md")`
    width: ${props => props.rightWidth ? `${props.rightWidth}%` : COLUMN_WIDTH_DEFAULT};
    padding: ${props => getPadding(props)};
    margin: ${props => props.isHelpPageSizing ? "0" : "0 0 0 2rem"};
    border-left: 1px solid var(--colour-grey-pinline);
    position: relative;
  `}
`;
  const LeftContent = styled__default["default"].div`
  padding: ${props => props.noTopPadding ? "0" : "1em 0 0 0"};
  width: 100%;
  position: relative;
  flex: 1 1;

  ${componentsTypography.Breakpoint("md")`
    width: ${props => props.leftWidth ? `${props.leftWidth}%` : "60%"};
    padding: ${props => props.noTopPadding ? "0" : "1em 0"};
  `}
`;
  const RightInnerContent = styled__default["default"].div`
  position: relative;

  &.help__icon-size-tooltip {
    ${componentsTypography.Breakpoint("xs")`
      padding: ${_ref => {
  let {
    isHelpPageSizing
  } = _ref;
  return isHelpPageSizing ? "0 1rem 0 3rem" : "3rem";
}};
    `}

    ${componentsTypography.Breakpoint("md")`
      padding: ${_ref2 => {
  let {
    isHelpPageSizing
  } = _ref2;
  return isHelpPageSizing ? "0" : "0 3rem";
}};
    `}
  }

  &.help__icon-size-tooltip:after {
    content: url(//images.arcteryx.com/foundation-ui/svgs/Question_Icon.svg);
    position: absolute;
    left: 0;
    top: 0;
    width: 30px;
    height: 30px;
    display: block;

    ${componentsTypography.Breakpoint("xs")`
      margin-left: 0;
    `}

    ${componentsTypography.Breakpoint("md")`
      margin-left: ${_ref3 => {
  let {
    isHelpPageSizing
  } = _ref3;
  return isHelpPageSizing ? "-3rem" : "0";
}};
    `}
  }
`;

  const AlertContent = _ref => {
    let {
      alertType,
      content
    } = _ref;
    return /*#__PURE__*/React__default["default"].createElement(AlertWrapper, null, /*#__PURE__*/React__default["default"].createElement(Alert, {
      type: alertType
    }, /*#__PURE__*/React__default["default"].createElement("span", {
      dangerouslySetInnerHTML: {
        __html: content
      }
    })));
  };

  const RightContent = _ref => {
    let {
      content,
      className,
      id
    } = _ref;
    return /*#__PURE__*/React__default["default"].createElement(RightInnerContent, {
      className: className,
      id: id
    }, /*#__PURE__*/React__default["default"].createElement(componentsTypography.P, null, content));
  };

  const _excluded = ["type"];

  /**
   * Render the content based on whether it is HTML or plain text.
   *
   * @param {array} items - The array of content items to render
   * @param {boolean} isHtml - Whether the content is in HTML format or plain text
   * @param {boolean} isHelpPageSizing - Whether to use help page sizing or not
   * @param {boolean} hideTopBorder - Optional parameter to hide the top border. Defaults to false.
   * @param {string} width - Optional parameter to set the width of the content. Defaults to 40.
   *
   * @returns {array} - An array of React components representing the rendered content
   */
  const Content = _ref => {
    let {
      items,
      isHtml,
      isHelpPageSizing,
      hideTopBorder = false,
      width = "40"
    } = _ref;
    if (isHtml) {
      return items.map((_ref2, index) => {
        let {
            type
          } = _ref2,
          item = _objectWithoutProperties(_ref2, _excluded);
        return /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, {
          key: index
        }, type === "alert" ? /*#__PURE__*/React__default["default"].createElement(AlertContent, {
          alertType: item.alertType,
          content: item.content
        }) : /*#__PURE__*/React__default["default"].createElement(RightInnerContent, {
          className: item.className,
          dangerouslySetInnerHTML: {
            __html: item.content
          },
          isHelpPageSizing: isHelpPageSizing,
          key: index
        }));
      });
    } else {
      return items === null || items === void 0 ? void 0 : items.map(_ref3 => {
        let {
          content,
          className,
          id
        } = _ref3;
        return /*#__PURE__*/React__default["default"].createElement(RightContent, {
          content: content,
          className: className,
          id: id
        });
      });
    }
  };

  const HelpBottomLayout = _ref => {
    let {
      hideTopBorder,
      isHtml,
      left,
      right,
      leftWidth,
      rightWidth,
      isHelpPageSizing
    } = _ref;
    return /*#__PURE__*/React__default["default"].createElement(ContentWrapper, {
      hideTopBorder: hideTopBorder
    }, /*#__PURE__*/React__default["default"].createElement(InnerWrapper, null, left && /*#__PURE__*/React__default["default"].createElement(LeftContent, {
      className: "help-bottom-layout--left",
      noTopPadding: hideTopBorder,
      leftWidth: leftWidth
    }, /*#__PURE__*/React__default["default"].createElement(Content, {
      items: left,
      isHtml: isHtml,
      isHelpPageSizing: isHelpPageSizing,
      hideTopBorder: hideTopBorder,
      width: leftWidth
    })), right && /*#__PURE__*/React__default["default"].createElement(RightContent$1, {
      className: "help-bottom-layout--right",
      noTopPadding: hideTopBorder,
      rightWidth: rightWidth,
      isHelpPageSizing: isHelpPageSizing
    }, /*#__PURE__*/React__default["default"].createElement(Content, {
      items: right,
      isHtml: isHtml,
      isHelpPageSizing: isHelpPageSizing,
      hideTopBorder: hideTopBorder,
      width: rightWidth
    }))));
  };

  const ContentLayout = styled__default["default"].div`
  width: 92%;
  margin: 0 auto;
  ${componentsTypography.Breakpoint("md")`
    width: 89.5%;
  `};

   ${componentsTypography.Breakpoint("lg")`
    width: 92%;
  `};

${componentsTypography.Breakpoint("xl")`
    width: 94%;
    max-width:95rem;
  `};
`;

  exports.ContentLayout = ContentLayout;
  exports.HelpBottomLayout = HelpBottomLayout;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=index.js.map
