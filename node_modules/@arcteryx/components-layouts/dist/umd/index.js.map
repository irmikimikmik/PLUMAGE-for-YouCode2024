{"version":3,"file":"index.js","sources":["../../../components-alerts-overlays/dist/es/index.js","../../src/components/Style.js","../../src/components/AlertContent.js","../../src/components/RightContent.js","../../src/components/Content.js","../../src/components/HelpBottomLayout.js","../../src/components/ContentLayout.js"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst AlertStyles = styled.div`\n  font-family: var(--font-urw-din);\n  font-size: 15px;\n  line-height: 1.5em;\n  min-height: 60px;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0 1rem;\n  > span {\n    margin-left: 27.5px;\n    padding: 18px 0;\n    dispaly: table-cell;\n    vertical-align: center;\n  }\n  p {\n    margin: 0 0 1.5rem 0 !important;\n    max-width: none !important;\n\n    &:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n  &:before {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    position: absolute;\n    top: 30px;\n    transform: translateY(-50%);\n  }\n  ${_ref => {\n  let {\n    type\n  } = _ref;\n  if (type === \"info\") {\n    return `\n        background: var(--background-blue);\n        border: 1px solid var(--focus-blue);\n        color: var(--info-blue);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Information_Icon_Blue.svg);\n        }\n        p, a {\n          color: var(--info-blue) !important;\n        }\n      `;\n  }\n  if (type === \"caution\") {\n    return `\n        background: var(--background-yellow);\n        border: 1px solid var(--medium-yellow);\n        color: var(--caution-yellow);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Caution_Icon.svg);\n        }\n        p, a {\n          color: var(--caution-yellow) !important;\n        }\n      `;\n  }\n  if (type === \"warning\") {\n    return `\n        background: var(--background-red);\n        border: 1px solid var(--medium-red);\n        color: var(--warning-red);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Warning_Icon.svg);\n        }\n        p, a {\n          color: var(--warning-red) !important;\n        }\n      `;\n  }\n  /* istanbul ignore else */\n  if (type === \"success\") {\n    return `\n        background: var(--background-green);\n        border: 1px solid var(--medium-green);\n        color: var(--success-green);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Success_Icon.svg);\n        }\n        p, a {\n          color: var(--success-green) !important;\n        }\n      `;\n  }\n  /* istanbul ignore else */\n  if (type === \"advisory\") {\n    return `\n        background: var(--colour-grey-background);\n        border: 1px solid  var(--warning-red);\n        color: var(--warning-red);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Information_Icon_Red.svg);\n        }\n        p, a {\n          color: var(--warning-red) !important;\n        }\n      `;\n  }\n}}\n`;\nconst Alert = _ref2 => {\n  let {\n    type,\n    dangerouslySetInnerHTML,\n    children,\n    className\n  } = _ref2;\n  if (type) {\n    return /*#__PURE__*/React.createElement(AlertStyles, {\n      className: className,\n      type: type\n    }, dangerouslySetInnerHTML ? /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: children\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", null, children));\n  }\n  return null;\n};\nAlert.defaultProps = {\n  type: \"info\"\n};\nAlert.prototype = {\n  type: PropTypes.string.isRequired\n};\n\nconst TOAST_TYPE = {\n  SUCCESS: \"success\",\n  WARNING: \"warning\",\n  CAUTION: \"caution\"\n};\nconst ToastAnimate = keyframes`\n  0% {\n    opacity: 0.5;\n    transform: translateY(13.3rem);\n  }\n  25% {\n    opacity: 0.8;\n    transform: translateY(-20rem);\n  }\n  50% {\n    opacity: 1;\n    transform: translateY(-20rem);\n  }\n  75% {\n    opacity: 1;\n    transform: translateY(-20rem);\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left:0;\n`;\nconst ToastStyles = styled.div`\n  font-family: var(--font-urw-din);\n  font-size: 1rem;\n  line-height: 1.5em;\n  min-height: 4rem;\n  display: flex;\n  flex-direction: row;\n  position: fixed;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0 1rem;\n  bottom: -13.3rem;\n  span {\n    margin-left: 1.83rem;\n    padding: 1.125rem 0;\n    dispaly: table-cell;\n    vertical-align: center;\n    max-width: 80ch;\n  }\n  p {\n    margin: 0 0 1.5rem 0 !important;\n    max-width: 80ch !important;\n\n    &:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n  &:before {\n    display: inline-block;\n    width: 1.3rem;\n    height: 1.3rem;\n    position: absolute;\n    top: 2rem;\n    transform: translateY(-50%);\n  }\n  animation: ${ToastAnimate} 5s;\n  ${_ref => {\n  let {\n    type\n  } = _ref;\n  if (type === TOAST_TYPE.CAUTION) {\n    return `\n        background: var(--background-yellow);\n        border: 1px solid var(--medium-yellow);\n        color: var(--caution-yellow);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Caution_Icon.svg);\n        }\n        p, a {\n          color: var(--caution-yellow) !important;\n        }\n      `;\n  }\n  if (type === TOAST_TYPE.WARNING) {\n    return `\n        background: var(--background-red);\n        border: 1px solid var(--medium-red);\n        color: var(--warning-red);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Warning_Icon.svg);\n        }\n        p, a {\n          color: var(--warning-red) !important;\n        }\n      `;\n  }\n  if (type === TOAST_TYPE.SUCCESS) {\n    return `\n        background: var(--background-green);\n        border: 1px solid var(--medium-green);\n        color: var(--success-green);\n        &:before {\n          content: url(//images.arcteryx.com/foundation-ui/svgs/Success_Icon.svg);\n        }\n        p, a {\n          color: var(--success-green) !important;\n        }\n      `;\n  }\n}}\n`;\nconst Toast = _ref2 => {\n  let {\n    type,\n    dangerouslySetInnerHTML,\n    children,\n    className\n  } = _ref2;\n  if (type) {\n    return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(ToastStyles, {\n      className: className,\n      type: type\n    }, dangerouslySetInnerHTML ? /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: children\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", null, children)));\n  }\n  return null;\n};\nToast.defaultProps = {\n  type: TOAST_TYPE.CAUTION\n};\nToast.prototype = {\n  type: PropTypes.string.isRequired\n};\n\nexport { Alert, Toast };\n//# sourceMappingURL=index.js.map\n","import styled from \"styled-components\";\nimport { Breakpoint } from \"@arcteryx/components-typography\";\n\nconst COLUMN_WIDTH_DEFAULT = \"40%\";\n\nconst getPadding = props => {\n  if (props.isHelpPageSizing) {\n    return \"0 0 0 70px\";\n  } else if (props.noTopPadding) {\n    return \"0 0 1rem 2rem\";\n  } else {\n    return \"1em 0 1rem 2rem\";\n  }\n};\n\nexport const AlertWrapper = styled.div`\n  ${Breakpoint(\"xs\")`\n  margin: 0 0 3rem 0;\n`}\n  ${Breakpoint(\"md\")`\nmargin: 0 3rem 3rem 0;\n`}\n`;\n\nexport const ContentWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto 2rem;\n  padding: ${props => (props.hideTopBorder ? \"0\" : \"1em 0\")};\n  border-top: ${props => (props.hideTopBorder ? \"none\" : \"1px solid var(--colour-grey-pinline)\")};\n`;\nexport const InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: ${props => (props.isHelpPageSizing ? \"88%\" : \"100%\")};\n  max-width: 1430px;\n\n  ${Breakpoint(\"md\")`\nflex-wrap: nowrap;\n`}\n\n  a {\n    color: var(--colour-black);\n    text-decoration: underline;\n  }\n`;\n\nexport const RightContent = styled.div`\n  width: 100%;\n  padding: ${props => (props.noTopPadding ? \"0\" : \"1em 0 0 0\")};\n  margin: 1em 0;\n\n  ${Breakpoint(\"md\")`\n    width: ${props => (props.rightWidth ? `${props.rightWidth}%` : COLUMN_WIDTH_DEFAULT)};\n    padding: ${props => getPadding(props)};\n    margin: ${props => (props.isHelpPageSizing ? \"0\" : \"0 0 0 2rem\")};\n    border-left: 1px solid var(--colour-grey-pinline);\n    position: relative;\n  `}\n`;\n\nexport const LeftContent = styled.div`\n  padding: ${props => (props.noTopPadding ? \"0\" : \"1em 0 0 0\")};\n  width: 100%;\n  position: relative;\n  flex: 1 1;\n\n  ${Breakpoint(\"md\")`\n    width: ${props => (props.leftWidth ? `${props.leftWidth}%` : \"60%\")};\n    padding: ${props => (props.noTopPadding ? \"0\" : \"1em 0\")};\n  `}\n`;\nexport const RightInnerContent = styled.div`\n  position: relative;\n\n  &.help__icon-size-tooltip {\n    ${Breakpoint(\"xs\")`\n      padding: ${({ isHelpPageSizing }) => (isHelpPageSizing ? \"0 1rem 0 3rem\" : \"3rem\")};\n    `}\n\n    ${Breakpoint(\"md\")`\n      padding: ${({ isHelpPageSizing }) => (isHelpPageSizing ? \"0\" : \"0 3rem\")};\n    `}\n  }\n\n  &.help__icon-size-tooltip:after {\n    content: url(//images.arcteryx.com/foundation-ui/svgs/Question_Icon.svg);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 30px;\n    height: 30px;\n    display: block;\n\n    ${Breakpoint(\"xs\")`\n      margin-left: 0;\n    `}\n\n    ${Breakpoint(\"md\")`\n      margin-left: ${({ isHelpPageSizing }) => (isHelpPageSizing ? \"-3rem\" : \"0\")};\n    `}\n  }\n`;\n","import React from \"react\";\nimport { Alert } from \"@arcteryx/components-alerts-overlays\";\nimport { AlertWrapper } from \"./Style\";\n\nconst AlertContent = ({ alertType, content }) => (\n  <AlertWrapper>\n    <Alert type={alertType}>\n      <span dangerouslySetInnerHTML={{ __html: content }} />\n    </Alert>\n  </AlertWrapper>\n);\n\nexport default AlertContent;\n","import React from \"react\";\nimport { P } from \"@arcteryx/components-typography\";\nimport { RightInnerContent } from \"./Style\";\n\nconst RightContent = ({ content, className, id }) => (\n  <RightInnerContent className={className} id={id}>\n    <P>{content}</P>\n  </RightInnerContent>\n);\nexport default RightContent;\n","import React from \"react\";\nimport AlertContent from \"./AlertContent\";\nimport RightContent from \"./RightContent\";\nimport { RightInnerContent } from \"./Style\";\n\n/**\n * Render the content based on whether it is HTML or plain text.\n *\n * @param {array} items - The array of content items to render\n * @param {boolean} isHtml - Whether the content is in HTML format or plain text\n * @param {boolean} isHelpPageSizing - Whether to use help page sizing or not\n * @param {boolean} hideTopBorder - Optional parameter to hide the top border. Defaults to false.\n * @param {string} width - Optional parameter to set the width of the content. Defaults to 40.\n *\n * @returns {array} - An array of React components representing the rendered content\n */\nconst Content = ({ items, isHtml, isHelpPageSizing, hideTopBorder = false, width = \"40\" }) => {\n  if (isHtml) {\n    return items.map(({ type, ...item }, index) => (\n      <React.Fragment key={index}>\n        {type === \"alert\" ? (\n          <AlertContent alertType={item.alertType} content={item.content} />\n        ) : (\n          <RightInnerContent\n            className={item.className}\n            dangerouslySetInnerHTML={{ __html: item.content }}\n            isHelpPageSizing={isHelpPageSizing}\n            key={index}\n          />\n        )}\n      </React.Fragment>\n    ));\n  } else {\n    return items?.map(({ content, className, id }) => <RightContent content={content} className={className} id={id} />);\n  }\n};\n\nexport default Content;\n","import React from \"react\";\nimport RenderContent from \"./Content\";\nimport { ContentWrapper, InnerWrapper, LeftContent, RightContent } from \"./Style\";\n\nconst HelpBottomLayout = ({ hideTopBorder, isHtml, left, right, leftWidth, rightWidth, isHelpPageSizing }) => (\n  <ContentWrapper hideTopBorder={hideTopBorder}>\n    <InnerWrapper>\n      {left && (\n        <LeftContent className=\"help-bottom-layout--left\" noTopPadding={hideTopBorder} leftWidth={leftWidth}>\n          <RenderContent\n            items={left}\n            isHtml={isHtml}\n            isHelpPageSizing={isHelpPageSizing}\n            hideTopBorder={hideTopBorder}\n            width={leftWidth}\n          />\n        </LeftContent>\n      )}\n      {right && (\n        <RightContent\n          className=\"help-bottom-layout--right\"\n          noTopPadding={hideTopBorder}\n          rightWidth={rightWidth}\n          isHelpPageSizing={isHelpPageSizing}\n        >\n          <RenderContent\n            items={right}\n            isHtml={isHtml}\n            isHelpPageSizing={isHelpPageSizing}\n            hideTopBorder={hideTopBorder}\n            width={rightWidth}\n          />\n        </RightContent>\n      )}\n    </InnerWrapper>\n  </ContentWrapper>\n);\n\nexport default HelpBottomLayout;\n","import styled from 'styled-components';\nimport { Breakpoint } from '@arcteryx/components-typography';\n\nconst ContentLayout = styled.div`\n  width: 92%;\n  margin: 0 auto;\n  ${Breakpoint(\"md\")`\n    width: 89.5%;\n  `};\n\n   ${Breakpoint(\"lg\")`\n    width: 92%;\n  `};\n\n${Breakpoint(\"xl\")`\n    width: 94%;\n    max-width:95rem;\n  `};\n`;\n\nexport default ContentLayout;"],"names":["AlertStyles","styled","div","_ref","type","Alert","_ref2","dangerouslySetInnerHTML","children","className","React","__html","defaultProps","prototype","PropTypes","string","isRequired","COLUMN_WIDTH_DEFAULT","getPadding","props","isHelpPageSizing","noTopPadding","AlertWrapper","Breakpoint","ContentWrapper","hideTopBorder","InnerWrapper","RightContent","rightWidth","LeftContent","leftWidth","RightInnerContent","AlertContent","alertType","content","id","P","Content","items","isHtml","width","map","index","item","HelpBottomLayout","left","right","RenderContent","ContentLayout"],"mappings":"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"}