export default Button;
declare function Button({ market, context, type, size, IconButtonLeft, IconButtonRight, disabled, isWaiting, onClick, className, id, style, children, href, width, ...otherProps }: {
    [x: string]: any;
    market: any;
    context: any;
    type: any;
    size: any;
    IconButtonLeft: any;
    IconButtonRight: any;
    disabled: any;
    isWaiting: any;
    onClick: any;
    className: any;
    id: any;
    style: any;
    children: any;
    href?: string | undefined;
    width: any;
}): React.JSX.Element;
declare namespace Button {
    let displayName: string;
    namespace defaultProps {
        let context: string;
        let market: string;
        let type: string;
        let disabled: boolean;
        let isWaiting: boolean;
        let onClick: null;
        let style: {};
    }
    namespace propTypes {
        let context_1: PropTypes.Requireable<string>;
        export { context_1 as context };
        let type_1: PropTypes.Requireable<string>;
        export { type_1 as type };
        let market_1: PropTypes.Requireable<string>;
        export { market_1 as market };
        export let id: PropTypes.Requireable<string>;
        export let size: PropTypes.Requireable<string>;
        let disabled_1: PropTypes.Requireable<boolean>;
        export { disabled_1 as disabled };
        let isWaiting_1: PropTypes.Requireable<boolean>;
        export { isWaiting_1 as isWaiting };
        let onClick_1: PropTypes.Requireable<(...args: any[]) => any>;
        export { onClick_1 as onClick };
        export let className: PropTypes.Requireable<string>;
        let style_1: PropTypes.Requireable<object>;
        export { style_1 as style };
        export let children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        export let IconButtonLeft: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        export let IconButtonRight: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    }
}
import React from "react";
import PropTypes from "prop-types";
//# sourceMappingURL=button.d.ts.map