(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('styled-components'), require('prop-types'), require('classnames')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react', 'styled-components', 'prop-types', 'classnames'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (function () {
    var current = global.ARCTERYX && global.ARCTERYX.componentsbutton;
    var exports = (global.ARCTERYX = global.ARCTERYX || {}, global.ARCTERYX.componentsbutton = {});
    factory(exports, global.React, global.styled, global.PropTypes, global.cx);
    exports.noConflict = function () { global.ARCTERYX.componentsbutton = current; return exports; };
  })());
})(this, (function (exports, React, styled, PropTypes, cx) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
  var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
  var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
  var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

  function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
    return target;
  }
  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }
    return target;
  }

  const LoadingIcon = styled__default["default"].span`
  position: absolute;
  left: 50%;
  top: 50%;
  @keyframes sendingToLambda {
    to {
      transform: rotate(360deg);
    }
  }
  &:after {
    content: "";
    box-sizing: border-box;
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid var(--pinline-grey);
    border-top-color: var(--dark-grey);
    animation: sendingToLambda 0.6s linear infinite;
    margin-left: -10px;
    margin-top: -10px;
  }
`;

  const SUBTLE = "Subtle";
  const INVERTED = "Inverted";
  const SECONDARY = "Secondary-cta";
  const SECURE = "Secure-Checkout";
  const ADDTOCART = "Add-To-Cart";
  const EMAIL = "Email";
  const FINDINSTORE = "Find-In-Store";
  const STANDARD = "Standard";

  const widthValue = _ref => {
    let {
      width,
      context
    } = _ref;
    if (width) {
      return `${width}`;
    }
    switch (context) {
      case ADDTOCART:
      case EMAIL:
      case SECURE:
        return "100%;";
      default:
        return "auto";
    }
  };

  const _excluded = ["market", "context", "type", "size", "IconButtonLeft", "IconButtonRight", "disabled", "isWaiting", "onClick", "className", "id", "style", "children", "href", "width"];
  const ButtonWrapper = styled__default["default"].div`
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: ${props => widthValue(props)};
  max-width: ${props => props.context === ADDTOCART && "400px" || props.context === SECURE && "100%"};
  height: 3rem;
  padding: 0 1rem;
  margin: 0;
  color: ${props => [INVERTED, SUBTLE, FINDINSTORE, SECONDARY].includes(props.context) ? "var(--colour-black)" : "var(--colour-white)"};
  text-decoration: none;
  border-radius: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: ${props => [SUBTLE, FINDINSTORE].includes(props.context) ? "1px solid var(--colour-black)" : "1px solid transparent"};
  font-size: 1rem;
  line-height: 1.1rem;
  font-family: var(--font-urw-din);
  font-weight: 400;
  text-transform: ${props => props.context === STANDARD || !props.href ? "uppercase" : "none"};
  word-break: keep-all;
  cursor: pointer;
  background-color: ${props => [INVERTED, SUBTLE, FINDINSTORE, SECONDARY].includes(props.context) ? "var(--colour-white)" : "var(--colour-black)"};

  &:hover,
  &:active {
    border: ${props => props.context === SECONDARY ? "1px solid var(--colour-black)" : "1px solid transparent"};
    background-image: linear-gradient(var(--colour-black), var(--background-gradient));
    transition: background-color 400ms ease-in;
    text-decoration: none;
    color: ${props => props.context === SECONDARY ? "var(--colour-black)" : "var(--colour-white)"};
  }

  &.waiting,
  &.is-waiting {
    color: ${props => [SUBTLE, FINDINSTORE, SECONDARY].includes(props.context) ? "var(--colour-white)" : "var(--colour-black)"};
    pointer-events: none;

    &::before,
    &::after {
      display: none;
    }
  }


  ${props => props.disabled && styled.css`
      &:disabled,
      &.disabled {
        color: ${() => props.context === SECONDARY ? "var(--colour-grey-inactive)" : "var(--colour-white)"};
        cursor: not-allowed;
        background-color: ${() => props.context === SECONDARY ? "var(--colour-grey-background)" : "var(--colour-grey-inactive)"};
        border: none;
        &:hover {
          /* border: 1px solid transparent; */
          background-image: none;
        }
      }
    `};

  ${props => props.context === SECURE && styled.css`
      &::after {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Secure_Icon_White.svg);
        width: 10px;
        height: 10px;
        margin-left: 10px;
        display: inline-block;
      }
    `};

  /* Inverted, Secondary-cta buttons */
  &.button--Secondary-cta {
    border: ${props => Boolean(props.href) ? "none" : "1px solid transparent"};
    text-decoration-line: ${props => Boolean(props.href) ? "underline" : "none"};
    &:hover,
    &:active,
    &:focus {
      background: var(--colour-white);
      color: var(--colour-black);
      border: ${props => Boolean(props.href) ? "none" : "1px solid var(--colour-black)"};
      font-weight: ${props => Boolean(props.href) ? "600" : "400"};
      cursor: pointer;
      text-decoration-line: ${props => Boolean(props.href) ? "underline" : "none"};
      
    }
    &.disabled {
      border: none;
      color: var(--colour-grey-inactive);
      cursor: not-allowed;
      background-color: ${props => Boolean(props.href) ? "transparent" : "var(--colour-grey-background)"};
      font-weight: 400;
      text-decoration-line: ${props => Boolean(props.href) ? "underline" : "none"};
    }
  }
  ${props => props.context === FINDINSTORE && styled.css`
      display: flex;
      align-items: center;
      justify-content: center;
      width: 400px;
      max-width: 100%;
      line-height: 16px;
      text-transform: none;
      &::before {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Pin.svg);
        width: 16px;
        height: 16px;
        margin-right: 5px;
        display: inline-block;
      }
      &:hover {
        color: var(--colour-black);
        border: 1px solid var(--colour-black);
        background-image: none;
        background-color: var(--colour-white);
      }
    `};

  ${props => props.context === EMAIL && styled.css`
      display: inline-flex;
      justify-content: center;
      align-items: center;
      &::before {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Email_White.svg);
        width: 22px;
        margin-right: 5px;
        display: inline-block;
      }
    `};

  ${props => props.context === ADDTOCART && styled.css`
      display: inline-flex;
      justify-content: center;
      align-items: center;
      &::before {
        content: url(//images.arcteryx.com/foundation-ui/svgs/Cart_Icon_White.svg);
        width: 22px;
        margin-right: 5px;
        display: inline-block;
      }
    `};
`;
  const StyledIconWrapper = styled__default["default"].span`
  margin-left: 5px;
  margin-right: 5px;
`;
  const IconButton = _ref => {
    let {
      icon
    } = _ref;
    return /*#__PURE__*/React__default["default"].createElement(StyledIconWrapper, null, icon);
  };
  const Button = _ref2 => {
    let {
        market,
        context,
        type,
        size,
        IconButtonLeft,
        IconButtonRight,
        disabled,
        isWaiting,
        onClick,
        className,
        id,
        style,
        children,
        href = "",
        width
      } = _ref2,
      otherProps = _objectWithoutProperties(_ref2, _excluded);
    const baseClass = "button";
    const rootClass = cx__default["default"](baseClass, className, {
      [`${baseClass}--${market}`]: market,
      [`${baseClass}--${context}`]: context,
      [`${baseClass}--${size}`]: size,
      disabled,
      waiting: isWaiting,
      "is-waiting": isWaiting
    });
    const isAnchorElement = Boolean(href);
    const as = isAnchorElement ? "a" : "button";
    const hasIconButtonLeft = Boolean(IconButtonLeft);
    const hasIconButtonRight = Boolean(IconButtonRight);
    return /*#__PURE__*/React__default["default"].createElement(ButtonWrapper, _extends({
      as: as,
      id: id,
      href: isAnchorElement ? href : undefined,
      className: rootClass,
      type: isAnchorElement ? undefined : type,
      style: style,
      onClick: onClick,
      size: size,
      market: market,
      context: context,
      disabled: disabled,
      width: width
    }, otherProps), isWaiting && /*#__PURE__*/React__default["default"].createElement(LoadingIcon, {
      "data-testid": "loading-icon"
    }), !isWaiting && hasIconButtonLeft && /*#__PURE__*/React__default["default"].createElement(IconButton, {
      icon: IconButtonLeft
    }), /*#__PURE__*/React__default["default"].createElement("span", null, children), !isWaiting && hasIconButtonRight && /*#__PURE__*/React__default["default"].createElement(IconButton, {
      icon: IconButtonRight
    }));
  };
  Button.displayName = "Button";
  Button.defaultProps = {
    context: "Standard",
    market: "Outdoor",
    type: "button",
    disabled: false,
    isWaiting: false,
    onClick: null,
    style: {}
  };
  Button.propTypes = {
    context: PropTypes__default["default"].oneOf(["Standard", "Inverted", "Subtle", "Secondary-cta", "Secure-checkout", "Add-To-Cart", "Find-In-Store", "Email"]),
    type: PropTypes__default["default"].string,
    market: PropTypes__default["default"].oneOf(["Outdoor", "Leaf", "Veilance"]),
    id: PropTypes__default["default"].string,
    size: PropTypes__default["default"].oneOf(["xs", "sm", "md", "lg"]),
    disabled: PropTypes__default["default"].bool,
    isWaiting: PropTypes__default["default"].bool,
    onClick: PropTypes__default["default"].func,
    className: PropTypes__default["default"].string,
    style: PropTypes__default["default"].object,
    children: PropTypes__default["default"].node,
    IconButtonLeft: PropTypes__default["default"].node,
    IconButtonRight: PropTypes__default["default"].node
  };

  exports.Button = Button;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=index.js.map
