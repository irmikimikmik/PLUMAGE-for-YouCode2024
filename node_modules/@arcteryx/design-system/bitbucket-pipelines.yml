image: node:18

clone:
  depth: full # SonarCloud scanner needs the full history to assign issues properly

definitions:
  caches:
    sonar: ~/.sonar/cache # Caching SonarCloud artifacts will speed up your build

  services:
    docker:
      memory: 4096 # Sonar fails without this more than half the time

  steps:
    - step: &storybook-build-for-aws
        name: Build and Deploy Storybook
        caches:
          - node
        script:
          - npm ci --legacy-peer-deps
          - npm run storybook:build
          - apt-get update && apt-get install -y awscli jq
          - aws s3 sync ./storybook-static s3://design-system.arcteryx.com

    - step: &unit-tests
        name: Run Unit Tests
        caches:
          - node
        script:
          - npm ci --legacy-peer-deps
          - npm run test
        artifacts:
          - coverage/**

    - step: &build-test
        name: Test that build works
        caches:
          - node
        script:
          - npm ci --legacy-peer-deps
          - npm run build

    - step: &build-and-publish
        name: Build and Publish
        caches:
          - node
        script:
          - npm ci --legacy-peer-deps
          - npm run build
          - npx semantic-release --debug

    - step: &merge-and-check-coverage
        name: Merge and check coverage
        script:
          - /bin/bash merge-coverage.sh
        artifacts:
          - merged-coverage-report/**
    - step: &typescript
        name: Check for TypeScript Errors
        script:
          - npm ci --legacy-peer-deps
          - npm run typescript
    - step: &lint-and-pretty
        name: Check and Fix Linting Errors and Formatting Errors
        script:
          - npm ci --legacy-peer-deps
          - npm run lint:fix
          - npx prettier --write .

    - step: &sonar-scan
        name: Sonar Scan
        size: 2x
        script:
          - pipe: sonarsource/sonarcloud-scan:2.0.0
            variables:
              SONAR_SCANNER_OPTS: -Xmx2048m

pipelines:
  branches:
    main:
      - parallel:
          # - step: *unit-tests
          - step: *build-and-publish
      - step: *merge-and-check-coverage
      # - step: *sonar-scan
      - step: *storybook-build-for-aws
    beta:
      - step: *build-and-publish

  pull-requests:
    "**":
      - parallel:
          - step: *typescript
          # - step: *unit-tests
          - step: *build-test
      - step: *merge-and-check-coverage
      # - step: *sonar-scan
      - step:
          name: Build Storybook for PRs
          script:
            - npm ci --legacy-peer-deps
            - npm run storybook:build
            - apt-get update && apt-get install -y awscli jq
            - aws s3 sync ./storybook-static s3://design-system.arcteryx.com/${BITBUCKET_PR_ID}
            - export PR_URL=https://api.bitbucket.org/2.0/repositories/arcteryx/design-system/pullrequests/${BITBUCKET_PR_ID}/comments
            - export TOKEN=`curl
              --request POST
              --user "$CONSUMER_KEY:$CONSUMER_SECRET"
              --data grant_type=client_credentials
              --url https://bitbucket.org/site/oauth2/access_token | jq '.access_token'`
            - export COMMENTCOUNT=`curl
              --header "Content-Type:application/json"
              --header "Authorization:Bearer $TOKEN"
              --url $PR_URL | jq '.size'`
            - if [ $COMMENTCOUNT -eq '0' ]; then curl
              --header "Content-Type:application/json"
              --header "Authorization:Bearer $TOKEN"
              --data '{
              "content":{
              "raw":"Review Storybook Changes at http://design-system.arcteryx.com/'$BITBUCKET_PR_ID'/index.html"
              }
              }'
              --url $PR_URL; fi
