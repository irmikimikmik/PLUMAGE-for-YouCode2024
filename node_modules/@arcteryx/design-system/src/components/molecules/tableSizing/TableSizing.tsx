import React from "react";
import styled from "styled-components";
import TableCell from "../../atoms/table-cell/TableCell";
import { H3 } from "@arcteryx/components-typography";

const StyledTable = styled.div`
  margin-bottom: var(--space-green);

  table {
    width: 100%;
    border-collapse: separate;
    font-size: 1rem;
    table-layout: fixed;
    margin: 10px 0;
  }
  tr {
    word-break: break-word;
  }
  /* zebra striping */
  tr:nth-child(even) {
    background-color: var(--colour-grey-background);
  }

  tr:nth-child(odd) {
    background-color: var(--white);
  }

  /* header row */
  tr:first-of-type {
    td {
      font-weight: 600;
    }
  }
  td {
    height: 2rem;
    text-align: center;
    font-weight: 400px;
    padding: 7px 0;
  }
  @media (min-width: 480px) {
    /* styles for screens larger than 480px */
  }
`;

export interface TableSizingProps {
  description: string;
  measuringType: string;
  table: string[][];
}
const formatDescription = (description: string): React.ReactNode => {
  const parts = description.split(",");
  if (parts.length < 2) {
    return <>{description}</>;
  }
  return (
    <>
      <div>{parts[0].trim() + ","}</div>
      <div>{parts[1].trim()}</div>
    </>
  );
};

export const TableSizing = ({
  description,
  table,
}: TableSizingProps): React.ReactElement => {
  const formattedDescription =
    description !== "" ? formatDescription(description) : null;

  return (
    <StyledTable>
      {formattedDescription != null && <H3>{formattedDescription}</H3>}{" "}
      <table>
        <tbody>
          {table.map((row, index: number) => (
            <tr key={index}>
              {row.map((cell, index: number) => {
                return <TableCell key={index} content={cell} />;
              })}
            </tr>
          ))}
        </tbody>
      </table>
    </StyledTable>
  );
};
