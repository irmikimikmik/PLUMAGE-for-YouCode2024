import React from "react";
import styled from "styled-components";
import { Image } from "../../atoms";
import { RichText } from "../richText";
import { type FullWidthCardProps } from "./FullWidthCard.types";
import { Breakpoint } from "@arcteryx/components-typography";

type AspectRatio = Record<
  string,
  {
    xs: string;
    sm: string;
    md: string;
    lg: string;
  }
>;

const aspectRatio: AspectRatio = {
  default: {
    xs: "4 / 3",
    sm: "7 / 5",
    md: "11 / 6",
    lg: "4 / 3",
  },
  tall: {
    xs: "5 / 6",
    sm: "7 / 9",
    md: "3 / 4",
    lg: "3 / 4",
  },
  square: {
    xs: "1 / 1",
    sm: "1 / 1",
    md: "1 / 1",
    lg: "1 / 1",
  },
};

const CardContainer = styled.div`
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  align-items: center;
`;

const StyledImage = styled(Image)<{ $variant: keyof AspectRatio }>`
  object-fit: cover;
  aspect-ratio: ${({ $variant }) => aspectRatio[$variant].xs};

  ${Breakpoint("sm")`
    aspect-ratio: ${({ $variant }: { $variant: keyof AspectRatio }) =>
      aspectRatio[$variant].sm};
  `}

  ${Breakpoint("md")`
    aspect-ratio:${({ $variant }: { $variant: keyof AspectRatio }) =>
      aspectRatio[$variant].md};
  `}

  ${Breakpoint("lg")`
    aspect-ratio: ${({ $variant }: { $variant: keyof AspectRatio }) =>
      aspectRatio[$variant].lg};
  `}
`;

export const FullWidthCard: React.FC<FullWidthCardProps> = ({
  content,
  image,
  textAlign = "left",
  imageVariant = "default",
}) => {
  const hasImage = image?.src !== undefined;
  return (
    <CardContainer>
      {hasImage ? (
        <StyledImage
          alt={image.alt}
          shouldLazyLoad={image.shouldLazyLoad}
          src={image.src}
          $variant={imageVariant}
        />
      ) : null}
      {content != null ? (
        <RichText content={content} textAlign={textAlign} />
      ) : null}
    </CardContainer>
  );
};
