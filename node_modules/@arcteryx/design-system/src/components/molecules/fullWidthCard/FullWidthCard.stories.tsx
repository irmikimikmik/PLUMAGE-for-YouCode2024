import React from "react";
import { type Meta, type StoryObj } from "@storybook/react";
import { FullWidthCard } from "./FullWidthCard";
import {
  fullWidthCardData,
  fullWidthCardWithNoText,
} from "./__mocks__/fullWidthCardMocks";
import { Breakpoint } from "@arcteryx/components-typography";
import styled from "styled-components";
import { type FullWidthCardProps } from "./FullWidthCard.types";

// This is a styled component that is used to display multiple Cards in a grid, we use this to test the responsiveness of the component
const StyledContainer = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;

  ${Breakpoint("lg")`
    grid-template-columns: repeat(3, 1fr);
  `}
`;

const meta: Meta<typeof FullWidthCard> = {
  component: FullWidthCard,
  title: "Design System/Molecules/FullWidthCard",
  argTypes: {
    imageVariant: {
      options: ["default", "tall", "square"],
      control: { type: "radio" },
    },
  },
};
export default meta;

type Story = StoryObj<typeof FullWidthCard>;

interface StoryProps {
  cards: FullWidthCardProps[];
}

export const DefaultFullWidthCard: Story = {
  args: { ...fullWidthCardData },
};

const MultipleFullWidthCardsArgs: StoryProps = {
  cards: [
    {
      ...fullWidthCardData,
    },
    {
      ...fullWidthCardData,
    },
    {
      ...fullWidthCardData,
    },
  ],
};

const MultipleFullWidthCardsWrapper: React.FC<StoryProps> = ({
  cards,
}): JSX.Element => {
  return (
    <StyledContainer>
      {cards.map((card, index) => (
        <FullWidthCard key={index} {...card} />
      ))}
    </StyledContainer>
  );
};

export const MultipleFullWidthCards = (args: StoryProps): JSX.Element => (
  <MultipleFullWidthCardsWrapper {...args} />
);

MultipleFullWidthCards.args = MultipleFullWidthCardsArgs;

// Tall Image Cards

// This is a styled component that is used to display multiple tall Cards in a grid, we use this to test the responsiveness of the component
const StyledTallCardContainer = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;

  ${Breakpoint("sm")`
    grid-template-columns: repeat(2, 1fr);
  `}

  ${Breakpoint("md")`
    grid-template-columns: repeat(3, 1fr);
  `}

  ${Breakpoint("xl")`
    grid-template-columns: repeat(5, 1fr);
  `}
`;

const MultipleTallFullWidthCardsArgs: StoryProps = {
  cards: [
    {
      ...fullWidthCardData,
      imageVariant: "tall",
    },
    {
      ...fullWidthCardData,
      imageVariant: "tall",
    },
    {
      ...fullWidthCardData,
      imageVariant: "tall",
    },
    {
      ...fullWidthCardData,
      imageVariant: "tall",
    },
    {
      ...fullWidthCardData,
      imageVariant: "tall",
    },
  ],
};

const MultipleTallFullWidthCardsWrapper: React.FC<StoryProps> = ({
  cards,
}): JSX.Element => {
  return (
    <StyledTallCardContainer>
      {cards.map((card, index) => (
        <FullWidthCard key={index} {...card} />
      ))}
    </StyledTallCardContainer>
  );
};

export const MultipleTallFullWidthCards = (args: StoryProps): JSX.Element => (
  <MultipleTallFullWidthCardsWrapper {...args} />
);

MultipleTallFullWidthCards.args = MultipleTallFullWidthCardsArgs;

// Full Width Image with No Text Options

export const FullWidthCardWithNoText: Story = {
  args: { ...fullWidthCardWithNoText },
};

const MultipleFullWidthCardsWithNoTextArgs: StoryProps = {
  cards: [
    { ...fullWidthCardWithNoText },
    { ...fullWidthCardWithNoText },
    { ...fullWidthCardWithNoText },
  ],
};

const MultipleFullWidthCardsWithNoTextWrapper: React.FC<StoryProps> = ({
  cards,
}): JSX.Element => {
  return (
    <StyledContainer>
      {cards.map((card, index) => (
        <FullWidthCard key={index} {...card} />
      ))}
    </StyledContainer>
  );
};

export const MultipleFullWidthCardsWithNoText = (
  args: StoryProps,
): JSX.Element => (
  <MultipleFullWidthCardsWithNoTextWrapper
    {...MultipleFullWidthCardsWithNoTextArgs}
  />
);
