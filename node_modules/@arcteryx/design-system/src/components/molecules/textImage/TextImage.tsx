import React from "react";
import { Image } from "../../atoms";
import { RichText } from "../richText";
import styled from "styled-components";
import { ScreenSize } from "@arcteryx/components-typography";
import { type TextImageProps } from "./TextImage.types";

const StyledDiv = styled.div<{ $isImageOnLeft: boolean }>`
  display: flex;
  flex-direction: column;
  @media (min-width: ${ScreenSize.lg}px) {
    flex-direction: ${(props) =>
      props.$isImageOnLeft ? "row" : "row-reverse"};
    justify-content: ${(props) =>
      props.$isImageOnLeft ? "flex-start" : "flex-end"};
  }
  gap: 2rem;
  width: 100%;
`;

const StyledImage = styled(Image)<{
  $imageSize: string;
  $displayImageBelowMd: boolean;
}>`
  aspect-ratio: 2 / 1;
  object-fit: cover;
  order: 2;
  display: ${(props) => (props.$displayImageBelowMd ? "block" : "none")};

  @media (min-width: ${ScreenSize.lg}px) {
    object-fit: ${(props) =>
      props.$imageSize === "small" ? "contain" : "cover"};
    aspect-ratio: ${(props) =>
      props.$imageSize === "small" ? "4 / 2.5" : "4 / 5"};
    display: ${(props) => (props.$imageSize === "small" ? "flex" : "block")};
    align-self: ${(props) =>
      props.$imageSize === "small" ? "flex-start" : null};
    max-width: 50%;
    order: 1;
  }
  @media (min-width: ${ScreenSize.xl}px) {
    object-fit: ${(props) => (props.$imageSize === "small" ? "none" : "cover")};
    aspect-ratio: ${(props) =>
      props.$imageSize === "small" ? "5 / 3" : "4 / 3"};
  }
`;

const StyledTextArea = styled.div`
  display: flex;
  flex-direction: column;
  gap: 2rem;
  order: 1;

  @media (min-width: ${ScreenSize.lg}px) {
    order: 2;
    max-width: 50%;
    flex: 1;
  }
`;

export const TextImage: React.FC<TextImageProps> = ({
  image,
  textItems,
  imageSize = "medium",
  displayImageBelowMd = true,
  isImageOnLeft = false,
}) => (
  <StyledDiv $isImageOnLeft={isImageOnLeft}>
    <StyledImage
      alt={image.alt}
      src={image.src}
      $imageSize={imageSize}
      $displayImageBelowMd={displayImageBelowMd}
    />
    <StyledTextArea>
      {textItems.map((item, index) => (
        <RichText
          key={index}
          content={item.content}
          textAlign={item.textAlign}
          spacing={item.spacing}
        />
      ))}
    </StyledTextArea>
  </StyledDiv>
);
