import { ScreenSize } from "@arcteryx/components-typography";
import React from "react";
import styled from "styled-components";
import { type FullWidthImageProps } from "./FullWidthImage.types";
import { Image } from "../../atoms/image";

export const fullWidthImageDimensions = {
  xs: { width: 375, height: 260 },
  sm: { width: 576, height: 262 },
  md: { width: 768, height: 376 },
  lg: { width: 992, height: 365 },
  xl: { width: 1200, height: 443 },
  xxl: { width: 1440, height: 443 },
};

const StyledFullWidthContainer = styled.div`
  position: relative;
  width: 100%;
  overflow: hidden;
  display: block !important;

  height: ${fullWidthImageDimensions.xs.height}px;

  @media (min-width: ${ScreenSize.sm}px) {
    height: ${fullWidthImageDimensions.sm.height}px;
  }

  @media (min-width: ${ScreenSize.md}px) {
    height: ${fullWidthImageDimensions.md.height}px;
  }

  @media (min-width: ${ScreenSize.xl}px) {
    height: ${fullWidthImageDimensions.xl.height}px;
  }
`;

const StyledImage = styled(Image)`
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
`;

export const FullWidthImage: React.FC<FullWidthImageProps> = ({
  image,
  sourceElementsArray = null,
}) => {
  return (
    <StyledFullWidthContainer>
      <picture data-testid="full-width-image-container">
        {sourceElementsArray != null
          ? sourceElementsArray.map((sourceElement, index) => (
              <source
                key={index}
                media={sourceElement?.media}
                srcSet={sourceElement?.srcSet}
                sizes={sourceElement?.sizes}
                src={image.src}
                width={sourceElement?.width}
                height={sourceElement?.height}
              />
            ))
          : null}
        <StyledImage
          src={image.src}
          srcSet={image.srcSet ?? ""}
          sizes="100vw"
          alt={image.alt}
        />
      </picture>
    </StyledFullWidthContainer>
  );
};
