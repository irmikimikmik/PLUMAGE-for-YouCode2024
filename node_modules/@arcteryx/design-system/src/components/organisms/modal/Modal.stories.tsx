import { type Meta, type StoryObj } from "@storybook/react";
import { Modal as ArcTeryxModal } from "@arcteryx/components-modal";
import { useArgs } from "@storybook/preview-api";

import React from "react";
import { type ModalProps } from "./Modal.types";

const meta: Meta<typeof ArcTeryxModal> = {
  component: ArcTeryxModal,
  title: "Design System/Organisms/Modal",
  // Pass the render as a function to provide a React Component Signature - this allows for the use of hooks
  render: function ModalRender({
    children,
    modalIsShown,
    isClosable,
  }: ModalProps) {
    const [, updateArgs] = useArgs();
    const toggleModal = (): void => {
      updateArgs({ modalIsShown: !modalIsShown });
    };
    return (
      <ArcTeryxModal
        isClosable={isClosable}
        modalIsShown={modalIsShown}
        toggleModal={toggleModal}
      >
        {children}
      </ArcTeryxModal>
    );
  },
};
export default meta;

type Story = StoryObj<typeof ArcTeryxModal>;

const ModalArgs: ModalProps = {
  modalIsShown: true,
  children: "This is the Modal Content",
  isClosable: true,
};
export const Modal: Story = {
  args: { ...ModalArgs },
};
