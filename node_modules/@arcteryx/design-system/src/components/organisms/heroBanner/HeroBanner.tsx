import React from "react";
import styled, { css } from "styled-components";
import { type HeroBannerProps } from "./HeroBanner.types";
import { H1, P, ScreenSize } from "@arcteryx/components-typography";

interface HeroSectionProps {
  image: string;
}

export const HeroSection = styled.section<HeroSectionProps>`
  width: 100%;
  // Height is based on Viewport Minus Header
  // Content should fill the entire viewport
  height: 90vh;
  min-height: 450px;
  background-image: url(${({ image }) => image});
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  @media (min-width: ${ScreenSize.sm}px) {
    /* styles for screens above 550px */
    min-height: 600px;
    height: 87vh;
  }
  // Ensures that the child is always going to take up the space in the container
  > div {
    height: 100%;
    width: 100%;
  }
`;

export const StyledGridDiv = styled.div<{ $isTextShadowApplied: boolean }>`
  height: 100%;
  width: 100%;
  padding: 1rem;
  display: grid;
  grid-gap: 1.5rem;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(5, 1fr);
  ${({ $isTextShadowApplied }) =>
    $isTextShadowApplied && "text-shadow: rgba(0, 0, 0, 0.5) 0px 3px 6px;"};
  @media (min-width: ${ScreenSize.md}px) {
    grid-template-columns: repeat(3, 1fr);
  }
`;

const DefaultTextStyles = css`
  color: #ffffff;
  letter-spacing: 0.45px;
`;

const StyledHeadline = styled(H1)`
  ${DefaultTextStyles};
  grid-row: 2 / 3;
  grid-column: 1 / 3;
  align-self: start;
  margin: 0;
  line-height: 3.5rem;
  font-weight: 600;
  text-transform: none;
  font-family: "urw-din-semi-condensed", sans-serif;
`;

const StyledTextArea = styled(P)`
  ${DefaultTextStyles};
  grid-column: 1 / -1;
  grid-row-start: 3;
  align-self: end;
  max-width: none;
  margin: 0;
  font-weight: 500;
  line-height: 1.5rem;
  font-size: 1.25rem;
`;

const StyledMiceType = styled(P)`
  ${DefaultTextStyles};
  grid-column: 1 / 5;
  grid-row: 5 / 6;
  align-self: start;
  font-size: 0.9rem;
  line-height: 1.2rem;
  font-weight: 400;

  @media (min-width: ${ScreenSize.md}px) {
    grid-column: 1 / 2;
    max-width: 12rem;
  }
`;

export const HeroBanner: React.FC<HeroBannerProps> = ({
  image,
  isTextShadowApplied = false,
  headline,
  miceType,
  textArea,
  // ButtonGroup
}) => {
  const hasHeadline = headline !== undefined && headline !== "";
  const hasMiceType = miceType !== undefined && miceType !== "";
  const hasTextArea = textArea !== undefined && textArea !== "";

  return (
    <HeroSection data-testid="hero-background" image={image.src}>
      <StyledGridDiv $isTextShadowApplied={isTextShadowApplied}>
        {hasHeadline && (
          <StyledHeadline className="tk-urw-din-semi-condensed" louder>
            {headline}
          </StyledHeadline>
        )}
        {hasTextArea && <StyledTextArea>{textArea}</StyledTextArea>}
        {hasMiceType && <StyledMiceType>{miceType}</StyledMiceType>}
      </StyledGridDiv>
    </HeroSection>
  );
};
