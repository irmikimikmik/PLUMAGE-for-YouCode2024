import React from "react";
import { render, fireEvent } from "@testing-library/react";
import { Table, type TableProps } from "./Table";
import "@testing-library/jest-dom";

const mockProps: TableProps = {
  category: "Category",
  disclaimer: "Disclaimer",
  tables: [
    {
      description: "Description 1",
      measuringType: "Measuring Type 1",
      table: [
        ["Header 1", "Header 2"],
        ["Value 1", "Value 2"],
      ],
    },
    {
      description: "Description 2",
      measuringType: "Measuring Type 2",
      table: [
        ["Header 1", "Header 2"],
        ["Value 1", "Value 2"],
      ],
    },
  ],
  title: "Title",
};

describe("Table", () => {
  it("should render the category, title, and buttons", () => {
    const { getByText } = render(<Table {...mockProps} />);
    expect(getByText(mockProps.category)).toBeInTheDocument();
    expect(getByText(mockProps.title)).toBeInTheDocument();
    if (mockProps.tables != null) {
      expect(getByText(mockProps.tables[0].measuringType)).toBeInTheDocument();
      expect(getByText(mockProps.tables[1].measuringType)).toBeInTheDocument();
    }
  });

  it("should render the table for the active button", () => {
    const { getByText } = render(<Table {...mockProps} />);
    if (mockProps.tables != null) {
      fireEvent.click(getByText(mockProps.tables[1].measuringType));
      expect(getByText(mockProps.tables[1].table[0][0])).toBeInTheDocument();
      expect(getByText(mockProps.tables[1].table[0][1])).toBeInTheDocument();
      expect(getByText(mockProps.tables[1].table[1][0])).toBeInTheDocument();
      expect(getByText(mockProps.tables[1].table[1][1])).toBeInTheDocument();
    }
  });
});
