import React, { useState } from "react";
import type { Meta, StoryObj } from "@storybook/react";
import { Pagination } from "./Pagination";
import { jobMockData } from "./__mocks__/jobMockData";

const meta: Meta<typeof Pagination> = {
  component: Pagination,
  title: "Design System/Organisms/Pagination",
  argTypes: {},
};

export default meta;

type Story = StoryObj<typeof Pagination>;

export const Default: Story = {
  render: () => {
    const itemsPerPage = 10;
    const [currentPage, setCurrentPage] = useState(1);
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    const jobsOnCurrentPage = jobMockData.slice(startIndex, endIndex);

    const handlePageChange = (newPage: number): void => {
      setCurrentPage(newPage);
    };

    return (
      <>
        <Pagination
          currentPage={currentPage}
          setCurrentPage={setCurrentPage}
          totalPages={Math.ceil(jobMockData.length / itemsPerPage)}
          handlePrevPage={() => {
            handlePageChange(currentPage - 1);
          }}
          handleNextPage={() => {
            handlePageChange(currentPage + 1);
          }}
          textChildren="1 - 10 of 78"
        />
        <ul>
          {jobsOnCurrentPage.map((job) => (
            <li key={job.id}>
              <a href={job.url} target="_blank" rel="noopener noreferrer">
                {job.title}
              </a>
              <p>Location: {job.location}</p>
              <p>Team: {job.team}</p>
            </li>
          ))}
        </ul>
      </>
    );
  },
  args: {},
};
