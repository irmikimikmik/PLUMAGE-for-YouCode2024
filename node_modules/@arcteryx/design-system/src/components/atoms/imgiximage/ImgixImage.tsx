import React from "react";
import "lazysizes";
import "lazysizes/plugins/attrchange/ls.attrchange";
import "lazysizes/plugins/parent-fit/ls.parent-fit";
import Imgix from "react-imgix";
import { generateImgixConfig, type ImgixConfig } from "./helpers";
import { type ImgixImageProps } from "./ImgixImage.types";

export const ImgixImage: React.FC<ImgixImageProps> = ({
  alt,
  // You must pass in the className if you want to use Styled-Components in a parent component to control the styles here
  className,
  height,
  quality = 75,
  shouldCompress = true,
  shouldEnhance = true,
  shouldLazyLoad = false,
  sizes = "100vw",
  src,
  width,
}) => {
  const {
    attributeConfig,
    commonImgixProps,
    lqipSource,
    imageClassName,
  }: ImgixConfig = generateImgixConfig({
    shouldLazyLoad,
    shouldCompress,
    shouldEnhance,
    quality,
    src,
  });

  let imgixClassName = imageClassName;

  // Check if className is not null or undefined
  if (className !== null && className !== undefined) {
    // Check if className is of type string and not just whitespace
    if (typeof className === "string" && className.trim() !== "") {
      imgixClassName += ` ${className.trim()}`;
    }
  }

  return (
    <Imgix
      src={src}
      sizes={sizes}
      imgixParams={commonImgixProps}
      attributeConfig={attributeConfig}
      htmlAttributes={{ alt, src: lqipSource }}
      className={imgixClassName}
      height={height}
      width={width}
    />
  );
};
