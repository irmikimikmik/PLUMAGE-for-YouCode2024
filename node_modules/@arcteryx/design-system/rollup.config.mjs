// Importing the necessary Rollup plugins
import resolve from "@rollup/plugin-node-resolve"; // Resolves node_modules dependencies
import commonjs from "@rollup/plugin-commonjs"; // Converts CommonJS modules to ES6
import typescript from "@rollup/plugin-typescript"; // Compiles TypeScript to JavaScript
import dts from "rollup-plugin-dts"; // Generates TypeScript definition files
import terser from "@rollup/plugin-terser"; // Minifies JavaScript code
import peerDepsExternal from "rollup-plugin-peer-deps-external"; // Excludes peer dependencies from the bundle
import postcss from "rollup-plugin-postcss";

// Exporting an array of Rollup configurations
export default [
  {
    // Configuration for the main bundle
    input: "src/index.ts", // Entry point for the bundle
    output: {
      dir: "dist/esm",
      format: "esm",
      sourcemap: true,
    },
    plugins: [
      peerDepsExternal(), // Excludes peer dependencies from the bundle
      resolve(), // Resolves node_modules dependencies
      postcss(),
      commonjs(), // Converts CommonJS modules to ES6
      typescript({
        tsconfig: "./tsconfig.prod.json",
        declaration: true,
        declarationDir: "./dist/esm/types",
      }), // Compiles TypeScript to JavaScript
      terser(), // Minifies JavaScript code
    ],
    external: ["react", "react-dom", "styled-components", "classnames"], // Excludes these packages from the bundle
  },
  {
    // Configuration for the main bundle
    input: "src/index.ts", // Entry point for the bundle
    output: {
      dir: "dist/cjs",
      format: "cjs",
      sourcemap: true,
      interop: "auto",
    },
    plugins: [
      peerDepsExternal(), // Excludes peer dependencies from the bundle
      resolve(), // Resolves node_modules dependencies
      postcss(),
      commonjs(), // Converts CommonJS modules to ES6
      typescript({
        tsconfig: "./tsconfig.prod.json",
        declaration: true,
        declarationDir: "./dist/cjs/types",
      }), // Compiles TypeScript to JavaScript
      terser(), // Minifies JavaScript code
    ],
    external: ["react", "react-dom", "styled-components", "classnames"], // Excludes these packages from the bundle
  },
  {
    // Configuration for the TypeScript definition file
    input: "dist/esm/types/index.d.ts", // Entry point for the TypeScript definition file
    output: [{ file: "dist/types.d.ts", format: "es" }], // Output file path and format
    external: [/\.css$/], // ignore .scss file
    plugins: [dts()], // Generates the TypeScript definition file
  },
];
